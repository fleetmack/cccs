create or replace PACKAGE "EDW_STUD_CHRT_DIM_ACAD_TIME"  AS

-- Map Generation Timestamp
get_generation_date      VARCHAR2(100) := 'Fri Jan 31 15:46:12 MST 2014';

-- Map runtime identification id
OWB$MAP_OBJECT_ID             VARCHAR2(32) := '';

-- Auditing mode constants
AUDIT_NONE                    CONSTANT BINARY_INTEGER := 0;
AUDIT_STATISTICS              CONSTANT BINARY_INTEGER := 1;
AUDIT_ERROR_DETAILS           CONSTANT BINARY_INTEGER := 2;
AUDIT_COMPLETE                CONSTANT BINARY_INTEGER := 3;

-- Operating mode constants
MODE_SET                      CONSTANT BINARY_INTEGER := 0;
MODE_ROW                      CONSTANT BINARY_INTEGER := 1;
MODE_ROW_TARGET               CONSTANT BINARY_INTEGER := 2;
MODE_SET_FAILOVER_ROW         CONSTANT BINARY_INTEGER := 3;
MODE_SET_FAILOVER_ROW_TARGET  CONSTANT BINARY_INTEGER := 4;

-- Variables for auditing
get_runtime_audit_id          NUMBER(22) := 0;
get_audit_detail_id           NUMBER(22) := 0;
get_audit_detail_type_id      NUMBER(22) := 0;
get_audit_level               BINARY_INTEGER := AUDIT_ERROR_DETAILS;
get_job_audit                 BOOLEAN := TRUE; 
get_cycle_date                CONSTANT DATE := SYSDATE;
get_lob_uoid                  CONSTANT VARCHAR2(40) := 'F14CC0123EDD7D66E040F00AA4443159';
get_model_name                CONSTANT VARCHAR2(40) := '"EDW_STUD_CHRT_DIM_ACAD_TIME"';
get_purge_group               VARCHAR2(40) := 'WB';
rowkey_counter                NUMBER(22) := 1;

-- Processing variables
get_selected                  NUMBER(22) := 0;
get_inserted                  NUMBER(22) := 0;
get_updated                   NUMBER(22) := 0;
get_deleted                   NUMBER(22) := 0;
get_merged                    NUMBER(22) := 0;
get_errors                    NUMBER(22) := 0;
get_logical_errors            NUMBER(22) := 0;
get_abort                     BOOLEAN    := FALSE;
get_abort_procedure           BOOLEAN    := FALSE; -- Causes the current procedure to be aborted, but not the entire map
get_trigger_success           BOOLEAN    := TRUE;
get_read_success              BOOLEAN    := TRUE;
get_status                    NUMBER(22) := 0;
get_column_seq                NUMBER(22) := 0;

get_processed                 NUMBER(22) := 0;
get_total_processed_rowcount  NUMBER(22) := 0;
get_chunk_iterator            NUMBER(22) := 0;
get_error_ratio               NUMBER(22) := 0;

get_audit_id                  NUMBER(22) := 0;

get_max_errors                NUMBER(22) := 0;
get_commit_frequency          NUMBER(22) := 1000;
get_operating_mode            BINARY_INTEGER := MODE_SET_FAILOVER_ROW;
get_table_function            BOOLEAN := false;
get_global_names              VARCHAR2(10) := 'FALSE';
check_record_cnt              NUMBER(22) := 0;
sql_stmt                      VARCHAR2(32767);
error_stmt                    VARCHAR2(2000);

-- Variable related to TF opertor
owb_temp_variable1       NUMBER(22);

-- Variables related to AW Load
"AWLOADLOAD_clob" clob;
"AWLOADLOAD_str" Varchar2(1000);

---- Begin Variables related to trickle feed maps
-- Variables related to LCR processing
lcr                           SYS.LCR$_ROW_RECORD := null;
lcr_original                  SYS.LCR$_ROW_RECORD := null;
lcr_old_values                SYS.LCR$_ROW_LIST   := null;
lcr_new_values                SYS.LCR$_ROW_LIST   := null;
lcr_new_old_values            SYS.LCR$_ROW_LIST   := null;

-- Variables related to message_event processing
message_event                 SYS.ANYDATA         := null;

-- Variables related to Chunking and parallel processing

start_range_id                NUMBER;
p_range_id                    NUMBER;
end_range_id                  NUMBER;
start_rowid                   ROWID;
end_rowid                     ROWID; 
chunksize                     PLS_INTEGER := NULL;
chunking_result               VARCHAR2(2000);
-- Variables related to trickle feed auditing and error handling
last_txn_id                   VARCHAR2(22)        := '';
is_session_initialized        BOOLEAN             := false;
last_error_number             NUMBER;
last_error_message            VARCHAR2(2000);
---- End Variables related to trickle feed maps

-- Special variables for controlling map execution
get_use_hc                    BOOLEAN    := FALSE;
get_no_commit                 BOOLEAN    := FALSE;
get_enable_parallel_dml       BOOLEAN    := TRUE;

TYPE a_table_to_analyze_type IS RECORD (
                                  ownname          VARCHAR2(30),
                                  tabname          VARCHAR2(30),
                                  estimate_percent NUMBER,
                                  granularity      VARCHAR2(10),
                                  cascade          BOOLEAN,
                                  degree           NUMBER);
TYPE tables_to_analyze_type IS TABLE OF a_table_to_analyze_type INDEX BY BINARY_INTEGER;
tables_to_analyze  tables_to_analyze_type;
get_rows_processed            BOOLEAN    := FALSE;

-- Buffer usage variables
TYPE t_get_buffer_done     IS TABLE OF BOOLEAN INDEX BY BINARY_INTEGER;
get_buffer_done            t_get_buffer_done;
get_buffer_done_index      BINARY_INTEGER := 1;

-- Bulk processing variables
get_bulk_size                 NATURAL := 1000;
get_bulk_loop_count           NATURAL := NULL;

-- DML Exceptions
checked_table_not_empty       EXCEPTION;
PRAGMA EXCEPTION_INIT(checked_table_not_empty, -111);
invalid_dml                   EXCEPTION;
PRAGMA EXCEPTION_INIT(invalid_dml, -112);

-- Status variable for Batch cursors
"WDT_ACADEMIC_TIME_St" Boolean;


-- Package global declarations




-- Function Main -- Entry point in package "EDW_STUD_CHRT_DIM_ACAD_TIME"
--------------------------------------------------
-- Function Main: Should only be called by OWB. --
--------------------------------------------------

FUNCTION Main(p_env IN OWBSYS.WB_RT_MAPAUDIT.WB_RT_NAME_VALUES)  RETURN NUMBER;  

-- Close cursors procedure:
PROCEDURE Close_Cursors;

-------------------------------------------------
-- Procedure Main:                             --
-- 1. An entry point for this map.             --
-- 2. Can be called by OWB user from SQL*Plus  -- 
--    or from user applications.               --
-- 3. This procedure can run even when the     --
--    runtime service is not running.          -- 
-------------------------------------------------
PROCEDURE Main(p_status OUT VARCHAR2,
               p_max_no_of_errors IN VARCHAR2 DEFAULT NULL,
               p_commit_frequency IN VARCHAR2 DEFAULT NULL,
               p_operating_mode   IN VARCHAR2 DEFAULT NULL,
               p_bulk_size        IN VARCHAR2 DEFAULT NULL,
               p_audit_level      IN VARCHAR2 DEFAULT NULL,
               p_purge_group      IN VARCHAR2 DEFAULT NULL,
               p_job_audit        IN VARCHAR2 DEFAULT 'TRUE')
;







END "EDW_STUD_CHRT_DIM_ACAD_TIME";
/
create or replace PACKAGE BODY "EDW_STUD_CHRT_DIM_ACAD_TIME" AS

-- Define cursors here so that they have global scope within the package (for debugger)

---------------------------------------------------------------------------
--
-- "JOINER_c" Cursor declaration 
--
---------------------------------------------------------------------------
CURSOR "JOINER_c" IS
 SELECT
/* JOINER.OUTGRP1 */
  "INGRP1"."ACADEMIC_PERIOD" "ACADEMIC_PERIOD",
  "INGRP1"."ACADEMIC_PERIOD_SD" "ACADEMIC_PERIOD_SD",
  "INGRP1"."ACADEMIC_PERIOD_LD" "ACADEMIC_PERIOD_LD",
  "INGRP1"."ACADEMIC_PERIOD_BEGIN_DATE" "ACADEMIC_PERIOD_BEGIN_DATE",
  "INGRP1"."ACADEMIC_PERIOD_END_DATE" "ACADEMIC_PERIOD_END_DATE",
  "INGRP1"."ACADEMIC_YEAR" "ACADEMIC_YEAR",
  "INGRP1"."ACADEMIC_YEAR_SD" "ACADEMIC_YEAR_SD",
  "INGRP1"."ACADEMIC_YEAR_LD" "ACADEMIC_YEAR_LD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_VALUE" "USER_ATTRIBUTE_01",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_SHORT" "USER_ATTRIBUTE_01_SD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_LONG" "USER_ATTRIBUTE_01_LD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_VALUE" "USER_ATTRIBUTE_02",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_SHORT" "USER_ATTRIBUTE_02_SD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_LONG" "USER_ATTRIBUTE_02_LD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_VALUE" "USER_ATTRIBUTE_03",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_SHORT" "USER_ATTRIBUTE_03_SD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_LONG" "USER_ATTRIBUTE_03_LD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_VALUE" "USER_ATTRIBUTE_04",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_SHORT" "USER_ATTRIBUTE_04_SD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_LONG" "USER_ATTRIBUTE_04_LD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_VALUE" "USER_ATTRIBUTE_05",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_SHORT" "USER_ATTRIBUTE_05_SD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_LONG" "USER_ATTRIBUTE_05_LD"
FROM
  (SELECT
/* SET_OPERATION.OUTGRP1 */
  "SET_OPERATION"."ACADEMIC_PERIOD" "ACADEMIC_PERIOD",
  "SET_OPERATION"."ACADEMIC_PERIOD_SD" "ACADEMIC_PERIOD_SD",
  "SET_OPERATION"."ACADEMIC_PERIOD_LD" "ACADEMIC_PERIOD_LD",
  "SET_OPERATION"."ACADEMIC_PERIOD_BEGIN_DATE" "ACADEMIC_PERIOD_BEGIN_DATE",
  "SET_OPERATION"."ACADEMIC_PERIOD_END_DATE" "ACADEMIC_PERIOD_END_DATE",
  "SET_OPERATION"."ACADEMIC_YEAR" "ACADEMIC_YEAR",
  "SET_OPERATION"."ACADEMIC_YEAR_SD" "ACADEMIC_YEAR_SD",
  "SET_OPERATION"."ACADEMIC_YEAR_LD" "ACADEMIC_YEAR_LD"
FROM
  (SELECT
  "ACADEMIC_PERIOD" "ACADEMIC_PERIOD",
  "ACADEMIC_PERIOD_SD" "ACADEMIC_PERIOD_SD",
  "ACADEMIC_PERIOD_LD" "ACADEMIC_PERIOD_LD",
  "ACADEMIC_PERIOD_BEGIN_DATE" "ACADEMIC_PERIOD_BEGIN_DATE",
  "ACADEMIC_PERIOD_END_DATE" "ACADEMIC_PERIOD_END_DATE",
  "ACADEMIC_YEAR" "ACADEMIC_YEAR",
  "ACADEMIC_YEAR_SD" "ACADEMIC_YEAR_SD",
  "ACADEMIC_YEAR_LD" "ACADEMIC_YEAR_LD"
FROM
  (SELECT
/* PIVOT.OUTGRP1 */
  "PIVOT"."ACADEMIC_PERIOD_WV" "ACADEMIC_PERIOD",
  "PIVOT"."ACADEMIC_PERIOD_SD$1" "ACADEMIC_PERIOD_SD",
  "PIVOT"."ACADEMIC_PERIOD_LD$1" "ACADEMIC_PERIOD_LD",
  "PIVOT"."ACADEMIC_PERIOD_BEGIN_DATE$1" "ACADEMIC_PERIOD_BEGIN_DATE",
  "PIVOT"."ACADEMIC_PERIOD_END_DATE$1" "ACADEMIC_PERIOD_END_DATE",
  "PIVOT"."ACADEMIC_YEAR$1" "ACADEMIC_YEAR",
  "PIVOT"."ACADEMIC_YEAR_SD$1" "ACADEMIC_YEAR_SD",
  "PIVOT"."ACADEMIC_YEAR_LD$1" "ACADEMIC_YEAR_LD"
FROM
  (SELECT
/* OPERATOR PIVOT: TRANSFORM */
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_PERIOD_WV" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_PERIOD_WV" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_PERIOD_WV" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_PERIOD_WV" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_PERIOD_WV" END "ACADEMIC_PERIOD_WV",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_PERIOD_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_PERIOD_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_PERIOD_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_PERIOD_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_PERIOD_SD" END "ACADEMIC_PERIOD_SD$1",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_PERIOD_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_PERIOD_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_PERIOD_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_PERIOD_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_PERIOD_LD" END "ACADEMIC_PERIOD_LD$1",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_PERIOD_BEGIN_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_PERIOD_BEGIN_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_PERIOD_BEGIN_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_PERIOD_BEGIN_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_PERIOD_BEGIN_DATE" END "ACADEMIC_PERIOD_BEGIN_DATE$1",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_PERIOD_END_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_PERIOD_END_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_PERIOD_END_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_PERIOD_END_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_PERIOD_END_DATE" END "ACADEMIC_PERIOD_END_DATE$1",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_YEAR" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_YEAR" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_YEAR" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_YEAR" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_YEAR" END "ACADEMIC_YEAR$1",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_YEAR_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_YEAR_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_YEAR_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_YEAR_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_YEAR_SD" END "ACADEMIC_YEAR_SD$1",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_YEAR_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_YEAR_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_YEAR_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_YEAR_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_YEAR_LD" END "ACADEMIC_YEAR_LD$1"
FROM
  (SELECT
  0 "ID"
FROM
  DUAL  
UNION ALL
SELECT
  1 "ID"
FROM
  DUAL  
UNION ALL
SELECT
  2 "ID"
FROM
  DUAL  
UNION ALL
SELECT
  3 "ID"
FROM
  DUAL  
UNION ALL
SELECT
  4 "ID"
FROM
  DUAL  ) "PIVOT_ROW_GENERATOR" /* OPERATOR PIVOT: PIVOT ROW GENERATOR */,
  (SELECT
/*+ PARALLEL ("WTT_STUDENT_COHORT_CLEAN",8) */
/* WTT_STUDENT_COHORT_CLEAN.INOUTGRP1 */
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_PERIOD_WV" "ACADEMIC_PERIOD_WV",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_PERIOD_SD" "ACADEMIC_PERIOD_SD",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_PERIOD_LD" "ACADEMIC_PERIOD_LD",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_PERIOD_BEGIN_DATE" "ACADEMIC_PERIOD_BEGIN_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_PERIOD_END_DATE" "ACADEMIC_PERIOD_END_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_YEAR" "ACADEMIC_YEAR",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_YEAR_SD" "ACADEMIC_YEAR_SD",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_YEAR_LD" "ACADEMIC_YEAR_LD",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_PERIOD_WV" "S_ACADEMIC_PERIOD_WV",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_PERIOD_SD" "S_ACADEMIC_PERIOD_SD",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_PERIOD_LD" "S_ACADEMIC_PERIOD_LD",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_PERIOD_BEGIN_DATE" "S_ACADEMIC_PERIOD_BEGIN_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_PERIOD_END_DATE" "S_ACADEMIC_PERIOD_END_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_YEAR" "S_ACADEMIC_YEAR",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_YEAR_SD" "S_ACADEMIC_YEAR_SD",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_YEAR_LD" "S_ACADEMIC_YEAR_LD",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_PERIOD_WV" "E_ACADEMIC_PERIOD_WV",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_PERIOD_SD" "E_ACADEMIC_PERIOD_SD",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_PERIOD_LD" "E_ACADEMIC_PERIOD_LD",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_PERIOD_BEGIN_DATE" "E_ACADEMIC_PERIOD_BEGIN_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_PERIOD_END_DATE" "E_ACADEMIC_PERIOD_END_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_YEAR" "E_ACADEMIC_YEAR",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_YEAR_SD" "E_ACADEMIC_YEAR_SD",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_YEAR_LD" "E_ACADEMIC_YEAR_LD",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_PERIOD_WV" "CS_ACADEMIC_PERIOD_WV",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_PERIOD_SD" "CS_ACADEMIC_PERIOD_SD",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_PERIOD_LD" "CS_ACADEMIC_PERIOD_LD",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_PERIOD_BEGIN_DATE" "CS_ACADEMIC_PERIOD_BEGIN_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_PERIOD_END_DATE" "CS_ACADEMIC_PERIOD_END_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_YEAR" "CS_ACADEMIC_YEAR",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_YEAR_SD" "CS_ACADEMIC_YEAR_SD",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_YEAR_LD" "CS_ACADEMIC_YEAR_LD",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_PERIOD_WV" "CE_ACADEMIC_PERIOD_WV",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_PERIOD_SD" "CE_ACADEMIC_PERIOD_SD",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_PERIOD_LD" "CE_ACADEMIC_PERIOD_LD",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_PERIOD_BEGIN_DATE" "CE_ACADEMIC_PERIOD_BEGIN_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_PERIOD_END_DATE" "CE_ACADEMIC_PERIOD_END_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_YEAR" "CE_ACADEMIC_YEAR",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_YEAR_SD" "CE_ACADEMIC_YEAR_SD",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_YEAR_LD" "CE_ACADEMIC_YEAR_LD"
FROM
  "EDWSTG"."WTT_STUDENT_COHORT_CLEAN"  "WTT_STUDENT_COHORT_CLEAN") "PIVOT_SOURCE" /* OPERATOR PIVOT */) "PIVOT" 
MINUS /* OPERATOR SET_OPERATION */
SELECT
/* WDT_ACADEMIC_TIME_1.INOUTGRP1 */
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_PERIOD" "ACADEMIC_PERIOD",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_PERIOD_SD" "ACADEMIC_PERIOD_SD",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_PERIOD_LD" "ACADEMIC_PERIOD_LD",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_PERIOD_BEGIN_DATE" "ACADEMIC_PERIOD_BEGIN_DATE",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_PERIOD_END_DATE" "ACADEMIC_PERIOD_END_DATE",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_YEAR" "ACADEMIC_YEAR",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_YEAR_SD" "ACADEMIC_YEAR_SD",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_YEAR_LD" "ACADEMIC_YEAR_LD"
FROM
  "WDT_ACADEMIC_TIME"  "WDT_ACADEMIC_TIME_1")  ) "SET_OPERATION" ) "INGRP1" 
,
"EDWSTG"."WCV_DEFAULT_VALUES"  "WCV_DEFAULT_VALUES"
  WHERE 
  ( 1=1/* OPERATOR JOINER JOIN CONDITION */ ) ; 

---------------------------------------------------------------------------
--
-- "JOINER_c$1" Cursor declaration 
--
---------------------------------------------------------------------------
CURSOR "JOINER_c$1" IS
 SELECT
/* JOINER.OUTGRP1 */
  "INGRP1"."ACADEMIC_PERIOD" "ACADEMIC_PERIOD",
  "INGRP1"."ACADEMIC_PERIOD_SD" "ACADEMIC_PERIOD_SD",
  "INGRP1"."ACADEMIC_PERIOD_LD" "ACADEMIC_PERIOD_LD",
  "INGRP1"."ACADEMIC_PERIOD_BEGIN_DATE" "ACADEMIC_PERIOD_BEGIN_DATE",
  "INGRP1"."ACADEMIC_PERIOD_END_DATE" "ACADEMIC_PERIOD_END_DATE",
  "INGRP1"."ACADEMIC_YEAR" "ACADEMIC_YEAR",
  "INGRP1"."ACADEMIC_YEAR_SD" "ACADEMIC_YEAR_SD",
  "INGRP1"."ACADEMIC_YEAR_LD" "ACADEMIC_YEAR_LD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_VALUE" "USER_ATTRIBUTE_01",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_SHORT" "USER_ATTRIBUTE_01_SD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_LONG" "USER_ATTRIBUTE_01_LD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_VALUE" "USER_ATTRIBUTE_02",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_SHORT" "USER_ATTRIBUTE_02_SD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_LONG" "USER_ATTRIBUTE_02_LD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_VALUE" "USER_ATTRIBUTE_03",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_SHORT" "USER_ATTRIBUTE_03_SD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_LONG" "USER_ATTRIBUTE_03_LD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_VALUE" "USER_ATTRIBUTE_04",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_SHORT" "USER_ATTRIBUTE_04_SD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_LONG" "USER_ATTRIBUTE_04_LD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_VALUE" "USER_ATTRIBUTE_05",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_SHORT" "USER_ATTRIBUTE_05_SD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_LONG" "USER_ATTRIBUTE_05_LD"
FROM
  (SELECT
/* SET_OPERATION.OUTGRP1 */
  "SET_OPERATION$1"."ACADEMIC_PERIOD$1" "ACADEMIC_PERIOD",
  "SET_OPERATION$1"."ACADEMIC_PERIOD_SD$2" "ACADEMIC_PERIOD_SD",
  "SET_OPERATION$1"."ACADEMIC_PERIOD_LD$2" "ACADEMIC_PERIOD_LD",
  "SET_OPERATION$1"."ACADEMIC_PERIOD_BEGIN_DATE$2" "ACADEMIC_PERIOD_BEGIN_DATE",
  "SET_OPERATION$1"."ACADEMIC_PERIOD_END_DATE$2" "ACADEMIC_PERIOD_END_DATE",
  "SET_OPERATION$1"."ACADEMIC_YEAR$2" "ACADEMIC_YEAR",
  "SET_OPERATION$1"."ACADEMIC_YEAR_SD$2" "ACADEMIC_YEAR_SD",
  "SET_OPERATION$1"."ACADEMIC_YEAR_LD$2" "ACADEMIC_YEAR_LD"
FROM
  (SELECT
  "ACADEMIC_PERIOD" "ACADEMIC_PERIOD$1",
  "ACADEMIC_PERIOD_SD" "ACADEMIC_PERIOD_SD$2",
  "ACADEMIC_PERIOD_LD" "ACADEMIC_PERIOD_LD$2",
  "ACADEMIC_PERIOD_BEGIN_DATE" "ACADEMIC_PERIOD_BEGIN_DATE$2",
  "ACADEMIC_PERIOD_END_DATE" "ACADEMIC_PERIOD_END_DATE$2",
  "ACADEMIC_YEAR" "ACADEMIC_YEAR$2",
  "ACADEMIC_YEAR_SD" "ACADEMIC_YEAR_SD$2",
  "ACADEMIC_YEAR_LD" "ACADEMIC_YEAR_LD$2"
FROM
  (SELECT
/* PIVOT.OUTGRP1 */
  "PIVOT$1"."ACADEMIC_PERIOD_WV$1" "ACADEMIC_PERIOD",
  "PIVOT$1"."ACADEMIC_PERIOD_SD$3" "ACADEMIC_PERIOD_SD",
  "PIVOT$1"."ACADEMIC_PERIOD_LD$3" "ACADEMIC_PERIOD_LD",
  "PIVOT$1"."ACADEMIC_PERIOD_BEGIN_DATE$3" "ACADEMIC_PERIOD_BEGIN_DATE",
  "PIVOT$1"."ACADEMIC_PERIOD_END_DATE$3" "ACADEMIC_PERIOD_END_DATE",
  "PIVOT$1"."ACADEMIC_YEAR$3" "ACADEMIC_YEAR",
  "PIVOT$1"."ACADEMIC_YEAR_SD$3" "ACADEMIC_YEAR_SD",
  "PIVOT$1"."ACADEMIC_YEAR_LD$3" "ACADEMIC_YEAR_LD"
FROM
  (SELECT
/* OPERATOR PIVOT: TRANSFORM */
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_PERIOD_WV" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_PERIOD_WV" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_PERIOD_WV" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_PERIOD_WV" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_PERIOD_WV" END "ACADEMIC_PERIOD_WV$1",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_PERIOD_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_PERIOD_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_PERIOD_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_PERIOD_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_PERIOD_SD" END "ACADEMIC_PERIOD_SD$3",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_PERIOD_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_PERIOD_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_PERIOD_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_PERIOD_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_PERIOD_LD" END "ACADEMIC_PERIOD_LD$3",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_PERIOD_BEGIN_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_PERIOD_BEGIN_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_PERIOD_BEGIN_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_PERIOD_BEGIN_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_PERIOD_BEGIN_DATE" END "ACADEMIC_PERIOD_BEGIN_DATE$3",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_PERIOD_END_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_PERIOD_END_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_PERIOD_END_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_PERIOD_END_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_PERIOD_END_DATE" END "ACADEMIC_PERIOD_END_DATE$3",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_YEAR" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_YEAR" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_YEAR" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_YEAR" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_YEAR" END "ACADEMIC_YEAR$3",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_YEAR_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_YEAR_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_YEAR_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_YEAR_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_YEAR_SD" END "ACADEMIC_YEAR_SD$3",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_YEAR_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_YEAR_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_YEAR_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_YEAR_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_YEAR_LD" END "ACADEMIC_YEAR_LD$3"
FROM
  (SELECT
  0 "ID"
FROM
  DUAL  
UNION ALL
SELECT
  1 "ID"
FROM
  DUAL  
UNION ALL
SELECT
  2 "ID"
FROM
  DUAL  
UNION ALL
SELECT
  3 "ID"
FROM
  DUAL  
UNION ALL
SELECT
  4 "ID"
FROM
  DUAL  ) "PIVOT_ROW_GENERATOR" /* OPERATOR PIVOT: PIVOT ROW GENERATOR */,
  (SELECT
/*+ PARALLEL ("WTT_STUDENT_COHORT_CLEAN",8) */
/* WTT_STUDENT_COHORT_CLEAN.INOUTGRP1 */
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_PERIOD_WV" "ACADEMIC_PERIOD_WV",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_PERIOD_SD" "ACADEMIC_PERIOD_SD",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_PERIOD_LD" "ACADEMIC_PERIOD_LD",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_PERIOD_BEGIN_DATE" "ACADEMIC_PERIOD_BEGIN_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_PERIOD_END_DATE" "ACADEMIC_PERIOD_END_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_YEAR" "ACADEMIC_YEAR",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_YEAR_SD" "ACADEMIC_YEAR_SD",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_YEAR_LD" "ACADEMIC_YEAR_LD",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_PERIOD_WV" "S_ACADEMIC_PERIOD_WV",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_PERIOD_SD" "S_ACADEMIC_PERIOD_SD",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_PERIOD_LD" "S_ACADEMIC_PERIOD_LD",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_PERIOD_BEGIN_DATE" "S_ACADEMIC_PERIOD_BEGIN_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_PERIOD_END_DATE" "S_ACADEMIC_PERIOD_END_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_YEAR" "S_ACADEMIC_YEAR",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_YEAR_SD" "S_ACADEMIC_YEAR_SD",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_YEAR_LD" "S_ACADEMIC_YEAR_LD",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_PERIOD_WV" "E_ACADEMIC_PERIOD_WV",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_PERIOD_SD" "E_ACADEMIC_PERIOD_SD",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_PERIOD_LD" "E_ACADEMIC_PERIOD_LD",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_PERIOD_BEGIN_DATE" "E_ACADEMIC_PERIOD_BEGIN_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_PERIOD_END_DATE" "E_ACADEMIC_PERIOD_END_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_YEAR" "E_ACADEMIC_YEAR",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_YEAR_SD" "E_ACADEMIC_YEAR_SD",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_YEAR_LD" "E_ACADEMIC_YEAR_LD",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_PERIOD_WV" "CS_ACADEMIC_PERIOD_WV",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_PERIOD_SD" "CS_ACADEMIC_PERIOD_SD",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_PERIOD_LD" "CS_ACADEMIC_PERIOD_LD",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_PERIOD_BEGIN_DATE" "CS_ACADEMIC_PERIOD_BEGIN_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_PERIOD_END_DATE" "CS_ACADEMIC_PERIOD_END_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_YEAR" "CS_ACADEMIC_YEAR",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_YEAR_SD" "CS_ACADEMIC_YEAR_SD",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_YEAR_LD" "CS_ACADEMIC_YEAR_LD",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_PERIOD_WV" "CE_ACADEMIC_PERIOD_WV",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_PERIOD_SD" "CE_ACADEMIC_PERIOD_SD",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_PERIOD_LD" "CE_ACADEMIC_PERIOD_LD",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_PERIOD_BEGIN_DATE" "CE_ACADEMIC_PERIOD_BEGIN_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_PERIOD_END_DATE" "CE_ACADEMIC_PERIOD_END_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_YEAR" "CE_ACADEMIC_YEAR",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_YEAR_SD" "CE_ACADEMIC_YEAR_SD",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_YEAR_LD" "CE_ACADEMIC_YEAR_LD"
FROM
  "EDWSTG"."WTT_STUDENT_COHORT_CLEAN"  "WTT_STUDENT_COHORT_CLEAN") "PIVOT_SOURCE" /* OPERATOR PIVOT */) "PIVOT$1" 
MINUS /* OPERATOR SET_OPERATION */
SELECT
/* WDT_ACADEMIC_TIME_1.INOUTGRP1 */
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_PERIOD" "ACADEMIC_PERIOD",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_PERIOD_SD" "ACADEMIC_PERIOD_SD",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_PERIOD_LD" "ACADEMIC_PERIOD_LD",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_PERIOD_BEGIN_DATE" "ACADEMIC_PERIOD_BEGIN_DATE",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_PERIOD_END_DATE" "ACADEMIC_PERIOD_END_DATE",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_YEAR" "ACADEMIC_YEAR",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_YEAR_SD" "ACADEMIC_YEAR_SD",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_YEAR_LD" "ACADEMIC_YEAR_LD"
FROM
  "WDT_ACADEMIC_TIME"  "WDT_ACADEMIC_TIME_1")  ) "SET_OPERATION$1" ) "INGRP1" 
,
"EDWSTG"."WCV_DEFAULT_VALUES"  "WCV_DEFAULT_VALUES"
  WHERE 
  ( 1=1/* OPERATOR JOINER JOIN CONDITION */ ) ; 


a_table_to_analyze a_table_to_analyze_type;



---------------------------------------------------------------------------
-- Function "WDT_ACADEMIC_TIME_Bat"
--   performs batch extraction
--   Returns TRUE on success
--   Returns FALSE on failure
---------------------------------------------------------------------------
FUNCTION "WDT_ACADEMIC_TIME_Bat"
 RETURN BOOLEAN IS
 batch_selected        NUMBER(22) := 0;
 batch_errors          NUMBER(22) := 0;
 batch_inserted        NUMBER(22) := 0;
  batch_deleted         NUMBER(22) := 0;
  batch_merged          NUMBER(22) := 0;
  batch_action          VARCHAR2(20);
  actual_owner          VARCHAR2(30);
  actual_name           VARCHAR2(30);
  num_fk_err            NUMBER(22);
  l_rowkey              NUMBER(22) := 0;
  l_table               VARCHAR2(30) := 'CREATE';
  l_rowid               ROWID;
  l_owner               VARCHAR2(30);
  l_tablename           VARCHAR2(30);
  l_constraint          VARCHAR2(30);
  sql_excp_stmt         VARCHAR2(32767);
  batch_exception       BOOLEAN := FALSE;
  get_map_num_rows      NUMBER(22) := 0;
  TYPE exceptionsCurType IS REF CURSOR;
  exceptions_cursor     exceptionsCurType;
  batch_auditd_id       NUMBER(22) := 0;

BEGIN
  IF get_abort THEN
    RETURN FALSE;
  END IF;
  get_abort_procedure := FALSE;
          IF NOT (get_audit_level = AUDIT_NONE) THEN
    batch_auditd_id := OWBSYS.WB_RT_MAPAUDIT.auditd_begin(  -- Template BatchAuditDetailBegin
      p_rta=>get_runtime_audit_id,
      p_step=>0,
      p_name=>'"WDT_ACADEMIC_TIME_Bat"',
      p_source=>'*',
      p_source_uoid=>'*',
      p_target=>'"WDT_ACADEMIC_TIME"',
      p_target_uoid=>'F14CC0123FC97D66E040F00AA4443159',
      p_stm=>NULL,p_info=>NULL,
      
      p_exec_mode=>MODE_SET
    );
    get_audit_detail_id := batch_auditd_id;
  	get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
    p_rtd=>get_audit_detail_id,
    p_parent_operator_uoid=>'F14CC012403F7D66E040F00AA4443159', -- Operator WTT_STUDENT_COHORT_CLEAN
    p_parent_object_name=>'WTT_STUDENT_COHORT_CLEAN',
    p_parent_object_uoid=>'F085A9588E159205E040F00AA444128A', -- Table WTT_STUDENT_COHORT_CLEAN
    p_parent_object_type=>'Table',
    p_object_name=>'WTT_STUDENT_COHORT_CLEAN',
    p_object_uoid=>'F085A9588E159205E040F00AA444128A', -- Table WTT_STUDENT_COHORT_CLEAN
    p_object_type=>'Table',
    p_location_uoid=>'F085808747D20042E040F00AA4445414' -- Location EDWSTG_LOCATION
  );
    	get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
    p_rtd=>get_audit_detail_id,
    p_parent_operator_uoid=>'F14CC0123FB27D66E040F00AA4443159', -- Operator WCV_DEFAULT_VALUES
    p_parent_object_name=>'WCV_DEFAULT_VALUES',
    p_parent_object_uoid=>'F085A9589FEA9205E040F00AA444128A', -- View WCV_DEFAULT_VALUES
    p_parent_object_type=>'View',
    p_object_name=>'WCV_DEFAULT_VALUES',
    p_object_uoid=>'F085A9589FEA9205E040F00AA444128A', -- View WCV_DEFAULT_VALUES
    p_object_type=>'View',
    p_location_uoid=>'F085808747D20042E040F00AA4445414' -- Location EDWSTG_LOCATION
  );
    	get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
    p_rtd=>get_audit_detail_id,
    p_parent_operator_uoid=>'DBD002C3CF3C7A29E04356251895A34F', -- Operator WCV_DEFAULT_VALUES
    p_parent_object_name=>'WCV_DEFAULT_VALUES',
    p_parent_object_uoid=>'ADA129584CBC36F5E04018955625060B', -- View WCV_DEFAULT_VALUES
    p_parent_object_type=>'View',
    p_object_name=>'WCV_DEFAULT_VALUES',
    p_object_uoid=>'ADA129584CBC36F5E04018955625060B', -- View WCV_DEFAULT_VALUES
    p_object_type=>'View',
    p_location_uoid=>'ADA0B2222EF50292E040189556257D87' -- EDWSTG_LOCATION
  );
    	get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
    p_rtd=>get_audit_detail_id,
    p_parent_operator_uoid=>'8EA04146AD0F2D12E0440003BAAC9CF3', -- Operator WTT_STUDENT_COHORT_CLEAN
    p_parent_object_name=>'WTT_STUDENT_COHORT_CLEAN',
    p_parent_object_uoid=>'8B7B34DE6B2E5599E0440003BAAC9CF3', -- Table WTT_STUDENT_COHORT_CLEAN
    p_parent_object_type=>'Table',
    p_object_name=>'WTT_STUDENT_COHORT_CLEAN',
    p_object_uoid=>'8B7B34DE6B2E5599E0440003BAAC9CF3', -- Table WTT_STUDENT_COHORT_CLEAN
    p_object_type=>'Table',
    p_location_uoid=>'8848749C75B34564E0440003BAAC9CF3' -- EDWSTG_LOCATION
  );
    	get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
    p_rtd=>get_audit_detail_id,
    p_parent_operator_uoid=>'89C2287E668C662EE0440003BAAC9CF3', -- Operator WDT_ACADEMIC_TIME
    p_parent_object_name=>'WDT_ACADEMIC_TIME',
    p_parent_object_uoid=>'884CA879230550E7E0440003BAAC9CF3', -- Table WDT_ACADEMIC_TIME
    p_parent_object_type=>'Table',
    p_object_name=>'WDT_ACADEMIC_TIME',
    p_object_uoid=>'884CA879230550E7E0440003BAAC9CF3', -- Table WDT_ACADEMIC_TIME
    p_object_type=>'Table',
    p_location_uoid=>'8848749C75C84564E0440003BAAC9CF3' -- EDWMGR_LOCATION
  );
    	get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
    p_rtd=>get_audit_detail_id,
    p_parent_operator_uoid=>'F14CC0123FC97D66E040F00AA4443159', -- Operator WDT_ACADEMIC_TIME
    p_parent_object_name=>'WDT_ACADEMIC_TIME',
    p_parent_object_uoid=>'F085A9581BE39205E040F00AA444128A', -- Table WDT_ACADEMIC_TIME
    p_parent_object_type=>'Table',
    p_object_name=>'WDT_ACADEMIC_TIME',
    p_object_uoid=>'F085A9581BE39205E040F00AA444128A', -- Table WDT_ACADEMIC_TIME
    p_object_type=>'Table',
    p_location_uoid=>'F085808747B70042E040F00AA4445414' -- Location EDWMGR_LOCATION
  );
    
  END IF;
  IF NOT get_use_hc AND NOT get_no_commit THEN
    COMMIT; -- commit no.26
  END IF;
        
  IF NOT get_use_hc AND NOT get_no_commit THEN
    IF get_enable_parallel_dml THEN
      EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    ELSE
      EXECUTE IMMEDIATE 'ALTER SESSION DISABLE PARALLEL DML';
    END IF;
  END IF;

  BEGIN
  
    IF NOT "WDT_ACADEMIC_TIME_St" THEN
    
      batch_action := 'BATCH MERGE';
batch_selected := SQL%ROWCOUNT;
MERGE
INTO
  "WDT_ACADEMIC_TIME" "WDT_ACADEMIC_TIME"
USING
  (SELECT
/* JOINER.OUTGRP1 */
  NULL "MERGE_COL_ALIAS",
  "INGRP1"."ACADEMIC_PERIOD" "ACADEMIC_PERIOD$2",
  "INGRP1"."ACADEMIC_PERIOD_SD" "ACADEMIC_PERIOD_SD$4",
  "INGRP1"."ACADEMIC_PERIOD_LD" "ACADEMIC_PERIOD_LD$4",
  "INGRP1"."ACADEMIC_PERIOD_BEGIN_DATE" "ACADEMIC_PERIOD_BEGIN_DATE$4",
  "INGRP1"."ACADEMIC_PERIOD_END_DATE" "ACADEMIC_PERIOD_END_DATE$4",
  "INGRP1"."ACADEMIC_YEAR" "ACADEMIC_YEAR$4",
  "INGRP1"."ACADEMIC_YEAR_SD" "ACADEMIC_YEAR_SD$4",
  "INGRP1"."ACADEMIC_YEAR_LD" "ACADEMIC_YEAR_LD$4",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_VALUE" "USER_ATTRIBUTE_01",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_SHORT" "USER_ATTRIBUTE_01_SD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_LONG" "USER_ATTRIBUTE_01_LD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_VALUE" "USER_ATTRIBUTE_02",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_SHORT" "USER_ATTRIBUTE_02_SD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_LONG" "USER_ATTRIBUTE_02_LD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_VALUE" "USER_ATTRIBUTE_03",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_SHORT" "USER_ATTRIBUTE_03_SD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_LONG" "USER_ATTRIBUTE_03_LD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_VALUE" "USER_ATTRIBUTE_04",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_SHORT" "USER_ATTRIBUTE_04_SD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_LONG" "USER_ATTRIBUTE_04_LD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_VALUE" "USER_ATTRIBUTE_05",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_SHORT" "USER_ATTRIBUTE_05_SD",
  "WCV_DEFAULT_VALUES"."NULL_CLEANSE_LONG" "USER_ATTRIBUTE_05_LD",
  'STUDENT_COHORT'/* ATTRIBUTE CONSTANT.OUTGRP1.SYSTEM_LOAD_PROCESS */ "SYSTEM_LOAD_PROCESS",
  NULL "MERGE_COL_ALIAS$1"
FROM
  (SELECT
/* SET_OPERATION.OUTGRP1 */
  "SET_OPERATION$2"."ACADEMIC_PERIOD$3" "ACADEMIC_PERIOD",
  "SET_OPERATION$2"."ACADEMIC_PERIOD_SD$5" "ACADEMIC_PERIOD_SD",
  "SET_OPERATION$2"."ACADEMIC_PERIOD_LD$5" "ACADEMIC_PERIOD_LD",
  "SET_OPERATION$2"."ACADEMIC_PERIOD_BEGIN_DATE$5" "ACADEMIC_PERIOD_BEGIN_DATE",
  "SET_OPERATION$2"."ACADEMIC_PERIOD_END_DATE$5" "ACADEMIC_PERIOD_END_DATE",
  "SET_OPERATION$2"."ACADEMIC_YEAR$5" "ACADEMIC_YEAR",
  "SET_OPERATION$2"."ACADEMIC_YEAR_SD$5" "ACADEMIC_YEAR_SD",
  "SET_OPERATION$2"."ACADEMIC_YEAR_LD$5" "ACADEMIC_YEAR_LD"
FROM
  (SELECT
  "ACADEMIC_PERIOD" "ACADEMIC_PERIOD$3",
  "ACADEMIC_PERIOD_SD" "ACADEMIC_PERIOD_SD$5",
  "ACADEMIC_PERIOD_LD" "ACADEMIC_PERIOD_LD$5",
  "ACADEMIC_PERIOD_BEGIN_DATE" "ACADEMIC_PERIOD_BEGIN_DATE$5",
  "ACADEMIC_PERIOD_END_DATE" "ACADEMIC_PERIOD_END_DATE$5",
  "ACADEMIC_YEAR" "ACADEMIC_YEAR$5",
  "ACADEMIC_YEAR_SD" "ACADEMIC_YEAR_SD$5",
  "ACADEMIC_YEAR_LD" "ACADEMIC_YEAR_LD$5"
FROM
  (SELECT
/* PIVOT.OUTGRP1 */
  "PIVOT$2"."ACADEMIC_PERIOD_WV$2" "ACADEMIC_PERIOD",
  "PIVOT$2"."ACADEMIC_PERIOD_SD$6" "ACADEMIC_PERIOD_SD",
  "PIVOT$2"."ACADEMIC_PERIOD_LD$6" "ACADEMIC_PERIOD_LD",
  "PIVOT$2"."ACADEMIC_PERIOD_BEGIN_DATE$6" "ACADEMIC_PERIOD_BEGIN_DATE",
  "PIVOT$2"."ACADEMIC_PERIOD_END_DATE$6" "ACADEMIC_PERIOD_END_DATE",
  "PIVOT$2"."ACADEMIC_YEAR$6" "ACADEMIC_YEAR",
  "PIVOT$2"."ACADEMIC_YEAR_SD$6" "ACADEMIC_YEAR_SD",
  "PIVOT$2"."ACADEMIC_YEAR_LD$6" "ACADEMIC_YEAR_LD"
FROM
  (SELECT
/* OPERATOR PIVOT: TRANSFORM */
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_PERIOD_WV" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_PERIOD_WV" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_PERIOD_WV" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_PERIOD_WV" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_PERIOD_WV" END "ACADEMIC_PERIOD_WV$2",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_PERIOD_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_PERIOD_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_PERIOD_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_PERIOD_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_PERIOD_SD" END "ACADEMIC_PERIOD_SD$6",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_PERIOD_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_PERIOD_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_PERIOD_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_PERIOD_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_PERIOD_LD" END "ACADEMIC_PERIOD_LD$6",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_PERIOD_BEGIN_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_PERIOD_BEGIN_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_PERIOD_BEGIN_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_PERIOD_BEGIN_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_PERIOD_BEGIN_DATE" END "ACADEMIC_PERIOD_BEGIN_DATE$6",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_PERIOD_END_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_PERIOD_END_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_PERIOD_END_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_PERIOD_END_DATE" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_PERIOD_END_DATE" END "ACADEMIC_PERIOD_END_DATE$6",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_YEAR" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_YEAR" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_YEAR" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_YEAR" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_YEAR" END "ACADEMIC_YEAR$6",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_YEAR_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_YEAR_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_YEAR_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_YEAR_SD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_YEAR_SD" END "ACADEMIC_YEAR_SD$6",
  CASE WHEN "PIVOT_ROW_GENERATOR"."ID" = 0 THEN "PIVOT_SOURCE"."ACADEMIC_YEAR_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 1 THEN "PIVOT_SOURCE"."S_ACADEMIC_YEAR_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 2 THEN "PIVOT_SOURCE"."E_ACADEMIC_YEAR_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 3 THEN "PIVOT_SOURCE"."CS_ACADEMIC_YEAR_LD" WHEN "PIVOT_ROW_GENERATOR"."ID" = 4 THEN "PIVOT_SOURCE"."CE_ACADEMIC_YEAR_LD" END "ACADEMIC_YEAR_LD$6"
FROM
  (SELECT
  0 "ID"
FROM
  DUAL  
UNION ALL
SELECT
  1 "ID"
FROM
  DUAL  
UNION ALL
SELECT
  2 "ID"
FROM
  DUAL  
UNION ALL
SELECT
  3 "ID"
FROM
  DUAL  
UNION ALL
SELECT
  4 "ID"
FROM
  DUAL  ) "PIVOT_ROW_GENERATOR" /* OPERATOR PIVOT: PIVOT ROW GENERATOR */,
  (SELECT
/*+ PARALLEL ("WTT_STUDENT_COHORT_CLEAN",8) */
/* WTT_STUDENT_COHORT_CLEAN.INOUTGRP1 */
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_PERIOD_WV" "ACADEMIC_PERIOD_WV",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_PERIOD_SD" "ACADEMIC_PERIOD_SD",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_PERIOD_LD" "ACADEMIC_PERIOD_LD",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_PERIOD_BEGIN_DATE" "ACADEMIC_PERIOD_BEGIN_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_PERIOD_END_DATE" "ACADEMIC_PERIOD_END_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_YEAR" "ACADEMIC_YEAR",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_YEAR_SD" "ACADEMIC_YEAR_SD",
  "WTT_STUDENT_COHORT_CLEAN"."ACADEMIC_YEAR_LD" "ACADEMIC_YEAR_LD",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_PERIOD_WV" "S_ACADEMIC_PERIOD_WV",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_PERIOD_SD" "S_ACADEMIC_PERIOD_SD",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_PERIOD_LD" "S_ACADEMIC_PERIOD_LD",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_PERIOD_BEGIN_DATE" "S_ACADEMIC_PERIOD_BEGIN_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_PERIOD_END_DATE" "S_ACADEMIC_PERIOD_END_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_YEAR" "S_ACADEMIC_YEAR",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_YEAR_SD" "S_ACADEMIC_YEAR_SD",
  "WTT_STUDENT_COHORT_CLEAN"."S_ACADEMIC_YEAR_LD" "S_ACADEMIC_YEAR_LD",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_PERIOD_WV" "E_ACADEMIC_PERIOD_WV",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_PERIOD_SD" "E_ACADEMIC_PERIOD_SD",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_PERIOD_LD" "E_ACADEMIC_PERIOD_LD",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_PERIOD_BEGIN_DATE" "E_ACADEMIC_PERIOD_BEGIN_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_PERIOD_END_DATE" "E_ACADEMIC_PERIOD_END_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_YEAR" "E_ACADEMIC_YEAR",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_YEAR_SD" "E_ACADEMIC_YEAR_SD",
  "WTT_STUDENT_COHORT_CLEAN"."E_ACADEMIC_YEAR_LD" "E_ACADEMIC_YEAR_LD",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_PERIOD_WV" "CS_ACADEMIC_PERIOD_WV",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_PERIOD_SD" "CS_ACADEMIC_PERIOD_SD",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_PERIOD_LD" "CS_ACADEMIC_PERIOD_LD",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_PERIOD_BEGIN_DATE" "CS_ACADEMIC_PERIOD_BEGIN_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_PERIOD_END_DATE" "CS_ACADEMIC_PERIOD_END_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_YEAR" "CS_ACADEMIC_YEAR",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_YEAR_SD" "CS_ACADEMIC_YEAR_SD",
  "WTT_STUDENT_COHORT_CLEAN"."CS_ACADEMIC_YEAR_LD" "CS_ACADEMIC_YEAR_LD",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_PERIOD_WV" "CE_ACADEMIC_PERIOD_WV",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_PERIOD_SD" "CE_ACADEMIC_PERIOD_SD",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_PERIOD_LD" "CE_ACADEMIC_PERIOD_LD",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_PERIOD_BEGIN_DATE" "CE_ACADEMIC_PERIOD_BEGIN_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_PERIOD_END_DATE" "CE_ACADEMIC_PERIOD_END_DATE",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_YEAR" "CE_ACADEMIC_YEAR",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_YEAR_SD" "CE_ACADEMIC_YEAR_SD",
  "WTT_STUDENT_COHORT_CLEAN"."CE_ACADEMIC_YEAR_LD" "CE_ACADEMIC_YEAR_LD"
FROM
  "EDWSTG"."WTT_STUDENT_COHORT_CLEAN"  "WTT_STUDENT_COHORT_CLEAN") "PIVOT_SOURCE" /* OPERATOR PIVOT */) "PIVOT$2" 
MINUS /* OPERATOR SET_OPERATION */
SELECT
/* WDT_ACADEMIC_TIME_1.INOUTGRP1 */
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_PERIOD" "ACADEMIC_PERIOD",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_PERIOD_SD" "ACADEMIC_PERIOD_SD",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_PERIOD_LD" "ACADEMIC_PERIOD_LD",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_PERIOD_BEGIN_DATE" "ACADEMIC_PERIOD_BEGIN_DATE",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_PERIOD_END_DATE" "ACADEMIC_PERIOD_END_DATE",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_YEAR" "ACADEMIC_YEAR",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_YEAR_SD" "ACADEMIC_YEAR_SD",
  "WDT_ACADEMIC_TIME_1"."ACADEMIC_YEAR_LD" "ACADEMIC_YEAR_LD"
FROM
  "WDT_ACADEMIC_TIME"  "WDT_ACADEMIC_TIME_1")  ) "SET_OPERATION$2" ) "INGRP1" 
,
"EDWSTG"."WCV_DEFAULT_VALUES"  "WCV_DEFAULT_VALUES"
  WHERE 
  ( 1=1/* OPERATOR JOINER JOIN CONDITION */ ) 
  )
    "MERGE_SUBQUERY"
ON (
  "WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD" = "MERGE_SUBQUERY"."ACADEMIC_PERIOD$2" AND
  "WDT_ACADEMIC_TIME"."ACADEMIC_YEAR" = "MERGE_SUBQUERY"."ACADEMIC_YEAR$4" AND
  "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01" = "MERGE_SUBQUERY"."USER_ATTRIBUTE_01" AND
  "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02" = "MERGE_SUBQUERY"."USER_ATTRIBUTE_02" AND
  "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03" = "MERGE_SUBQUERY"."USER_ATTRIBUTE_03" AND
  "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04" = "MERGE_SUBQUERY"."USER_ATTRIBUTE_04" AND
  "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05" = "MERGE_SUBQUERY"."USER_ATTRIBUTE_05"
   )
  
  WHEN MATCHED THEN
    UPDATE
    SET
                  "ACADEMIC_PERIOD_SD" = "MERGE_SUBQUERY"."ACADEMIC_PERIOD_SD$4",
  "ACADEMIC_PERIOD_LD" = "MERGE_SUBQUERY"."ACADEMIC_PERIOD_LD$4",
  "ACADEMIC_PERIOD_BEGIN_DATE" = "MERGE_SUBQUERY"."ACADEMIC_PERIOD_BEGIN_DATE$4",
  "ACADEMIC_PERIOD_END_DATE" = "MERGE_SUBQUERY"."ACADEMIC_PERIOD_END_DATE$4",
  "ACADEMIC_YEAR_SD" = "MERGE_SUBQUERY"."ACADEMIC_YEAR_SD$4",
  "ACADEMIC_YEAR_LD" = "MERGE_SUBQUERY"."ACADEMIC_YEAR_LD$4",
  "USER_ATTRIBUTE_01_SD" = "MERGE_SUBQUERY"."USER_ATTRIBUTE_01_SD",
  "USER_ATTRIBUTE_01_LD" = "MERGE_SUBQUERY"."USER_ATTRIBUTE_01_LD",
  "USER_ATTRIBUTE_02_SD" = "MERGE_SUBQUERY"."USER_ATTRIBUTE_02_SD",
  "USER_ATTRIBUTE_02_LD" = "MERGE_SUBQUERY"."USER_ATTRIBUTE_02_LD",
  "USER_ATTRIBUTE_03_SD" = "MERGE_SUBQUERY"."USER_ATTRIBUTE_03_SD",
  "USER_ATTRIBUTE_03_LD" = "MERGE_SUBQUERY"."USER_ATTRIBUTE_03_LD",
  "USER_ATTRIBUTE_04_SD" = "MERGE_SUBQUERY"."USER_ATTRIBUTE_04_SD",
  "USER_ATTRIBUTE_04_LD" = "MERGE_SUBQUERY"."USER_ATTRIBUTE_04_LD",
  "USER_ATTRIBUTE_05_SD" = "MERGE_SUBQUERY"."USER_ATTRIBUTE_05_SD",
  "USER_ATTRIBUTE_05_LD" = "MERGE_SUBQUERY"."USER_ATTRIBUTE_05_LD",
  "SYSTEM_LOAD_PROCESS" = "MERGE_SUBQUERY"."SYSTEM_LOAD_PROCESS"
       
  WHEN NOT MATCHED THEN
    INSERT
      ("WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD",
      "WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_SD",
      "WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_LD",
      "WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_BEGIN_DATE",
      "WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_END_DATE",
      "WDT_ACADEMIC_TIME"."ACADEMIC_YEAR",
      "WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_SD",
      "WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_LD",
      "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01",
      "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_SD",
      "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_LD",
      "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02",
      "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_SD",
      "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_LD",
      "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03",
      "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_SD",
      "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_LD",
      "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04",
      "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_SD",
      "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_LD",
      "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05",
      "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_SD",
      "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_LD",
      "WDT_ACADEMIC_TIME"."SYSTEM_LOAD_PROCESS")
    VALUES
      ("MERGE_SUBQUERY"."ACADEMIC_PERIOD$2",
      "MERGE_SUBQUERY"."ACADEMIC_PERIOD_SD$4",
      "MERGE_SUBQUERY"."ACADEMIC_PERIOD_LD$4",
      "MERGE_SUBQUERY"."ACADEMIC_PERIOD_BEGIN_DATE$4",
      "MERGE_SUBQUERY"."ACADEMIC_PERIOD_END_DATE$4",
      "MERGE_SUBQUERY"."ACADEMIC_YEAR$4",
      "MERGE_SUBQUERY"."ACADEMIC_YEAR_SD$4",
      "MERGE_SUBQUERY"."ACADEMIC_YEAR_LD$4",
      "MERGE_SUBQUERY"."USER_ATTRIBUTE_01",
      "MERGE_SUBQUERY"."USER_ATTRIBUTE_01_SD",
      "MERGE_SUBQUERY"."USER_ATTRIBUTE_01_LD",
      "MERGE_SUBQUERY"."USER_ATTRIBUTE_02",
      "MERGE_SUBQUERY"."USER_ATTRIBUTE_02_SD",
      "MERGE_SUBQUERY"."USER_ATTRIBUTE_02_LD",
      "MERGE_SUBQUERY"."USER_ATTRIBUTE_03",
      "MERGE_SUBQUERY"."USER_ATTRIBUTE_03_SD",
      "MERGE_SUBQUERY"."USER_ATTRIBUTE_03_LD",
      "MERGE_SUBQUERY"."USER_ATTRIBUTE_04",
      "MERGE_SUBQUERY"."USER_ATTRIBUTE_04_SD",
      "MERGE_SUBQUERY"."USER_ATTRIBUTE_04_LD",
      "MERGE_SUBQUERY"."USER_ATTRIBUTE_05",
      "MERGE_SUBQUERY"."USER_ATTRIBUTE_05_SD",
      "MERGE_SUBQUERY"."USER_ATTRIBUTE_05_LD",
      "MERGE_SUBQUERY"."SYSTEM_LOAD_PROCESS")
  ;
batch_merged := SQL%ROWCOUNT;
batch_selected := SQL%ROWCOUNT;
get_total_processed_rowcount := get_total_processed_rowcount + batch_merged;

      
      IF get_errors + batch_errors > get_max_errors THEN
        get_abort := TRUE;
      END IF;
      IF NOT get_use_hc AND NOT get_no_commit THEN
        COMMIT; -- commit no.5
      END IF;
    END IF;
  
  EXCEPTION WHEN OTHERS THEN
      last_error_number  := SQLCODE;
  last_error_message := SQLERRM;
          
    IF NOT get_no_commit THEN
      ROLLBACK;
    END IF;
    batch_errors := batch_errors + 1;
    IF get_errors + batch_errors > get_max_errors THEN
      get_abort := TRUE;
    END IF;
    IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
      OWBSYS.WB_RT_MAPAUDIT.error(
        p_rta=>get_runtime_audit_id,
        p_step=>0,
        p_rtd=>batch_auditd_id,
        p_rowkey=>0,
        p_table=>'"WDT_ACADEMIC_TIME"',
        p_column=>'*',
        p_dstval=>NULL,
        p_stm=>'TRACE 1982: ' || batch_action,
        p_sqlerr=>SQLCODE,
        p_sqlerrm=>SQLERRM,
        p_rowid=>NULL
      );
    END IF;
    get_errors := get_errors + batch_errors;
    get_selected := get_selected + batch_selected;
    
  
      IF NOT (get_audit_level = AUDIT_NONE) THEN
        OWBSYS.WB_RT_MAPAUDIT.auditd_end(
          p_rtd=>batch_auditd_id,
          p_sel=>batch_selected,
          p_ins=>NULL,
          p_upd=>NULL,
          p_del=>NULL,
          p_err=>batch_errors,
          p_dis=>NULL,  -- BatchErrorAuditDetailEnd
          p_mer=>NULL
        );
      END IF;
    IF NOT get_no_commit THEN
      COMMIT; -- commit no.6
    END IF;
    batch_exception := TRUE;
  END;
  
  BEGIN
    
IF NOT batch_exception AND NOT get_no_commit THEN
      -- resolve actual owner and name
      OWBSYS.WB_RT_MAPAUDIT_UTIL.resolve_name(
      p_original_owner=>
      USER, p_original_name=>'WDT_ACADEMIC_TIME', p_actual_owner=>actual_owner, p_actual_name=>actual_name);
      IF actual_name IS NOT NULL THEN
        SELECT NVL(num_rows, 0) INTO get_map_num_rows
        FROM all_tables
        WHERE table_name = actual_name
        AND owner = actual_owner;
        IF (batch_inserted + batch_merged) >= get_map_num_rows THEN
          a_table_to_analyze.ownname := actual_owner;
          a_table_to_analyze.tabname := actual_name;
          a_table_to_analyze.estimate_percent := 5;
          a_table_to_analyze.granularity := 'ALL';
          a_table_to_analyze.cascade := TRUE;
          a_table_to_analyze.degree  := NULL;
          "EDW_STUD_CHRT_DIM_ACAD_TIME".tables_to_analyze(
        "EDW_STUD_CHRT_DIM_ACAD_TIME".tables_to_analyze.COUNT + 1) := a_table_to_analyze;
        END IF;
      END IF;
    END IF;
    
  EXCEPTION WHEN OTHERS THEN
      last_error_number  := SQLCODE;
  last_error_message := SQLERRM;
    IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
      OWBSYS.WB_RT_MAPAUDIT.error(
        p_rta=>get_runtime_audit_id,
        p_step=>0,
        p_rtd=>batch_auditd_id,
        p_rowkey=>0,
        p_table=>'"WDT_ACADEMIC_TIME"',
        p_column=>'*',
        p_dstval=>NULL,
        p_stm=>'TRACE 1983: ' || batch_action,
        p_sqlerr=>SQLCODE,
        p_sqlerrm=>SQLERRM,
        p_rowid=>NULL
      );
    END IF;
  END;
  
  IF batch_exception THEN
    RETURN FALSE;
  END IF;
        get_deleted := get_deleted + batch_deleted;
  get_inserted := get_inserted + batch_inserted;
  get_errors := get_errors + batch_errors;
  get_selected := get_selected + batch_selected;
  get_merged := get_merged + batch_merged;
  
          IF NOT (get_audit_level = AUDIT_NONE) THEN
    OWBSYS.WB_RT_MAPAUDIT.auditd_end(
      p_rtd=>batch_auditd_id,
      p_sel=>batch_selected,
      p_ins=>batch_inserted,
      p_upd=>NULL,
      p_del=>batch_deleted,
      p_err=>batch_errors,
      p_dis=>NULL,
      p_mer=>batch_merged, -- BatchAuditDetailEnd
      p_autotrans=>(NOT get_use_hc) 
    );
  END IF;
        
  IF NOT get_use_hc AND NOT get_no_commit THEN
    COMMIT; -- commit no.3
  END IF;
  RETURN TRUE;
END "WDT_ACADEMIC_TIME_Bat";



-- Procedure "JOINER_p" is the entry point for map "JOINER_p"

PROCEDURE "JOINER_p"
 IS
-- Constants for this map
get_map_name               CONSTANT VARCHAR2(40) := '"JOINER_p"';
get_source_name            CONSTANT VARCHAR2(2000) := SUBSTRB('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,2000);
get_source_uoid            CONSTANT VARCHAR2(2000) := SUBSTRB('F14CC0123FB27D66E040F00AA4443159',0,2000);
get_step_number            CONSTANT NUMBER(22) := 1;

cursor_exhausted           BOOLEAN := FALSE;
get_close_cursor           BOOLEAN := TRUE;
exit_loop_normal           BOOLEAN := FALSE;
exit_loop_early            BOOLEAN := FALSE;
loop_count                 NUMBER(22);

get_map_selected           NUMBER(22) := 0;
get_map_errors             NUMBER(22) := 0;
get_map_num_rows           NUMBER(22) := 0;
actual_owner               VARCHAR2(30);
actual_name                VARCHAR2(30);

-- Constraint management
num_fk_err                 NUMBER(22);
l_rowkey                   NUMBER(22) := 0;
l_table                    VARCHAR2(30) := 'CREATE';
l_rowid                    ROWID;
l_owner                    VARCHAR2(30);
l_tablename                VARCHAR2(30);
l_constraint               VARCHAR2(30);
l_exec_mode                BINARY_INTEGER := MODE_ROW;
sql_excp_stmt              VARCHAR2(32767);
TYPE exceptionsCurType IS REF CURSOR;
exceptions_cursor          exceptionsCurType;

normal_action              VARCHAR2(20);
extended_action            VARCHAR2(2000);
error_action               VARCHAR2(20);
-- The get_audit_detail_id variable has been moved to a package-level variable
-- get_audit_detail_id        NUMBER(22) := 0;
get_target_name            VARCHAR2(80);
error_column               VARCHAR2(80);
error_value                VARCHAR2(2000);
error_rowkey               NUMBER(22) := 0;

-- Scalar variables for auditing

"WDT_ACADEMIC_TIME_id" NUMBER(22) := 0;
"WDT_ACADEMIC_TIME_ins" NUMBER(22) := 0;
"WDT_ACADEMIC_TIME_upd" NUMBER(22) := 0;
"WDT_ACADEMIC_TIME_del" NUMBER(22) := 0;
"WDT_ACADEMIC_TIME_err" NUMBER(22) := 0;
-- Variables for auditing in bulk processing
one_rowkey            NUMBER(22) := 0;
get_rowkey            NUMBER(22) := 0;
get_rowkey_bulk       OWBSYS.WB_RT_MAPAUDIT.NUMBERLIST;
one_rowid             ROWID;
get_rowid             OWBSYS.WB_RT_MAPAUDIT.ROWIDLIST;
rowkey_bulk_index     NUMBER(22) := 0;
x_it_err_count        NUMBER(22) := 0;
get_rowkey_error      NUMBER(22) := 0;

"WDT_ACADEMIC_TIME_srk" OWBSYS.WB_RT_MAPAUDIT.NUMBERLIST;

-- Helper variables for implementing the correlated commit mechanism
TYPE index_redirect_array IS TABLE OF NUMBER INDEX BY BINARY_INTEGER;

"WDT_ACADEMIC_TIME_ir"  index_redirect_array;
"SV_WDT_ACADEMIC_TIME_srk" NUMBER;
"WDT_ACADEMIC_TIME_new"  BOOLEAN;
"WDT_ACADEMIC_TIME_nul"  BOOLEAN := FALSE;

-- Bulk processing
error_index                NUMBER(22);
update_bulk                OWBSYS.WB_RT_MAPAUDIT.NUMBERLIST;
update_bulk_index          NUMBER(22) := 0;
insert_bulk_index          NUMBER(22) := 0;
last_successful_index      NUMBER(22) := 0;
feedback_bulk_limit        NUMBER(22) := 0;
bulk_commit_count          NUMBER(22) := 0;
bulk_commit                BOOLEAN := FALSE;
get_row_status             BOOLEAN; 
dml_bsize                  NUMBER; 
row_count                  NUMBER(22);
bulk_count                 NUMBER(22);

"JOINER_si" NUMBER(22) := 0;

"JOINER_i" NUMBER(22) := 0;


"WDT_ACADEMIC_TIME_si" NUMBER(22) := 0;

"WDT_ACADEMIC_TIME_i" NUMBER(22) := 0;




-- Bulk: types for collection variables
TYPE "T_J1_23_A9" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_ROWKEY_JOINER" IS TABLE OF VARCHAR2(18) INDEX BY BINARY_INTEGER;
TYPE "T_J1_24_A9" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_25_A2" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_26_A2" IS TABLE OF DATE INDEX BY BINARY_INTEGER;
TYPE "T_J1_27_A6" IS TABLE OF DATE INDEX BY BINARY_INTEGER;
TYPE "T_J1_28_A1" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_J1_29_A1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_30_A4" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_31_U2" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_J1_32_U6" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_33_U9" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_34_U3" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_J1_35_U7" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_36_U0" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_37_U4" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_J1_38_U8" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_39_U1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_40_U5" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_J1_41_U9" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_42_U2" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_43_U6" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_J1_44_U0" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_45_U3" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_1_A9" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_W5_2_A9" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_3_A2" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_4_A2" IS TABLE OF DATE INDEX BY BINARY_INTEGER;
TYPE "T_W5_5_A6" IS TABLE OF DATE INDEX BY BINARY_INTEGER;
TYPE "T_W5_6_A1" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_W5_7_A1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_8_A4" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_9_U2" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_W5_10_U6" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_11_U9" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_12_U3" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_W5_13_U7" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_14_U0" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_15_U4" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_W5_16_U8" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_17_U1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_18_U5" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_W5_19_U9" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_20_U2" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_21_U6" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_W5_22_U0" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_23_U3" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_24_S0" IS TABLE OF VARCHAR2(120) INDEX BY BINARY_INTEGER;

-- Bulk: intermediate scalar variables
"SV_J1_23_A9"  VARCHAR2(252);
"SV_ROWKEY_JOINER"  VARCHAR2(18);
"SV_J1_24_A9"  VARCHAR2(1020);
"SV_J1_25_A2"  VARCHAR2(1020);
"SV_J1_26_A2"  DATE;
"SV_J1_27_A6"  DATE;
"SV_J1_28_A1"  VARCHAR2(252);
"SV_J1_29_A1"  VARCHAR2(1020);
"SV_J1_30_A4"  VARCHAR2(1020);
"SV_J1_31_U2"  VARCHAR2(252);
"SV_J1_32_U6"  VARCHAR2(1020);
"SV_J1_33_U9"  VARCHAR2(1020);
"SV_J1_34_U3"  VARCHAR2(252);
"SV_J1_35_U7"  VARCHAR2(1020);
"SV_J1_36_U0"  VARCHAR2(1020);
"SV_J1_37_U4"  VARCHAR2(252);
"SV_J1_38_U8"  VARCHAR2(1020);
"SV_J1_39_U1"  VARCHAR2(1020);
"SV_J1_40_U5"  VARCHAR2(252);
"SV_J1_41_U9"  VARCHAR2(1020);
"SV_J1_42_U2"  VARCHAR2(1020);
"SV_J1_43_U6"  VARCHAR2(252);
"SV_J1_44_U0"  VARCHAR2(1020);
"SV_J1_45_U3"  VARCHAR2(1020);
"SV_W5_1_A9"  VARCHAR2(252);
"SV_W5_2_A9"  VARCHAR2(1020);
"SV_W5_3_A2"  VARCHAR2(1020);
"SV_W5_4_A2"  DATE;
"SV_W5_5_A6"  DATE;
"SV_W5_6_A1"  VARCHAR2(252);
"SV_W5_7_A1"  VARCHAR2(1020);
"SV_W5_8_A4"  VARCHAR2(1020);
"SV_W5_9_U2"  VARCHAR2(252);
"SV_W5_10_U6"  VARCHAR2(1020);
"SV_W5_11_U9"  VARCHAR2(1020);
"SV_W5_12_U3"  VARCHAR2(252);
"SV_W5_13_U7"  VARCHAR2(1020);
"SV_W5_14_U0"  VARCHAR2(1020);
"SV_W5_15_U4"  VARCHAR2(252);
"SV_W5_16_U8"  VARCHAR2(1020);
"SV_W5_17_U1"  VARCHAR2(1020);
"SV_W5_18_U5"  VARCHAR2(252);
"SV_W5_19_U9"  VARCHAR2(1020);
"SV_W5_20_U2"  VARCHAR2(1020);
"SV_W5_21_U6"  VARCHAR2(252);
"SV_W5_22_U0"  VARCHAR2(1020);
"SV_W5_23_U3"  VARCHAR2(1020);
"SV_W5_24_S0"  VARCHAR2(120);

-- Bulk: intermediate collection variables
"J1_23_A9" "T_J1_23_A9";
"ROWKEY_JOINER" "T_ROWKEY_JOINER";
"J1_24_A9" "T_J1_24_A9";
"J1_25_A2" "T_J1_25_A2";
"J1_26_A2" "T_J1_26_A2";
"J1_27_A6" "T_J1_27_A6";
"J1_28_A1" "T_J1_28_A1";
"J1_29_A1" "T_J1_29_A1";
"J1_30_A4" "T_J1_30_A4";
"J1_31_U2" "T_J1_31_U2";
"J1_32_U6" "T_J1_32_U6";
"J1_33_U9" "T_J1_33_U9";
"J1_34_U3" "T_J1_34_U3";
"J1_35_U7" "T_J1_35_U7";
"J1_36_U0" "T_J1_36_U0";
"J1_37_U4" "T_J1_37_U4";
"J1_38_U8" "T_J1_38_U8";
"J1_39_U1" "T_J1_39_U1";
"J1_40_U5" "T_J1_40_U5";
"J1_41_U9" "T_J1_41_U9";
"J1_42_U2" "T_J1_42_U2";
"J1_43_U6" "T_J1_43_U6";
"J1_44_U0" "T_J1_44_U0";
"J1_45_U3" "T_J1_45_U3";
"W5_1_A9" "T_W5_1_A9";
"W5_2_A9" "T_W5_2_A9";
"W5_3_A2" "T_W5_3_A2";
"W5_4_A2" "T_W5_4_A2";
"W5_5_A6" "T_W5_5_A6";
"W5_6_A1" "T_W5_6_A1";
"W5_7_A1" "T_W5_7_A1";
"W5_8_A4" "T_W5_8_A4";
"W5_9_U2" "T_W5_9_U2";
"W5_10_U6" "T_W5_10_U6";
"W5_11_U9" "T_W5_11_U9";
"W5_12_U3" "T_W5_12_U3";
"W5_13_U7" "T_W5_13_U7";
"W5_14_U0" "T_W5_14_U0";
"W5_15_U4" "T_W5_15_U4";
"W5_16_U8" "T_W5_16_U8";
"W5_17_U1" "T_W5_17_U1";
"W5_18_U5" "T_W5_18_U5";
"W5_19_U9" "T_W5_19_U9";
"W5_20_U2" "T_W5_20_U2";
"W5_21_U6" "T_W5_21_U6";
"W5_22_U0" "T_W5_22_U0";
"W5_23_U3" "T_W5_23_U3";
"W5_24_S0" "T_W5_24_S0";

PROCEDURE Main_ES(p_step_number IN NUMBER, p_rowkey IN NUMBER, p_table IN VARCHAR2, p_col IN VARCHAR2, p_value IN VARCHAR2 default 'VALUE DISABLED') IS
BEGIN
  get_column_seq := get_column_seq + 1;
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>p_rowkey,
    p_seq=>get_column_seq,
    p_instance=>1,
    p_table=>SUBSTR(p_table,0,80),
    p_column=>SUBSTR(p_col,0,80),
    p_value=>SUBSTRB(p_value,0,2000),
    p_step=>p_step_number,
    p_role=>'T'
  );
END;

---------------------------------------------------------------------------
-- This procedure records column values of one erroneous source row
-- into an audit trail table named WB_RT_ERROR_SOURCES.  Each column is
-- recorded by one row in the audit trail.  To collect all source column
-- values corresponding to one erroneous source row, query the audit
-- trail and specify:
--    RTA_IID, uniquely identifies one audited run,
--    RTE_ROWKEY, uniquely identifies a source row within and audited run
---------------------------------------------------------------------------
PROCEDURE "JOINER_ES"(error_index IN NUMBER) IS
BEGIN

  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>1,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('ACADEMIC_PERIOD',0,80),
    p_value=>SUBSTRB("J1_23_A9"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>2,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('ACADEMIC_PERIOD_SD',0,80),
    p_value=>SUBSTRB("J1_24_A9"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>3,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('ACADEMIC_PERIOD_LD',0,80),
    p_value=>SUBSTRB("J1_25_A2"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>4,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('ACADEMIC_PERIOD_BEGIN_DATE',0,80),
    p_value=>SUBSTRB("J1_26_A2"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>5,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('ACADEMIC_PERIOD_END_DATE',0,80),
    p_value=>SUBSTRB("J1_27_A6"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>6,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('ACADEMIC_YEAR',0,80),
    p_value=>SUBSTRB("J1_28_A1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>7,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('ACADEMIC_YEAR_SD',0,80),
    p_value=>SUBSTRB("J1_29_A1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>8,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('ACADEMIC_YEAR_LD',0,80),
    p_value=>SUBSTRB("J1_30_A4"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>9,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_01',0,80),
    p_value=>SUBSTRB("J1_31_U2"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>10,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_01_SD',0,80),
    p_value=>SUBSTRB("J1_32_U6"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>11,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_01_LD',0,80),
    p_value=>SUBSTRB("J1_33_U9"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>12,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_02',0,80),
    p_value=>SUBSTRB("J1_34_U3"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>13,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_02_SD',0,80),
    p_value=>SUBSTRB("J1_35_U7"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>14,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_02_LD',0,80),
    p_value=>SUBSTRB("J1_36_U0"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>15,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_03',0,80),
    p_value=>SUBSTRB("J1_37_U4"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>16,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_03_SD',0,80),
    p_value=>SUBSTRB("J1_38_U8"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>17,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_03_LD',0,80),
    p_value=>SUBSTRB("J1_39_U1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>18,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_04',0,80),
    p_value=>SUBSTRB("J1_40_U5"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>19,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_04_SD',0,80),
    p_value=>SUBSTRB("J1_41_U9"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>20,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_04_LD',0,80),
    p_value=>SUBSTRB("J1_42_U2"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>21,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_05',0,80),
    p_value=>SUBSTRB("J1_43_U6"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>22,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_05_SD',0,80),
    p_value=>SUBSTRB("J1_44_U0"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>23,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_05_LD',0,80),
    p_value=>SUBSTRB("J1_45_U3"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  RETURN;
    
  END "JOINER_ES";

---------------------------------------------------------------------------
-- Procedure "JOINER_ER" registers error for one erroneous row
---------------------------------------------------------------------------
PROCEDURE "JOINER_ER"(p_statement IN VARCHAR2, p_column IN VARCHAR2, p_col_value IN VARCHAR2, p_sqlcode IN NUMBER, p_sqlerrm IN VARCHAR2, p_auditd_id IN NUMBER, p_error_index IN NUMBER) IS
l_source_target_name VARCHAR2(80);
BEGIN
  IF p_auditd_id IS NULL THEN
    l_source_target_name := SUBSTR(get_source_name,0,80);
  ELSE
    l_source_target_name := get_target_name;
  END IF;

  IF p_error_index = 0 THEN  
  get_rowkey_error := 0;
ELSE  
  get_rowkey_error := get_rowkey + p_error_index - 1;
END IF;

  IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
    OWBSYS.WB_RT_MAPAUDIT.error(
      p_rta=>get_runtime_audit_id,
      p_step=>get_step_number,
      p_rtd=>p_auditd_id,
      p_rowkey=>get_rowkey_error,
      p_table=>l_source_target_name,
      p_column=>p_column,
      p_dstval=>p_col_value,
      p_stm=>'TRACE 1984: ' || p_statement,
      p_sqlerr=>p_sqlcode,
      p_sqlerrm=>p_sqlerrm,
      p_rowid=>NULL
    );
  END IF;

  IF ( get_audit_level = AUDIT_COMPLETE ) AND (get_rowkey_error > 0) THEN
    OWBSYS.WB_RT_MAPAUDIT.register_feedback(
      p_rta=>get_runtime_audit_id,
      p_step=>get_step_number,
      p_rowkey=>get_rowkey_error,
      p_status=>'ERROR',
      p_table=>l_source_target_name,
      p_role=>'T',
      p_action=>SUBSTR(p_statement,0,30)
    );
  END IF;

  IF ( get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE ) AND (get_rowkey_error > 0) THEN
    "JOINER_ES"(p_error_index);
  END IF;
END "JOINER_ER";



---------------------------------------------------------------------------
-- Procedure "JOINER_SU" opens and initializes data source
-- for map "JOINER_p"
---------------------------------------------------------------------------
PROCEDURE "JOINER_SU" IS
BEGIN
  IF get_abort THEN
    RETURN;
  END IF;
  IF (NOT "JOINER_c"%ISOPEN) THEN
    OPEN "JOINER_c";
  END IF;
  get_read_success := TRUE;
END "JOINER_SU";

---------------------------------------------------------------------------
-- Procedure "JOINER_RD" fetches a bulk of rows from
--   the data source for map "JOINER_p"
---------------------------------------------------------------------------
PROCEDURE "JOINER_RD" IS
BEGIN
  IF NOT get_read_success THEN
    get_abort := TRUE;
    IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
      OWBSYS.WB_RT_MAPAUDIT.error(
        p_rta=>get_runtime_audit_id,
        p_step=>0,
        p_rtd=>NULL,
        p_rowkey=>0,
        p_table=>NULL,
        p_column=>NULL,
        p_dstval=>NULL,
        p_stm=>NULL,
        p_sqlerr=>-20007,
        p_sqlerrm=>'CursorFetchMapTerminationRTV20007',
        p_rowid=>NULL
      );
    END IF;
                END IF;

  IF get_abort OR get_abort_procedure THEN
    RETURN;
  END IF;

  BEGIN
    "J1_23_A9".DELETE;
    "J1_24_A9".DELETE;
    "J1_25_A2".DELETE;
    "J1_26_A2".DELETE;
    "J1_27_A6".DELETE;
    "J1_28_A1".DELETE;
    "J1_29_A1".DELETE;
    "J1_30_A4".DELETE;
    "J1_31_U2".DELETE;
    "J1_32_U6".DELETE;
    "J1_33_U9".DELETE;
    "J1_34_U3".DELETE;
    "J1_35_U7".DELETE;
    "J1_36_U0".DELETE;
    "J1_37_U4".DELETE;
    "J1_38_U8".DELETE;
    "J1_39_U1".DELETE;
    "J1_40_U5".DELETE;
    "J1_41_U9".DELETE;
    "J1_42_U2".DELETE;
    "J1_43_U6".DELETE;
    "J1_44_U0".DELETE;
    "J1_45_U3".DELETE;

    FETCH
      "JOINER_c"
    BULK COLLECT INTO
      "J1_23_A9",
      "J1_24_A9",
      "J1_25_A2",
      "J1_26_A2",
      "J1_27_A6",
      "J1_28_A1",
      "J1_29_A1",
      "J1_30_A4",
      "J1_31_U2",
      "J1_32_U6",
      "J1_33_U9",
      "J1_34_U3",
      "J1_35_U7",
      "J1_36_U0",
      "J1_37_U4",
      "J1_38_U8",
      "J1_39_U1",
      "J1_40_U5",
      "J1_41_U9",
      "J1_42_U2",
      "J1_43_U6",
      "J1_44_U0",
      "J1_45_U3"
    LIMIT get_bulk_size;

    get_total_processed_rowcount := get_total_processed_rowcount + "J1_23_A9".COUNT;

    IF "JOINER_c"%NOTFOUND AND "J1_23_A9".COUNT = 0 THEN
      RETURN;
    END IF;
    -- register feedback for successful reads
    IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
      get_rowkey := rowkey_counter;
      rowkey_counter := rowkey_counter + "J1_23_A9".COUNT;
    END IF;
    
    IF get_audit_level = AUDIT_COMPLETE THEN
      OWBSYS.WB_RT_MAPAUDIT.register_feedback_bulk(
        p_rta=>get_runtime_audit_id,
        p_step=>get_step_number,
        p_rowkey=>get_rowkey,
        p_status=>'NEW',
        p_table=>get_source_name,
        p_role=>'S',
        p_action=>'SELECT'
      );
    END IF;
    get_map_selected := get_map_selected + "J1_23_A9".COUNT;
  EXCEPTION
    WHEN OTHERS THEN
        last_error_number  := SQLCODE;
  last_error_message := SQLERRM;
      get_read_success := FALSE;
      -- register error
      IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
        one_rowkey := rowkey_counter;
        rowkey_counter := rowkey_counter + 1;
        OWBSYS.WB_RT_MAPAUDIT.error(
          p_rta=>get_runtime_audit_id,
          p_step=>get_step_number,
          p_rtd=>NULL,
          p_rowkey=>one_rowkey,
          p_table=>get_source_name,
          p_column=>'*',
          p_dstval=>NULL,
          p_stm=>'TRACE 1985: SELECT',
          p_sqlerr=>SQLCODE,
          p_sqlerrm=>SQLERRM,
          p_rowid=>NULL
        );
      END IF;
      
      -- register feedback for the erroneous row
      IF get_audit_level = AUDIT_COMPLETE THEN
        OWBSYS.WB_RT_MAPAUDIT.register_feedback(
          p_rta=>get_runtime_audit_id,
          p_step=>get_step_number,
          p_rowkey=>one_rowkey,
          p_status=>'ERROR',
          p_table=>get_source_name,
          p_role=>'S',
          p_action=>'SELECT'
        );
      END IF;
      get_errors := get_errors + 1;
      IF get_errors > get_max_errors THEN get_abort := TRUE; END IF;
  END;
END "JOINER_RD";

---------------------------------------------------------------------------
-- Procedure "JOINER_DML" does DML for a bulk of rows starting from index si.
---------------------------------------------------------------------------
PROCEDURE "JOINER_DML"(si NUMBER, firstround BOOLEAN) IS
 "WDT_ACADEMIC_TIME_ins0" NUMBER := "WDT_ACADEMIC_TIME_ins";
"WDT_ACADEMIC_TIME_upd0" NUMBER := "WDT_ACADEMIC_TIME_upd";
BEGIN
 IF get_use_hc THEN
  IF firstround AND NOT get_row_status THEN
   RETURN;
  END IF;
  get_row_status := TRUE;
 END IF;
 IF NOT "WDT_ACADEMIC_TIME_St" THEN
-- Update/Insert DML for "WDT_ACADEMIC_TIME"
  normal_action := 'UPDATE';
  error_action  := 'UPDATE';
  get_target_name := '"WDT_ACADEMIC_TIME"';
  get_audit_detail_id := "WDT_ACADEMIC_TIME_id";
  "WDT_ACADEMIC_TIME_si" := 1;
  update_bulk.DELETE;
  update_bulk_index := 1;
  IF "WDT_ACADEMIC_TIME_i" > get_bulk_size 
 OR "JOINER_c"%NOTFOUND OR get_abort OR get_use_hc THEN
    LOOP
      get_rowid.DELETE;

      BEGIN
        FORALL i IN "WDT_ACADEMIC_TIME_si".."WDT_ACADEMIC_TIME_i" - 1 
          UPDATE
            "WDT_ACADEMIC_TIME"
          SET

						"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_SD" = "W5_2_A9"
(i),						"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_LD" = "W5_3_A2"
(i),						"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_BEGIN_DATE" = "W5_4_A2"
(i),						"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_END_DATE" = "W5_5_A6"
(i),						"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_SD" = "W5_7_A1"
(i),						"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_LD" = "W5_8_A4"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_SD" = "W5_10_U6"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_LD" = "W5_11_U9"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_SD" = "W5_13_U7"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_LD" = "W5_14_U0"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_SD" = "W5_16_U8"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_LD" = "W5_17_U1"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_SD" = "W5_19_U9"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_LD" = "W5_20_U2"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_SD" = "W5_22_U0"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_LD" = "W5_23_U3"
(i),						"WDT_ACADEMIC_TIME"."SYSTEM_LOAD_PROCESS" = "W5_24_S0"
(i)
  
          WHERE

						"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD" = "W5_1_A9"
(i) AND						"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR" = "W5_6_A1"
(i) AND						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01" = "W5_9_U2"
(i) AND						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02" = "W5_12_U3"
(i) AND						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03" = "W5_15_U4"
(i) AND						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04" = "W5_18_U5"
(i) AND						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05" = "W5_21_U6"
(i)
  
          RETURNING ROWID BULK COLLECT INTO get_rowid;
          
        feedback_bulk_limit := "WDT_ACADEMIC_TIME_i" - 1;
        get_rowkey_bulk.DELETE;
        rowkey_bulk_index := 1;
        FOR rowkey_index IN "WDT_ACADEMIC_TIME_si"..feedback_bulk_limit LOOP
          IF SQL%BULK_ROWCOUNT(rowkey_index) = 0 THEN
            update_bulk(update_bulk_index) := rowkey_index;
            update_bulk_index := update_bulk_index + 1;
          ELSE
            IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
              get_rowkey_bulk(rowkey_bulk_index) := "WDT_ACADEMIC_TIME_srk"(rowkey_index);
              rowkey_bulk_index := rowkey_bulk_index + 1;
            END IF;
          END IF;
        END LOOP;
        
        
IF get_audit_level = AUDIT_COMPLETE THEN
  OWBSYS.WB_RT_MAPAUDIT.register_feedback_bulk(
    p_rta=>get_runtime_audit_id,
    p_step=>get_step_number,
    p_rowkey=>get_rowkey_bulk,
    p_status=>'NEW',
    p_table=>get_target_name,
    p_role=>'T',
    p_action=>normal_action,
    p_rowid=>get_rowid
  );
END IF;

        "WDT_ACADEMIC_TIME_upd" := "WDT_ACADEMIC_TIME_upd" + get_rowid.COUNT;
        "WDT_ACADEMIC_TIME_si" := "WDT_ACADEMIC_TIME_i";

      EXCEPTION
        WHEN OTHERS THEN
            last_error_number  := SQLCODE;
  last_error_message := SQLERRM;
          IF SQL%NOTFOUND THEN
            last_successful_index := 0;
          ELSE
            FOR rowkey_index IN REVERSE "WDT_ACADEMIC_TIME_si".."WDT_ACADEMIC_TIME_i"- 1 LOOP
              IF NOT (SQL%BULK_ROWCOUNT(rowkey_index) = 0) THEN
                last_successful_index := rowkey_index;
                EXIT;
              END IF;
            END LOOP;
          END IF;
          feedback_bulk_limit := last_successful_index;
          get_rowkey_bulk.DELETE;
          rowkey_bulk_index := 1;
          FOR rowkey_index IN "WDT_ACADEMIC_TIME_si"..feedback_bulk_limit LOOP
            IF SQL%BULK_ROWCOUNT(rowkey_index) = 0 THEN
              update_bulk(update_bulk_index) := rowkey_index;
              update_bulk_index := update_bulk_index + 1;
            ELSE
              IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
                get_rowkey_bulk(rowkey_bulk_index) := "WDT_ACADEMIC_TIME_srk"(rowkey_index);
                rowkey_bulk_index := rowkey_bulk_index + 1;
              END IF;
            END IF;
          END LOOP;
          
          
IF get_audit_level = AUDIT_COMPLETE THEN
  OWBSYS.WB_RT_MAPAUDIT.register_feedback_bulk(
    p_rta=>get_runtime_audit_id,
    p_step=>get_step_number,
    p_rowkey=>get_rowkey_bulk,
    p_status=>'NEW',
    p_table=>get_target_name,
    p_role=>'T',
    p_action=>normal_action,
    p_rowid=>get_rowid
  );
END IF;
          "WDT_ACADEMIC_TIME_upd" := "WDT_ACADEMIC_TIME_upd" + get_rowid.COUNT;
          IF last_successful_index = 0 THEN
            last_successful_index := "WDT_ACADEMIC_TIME_si";
          ELSE
            last_successful_index := last_successful_index +1;
          END IF;
          LOOP
            BEGIN
              UPDATE
                "WDT_ACADEMIC_TIME"
              SET

								"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_SD" = "W5_2_A9"
(last_successful_index),								"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_LD" = "W5_3_A2"
(last_successful_index),								"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_BEGIN_DATE" = "W5_4_A2"
(last_successful_index),								"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_END_DATE" = "W5_5_A6"
(last_successful_index),								"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_SD" = "W5_7_A1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_LD" = "W5_8_A4"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_SD" = "W5_10_U6"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_LD" = "W5_11_U9"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_SD" = "W5_13_U7"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_LD" = "W5_14_U0"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_SD" = "W5_16_U8"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_LD" = "W5_17_U1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_SD" = "W5_19_U9"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_LD" = "W5_20_U2"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_SD" = "W5_22_U0"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_LD" = "W5_23_U3"
(last_successful_index),								"WDT_ACADEMIC_TIME"."SYSTEM_LOAD_PROCESS" = "W5_24_S0"
(last_successful_index)

              WHERE

								"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD" = "W5_1_A9"
(last_successful_index) AND 								"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR" = "W5_6_A1"
(last_successful_index) AND 								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01" = "W5_9_U2"
(last_successful_index) AND 								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02" = "W5_12_U3"
(last_successful_index) AND 								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03" = "W5_15_U4"
(last_successful_index) AND 								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04" = "W5_18_U5"
(last_successful_index) AND 								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05" = "W5_21_U6"
(last_successful_index)

              ;
            update_bulk(update_bulk_index) := last_successful_index;
            update_bulk_index := update_bulk_index + 1;
            last_successful_index := last_successful_index + 1;
          EXCEPTION
            WHEN OTHERS THEN
                last_error_number  := SQLCODE;
  last_error_message := SQLERRM;
              IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
                error_rowkey := "WDT_ACADEMIC_TIME_srk"(last_successful_index);
                OWBSYS.WB_RT_MAPAUDIT.error(
                  p_rta=>get_runtime_audit_id,
                  p_step=>get_step_number,
                  p_rtd=>get_audit_detail_id,
                  p_rowkey=>error_rowkey,
                  p_table=>get_target_name,
                  p_column=>'*',
                  p_dstval=>NULL,
                  p_stm=>'TRACE : ' || error_action,
                  p_sqlerr=>SQLCODE,
                  p_sqlerrm=>SQLERRM,
                  p_rowid=>NULL
                );
                get_column_seq := 0;
                

                
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_SD"',0,80),SUBSTRB("W5_2_A9"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_LD"',0,80),SUBSTRB("W5_3_A2"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_BEGIN_DATE"',0,80),SUBSTRB("W5_4_A2"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_END_DATE"',0,80),SUBSTRB("W5_5_A6"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_SD"',0,80),SUBSTRB("W5_7_A1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_LD"',0,80),SUBSTRB("W5_8_A4"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_SD"',0,80),SUBSTRB("W5_10_U6"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_LD"',0,80),SUBSTRB("W5_11_U9"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_SD"',0,80),SUBSTRB("W5_13_U7"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_LD"',0,80),SUBSTRB("W5_14_U0"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_SD"',0,80),SUBSTRB("W5_16_U8"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_LD"',0,80),SUBSTRB("W5_17_U1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_SD"',0,80),SUBSTRB("W5_19_U9"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_LD"',0,80),SUBSTRB("W5_20_U2"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_SD"',0,80),SUBSTRB("W5_22_U0"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_LD"',0,80),SUBSTRB("W5_23_U3"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."SYSTEM_LOAD_PROCESS"',0,80),SUBSTRB("W5_24_S0"(last_successful_index),0,2000));
                
              END IF;
              IF get_audit_level = AUDIT_COMPLETE THEN
                OWBSYS.WB_RT_MAPAUDIT.register_feedback(
                  p_rta=>get_runtime_audit_id,
                  p_step=>get_step_number,
                  p_rowkey=>error_rowkey,
                  p_status=>'ERROR',
                  p_table=>get_target_name,
                  p_role=>'T',
                  p_action=>error_action
                );
              END IF;
              "WDT_ACADEMIC_TIME_err" := "WDT_ACADEMIC_TIME_err" + 1;
              
              IF get_errors + "WDT_ACADEMIC_TIME_err" > get_max_errors THEN
                get_abort:= TRUE;
              END IF;
              "WDT_ACADEMIC_TIME_si" := last_successful_index + 1;
              EXIT;
          END;
        END LOOP;
    END;
    IF "WDT_ACADEMIC_TIME_si" >= "WDT_ACADEMIC_TIME_i" OR get_abort THEN
      EXIT;
    END IF;
  END LOOP;

  "WDT_ACADEMIC_TIME_i" := 1;

  --process leftover inserts
  insert_bulk_index := 0;
  FOR j IN 1..update_bulk.COUNT LOOP
    insert_bulk_index := insert_bulk_index + 1;
		"W5_1_A9"(insert_bulk_index) := "W5_1_A9"(update_bulk(j));
		"W5_2_A9"(insert_bulk_index) := "W5_2_A9"(update_bulk(j));
		"W5_3_A2"(insert_bulk_index) := "W5_3_A2"(update_bulk(j));
		"W5_4_A2"(insert_bulk_index) := "W5_4_A2"(update_bulk(j));
		"W5_5_A6"(insert_bulk_index) := "W5_5_A6"(update_bulk(j));
		"W5_6_A1"(insert_bulk_index) := "W5_6_A1"(update_bulk(j));
		"W5_7_A1"(insert_bulk_index) := "W5_7_A1"(update_bulk(j));
		"W5_8_A4"(insert_bulk_index) := "W5_8_A4"(update_bulk(j));
		"W5_9_U2"(insert_bulk_index) := "W5_9_U2"(update_bulk(j));
		"W5_10_U6"(insert_bulk_index) := "W5_10_U6"(update_bulk(j));
		"W5_11_U9"(insert_bulk_index) := "W5_11_U9"(update_bulk(j));
		"W5_12_U3"(insert_bulk_index) := "W5_12_U3"(update_bulk(j));
		"W5_13_U7"(insert_bulk_index) := "W5_13_U7"(update_bulk(j));
		"W5_14_U0"(insert_bulk_index) := "W5_14_U0"(update_bulk(j));
		"W5_15_U4"(insert_bulk_index) := "W5_15_U4"(update_bulk(j));
		"W5_16_U8"(insert_bulk_index) := "W5_16_U8"(update_bulk(j));
		"W5_17_U1"(insert_bulk_index) := "W5_17_U1"(update_bulk(j));
		"W5_18_U5"(insert_bulk_index) := "W5_18_U5"(update_bulk(j));
		"W5_19_U9"(insert_bulk_index) := "W5_19_U9"(update_bulk(j));
		"W5_20_U2"(insert_bulk_index) := "W5_20_U2"(update_bulk(j));
		"W5_21_U6"(insert_bulk_index) := "W5_21_U6"(update_bulk(j));
		"W5_22_U0"(insert_bulk_index) := "W5_22_U0"(update_bulk(j));
		"W5_23_U3"(insert_bulk_index) := "W5_23_U3"(update_bulk(j));
		"W5_24_S0"(insert_bulk_index) := "W5_24_S0"(update_bulk(j));
    IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
      "WDT_ACADEMIC_TIME_srk"(insert_bulk_index) := "WDT_ACADEMIC_TIME_srk"(update_bulk(j));
    END IF;
  END LOOP;

  "WDT_ACADEMIC_TIME_si" := 1;
  normal_action := 'INSERT';
  error_action  := 'INSERT';
  LOOP
    EXIT WHEN get_abort OR "WDT_ACADEMIC_TIME_si" > insert_bulk_index;
    get_rowid.DELETE;

    BEGIN
      FORALL i IN "WDT_ACADEMIC_TIME_si"..insert_bulk_index
        INSERT INTO
          "WDT_ACADEMIC_TIME"
          ("WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD",
          "WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_SD",
          "WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_LD",
          "WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_BEGIN_DATE",
          "WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_END_DATE",
          "WDT_ACADEMIC_TIME"."ACADEMIC_YEAR",
          "WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_SD",
          "WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_LD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_SD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_LD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_SD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_LD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_SD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_LD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_SD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_LD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_SD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_LD",
          "WDT_ACADEMIC_TIME"."SYSTEM_LOAD_PROCESS")
        VALUES
          ("W5_1_A9"(i),
          "W5_2_A9"(i),
          "W5_3_A2"(i),
          "W5_4_A2"(i),
          "W5_5_A6"(i),
          "W5_6_A1"(i),
          "W5_7_A1"(i),
          "W5_8_A4"(i),
          "W5_9_U2"(i),
          "W5_10_U6"(i),
          "W5_11_U9"(i),
          "W5_12_U3"(i),
          "W5_13_U7"(i),
          "W5_14_U0"(i),
          "W5_15_U4"(i),
          "W5_16_U8"(i),
          "W5_17_U1"(i),
          "W5_18_U5"(i),
          "W5_19_U9"(i),
          "W5_20_U2"(i),
          "W5_21_U6"(i),
          "W5_22_U0"(i),
          "W5_23_U3"(i),
          "W5_24_S0"(i))
        RETURNING ROWID BULK COLLECT INTO get_rowid;
      error_index := "WDT_ACADEMIC_TIME_si" + get_rowid.COUNT;
    EXCEPTION
      WHEN OTHERS THEN
          last_error_number  := SQLCODE;
  last_error_message := SQLERRM;
        error_index := "WDT_ACADEMIC_TIME_si" + get_rowid.COUNT;
        IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
          error_rowkey := "WDT_ACADEMIC_TIME_srk"(error_index);
          OWBSYS.WB_RT_MAPAUDIT.error(
            p_rta=>get_runtime_audit_id,
            p_step=>get_step_number,
            p_rtd=>get_audit_detail_id,
            p_rowkey=>error_rowkey,
            p_table=>get_target_name,
            p_column=>'*',
            p_dstval=>NULL,
            p_stm=>'TRACE 1986: ' || error_action,
            p_sqlerr=>SQLCODE,
            p_sqlerrm=>SQLERRM,
            p_rowid=>NULL
          );
          get_column_seq := 0;
          

          
          
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD"',0,80),SUBSTRB("W5_1_A9"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_SD"',0,80),SUBSTRB("W5_2_A9"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_LD"',0,80),SUBSTRB("W5_3_A2"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_BEGIN_DATE"',0,80),SUBSTRB("W5_4_A2"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_END_DATE"',0,80),SUBSTRB("W5_5_A6"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR"',0,80),SUBSTRB("W5_6_A1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_SD"',0,80),SUBSTRB("W5_7_A1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_LD"',0,80),SUBSTRB("W5_8_A4"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01"',0,80),SUBSTRB("W5_9_U2"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_SD"',0,80),SUBSTRB("W5_10_U6"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_LD"',0,80),SUBSTRB("W5_11_U9"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02"',0,80),SUBSTRB("W5_12_U3"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_SD"',0,80),SUBSTRB("W5_13_U7"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_LD"',0,80),SUBSTRB("W5_14_U0"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03"',0,80),SUBSTRB("W5_15_U4"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_SD"',0,80),SUBSTRB("W5_16_U8"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_LD"',0,80),SUBSTRB("W5_17_U1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04"',0,80),SUBSTRB("W5_18_U5"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_SD"',0,80),SUBSTRB("W5_19_U9"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_LD"',0,80),SUBSTRB("W5_20_U2"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05"',0,80),SUBSTRB("W5_21_U6"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_SD"',0,80),SUBSTRB("W5_22_U0"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_LD"',0,80),SUBSTRB("W5_23_U3"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."SYSTEM_LOAD_PROCESS"',0,80),SUBSTRB("W5_24_S0"(error_index),0,2000));
          
        END IF;
        IF get_audit_level = AUDIT_COMPLETE THEN
          OWBSYS.WB_RT_MAPAUDIT.register_feedback(
            p_rta=>get_runtime_audit_id,
            p_step=>get_step_number,
            p_rowkey=>error_rowkey,
            p_status=>'ERROR',
            p_table=>get_target_name,
            p_role=>'T',
            p_action=>error_action
          );
        END IF;
        "WDT_ACADEMIC_TIME_err" := "WDT_ACADEMIC_TIME_err" + 1;
        
        IF get_errors + "WDT_ACADEMIC_TIME_err" > get_max_errors THEN
          get_abort:= TRUE;
        END IF;
    END;

    -- feedback for a bulk of rows
    IF get_audit_level = AUDIT_COMPLETE THEN
      get_rowkey_bulk.DELETE;
      rowkey_bulk_index := 1;
      FOR rowkey_index IN "WDT_ACADEMIC_TIME_si"..error_index - 1 LOOP
        get_rowkey_bulk(rowkey_bulk_index) := "WDT_ACADEMIC_TIME_srk"(rowkey_index);
        rowkey_bulk_index := rowkey_bulk_index + 1;
      END LOOP;
    END IF;
    
IF get_audit_level = AUDIT_COMPLETE THEN
  OWBSYS.WB_RT_MAPAUDIT.register_feedback_bulk(
    p_rta=>get_runtime_audit_id,
    p_step=>get_step_number,
    p_rowkey=>get_rowkey_bulk,
    p_status=>'NEW',
    p_table=>get_target_name,
    p_role=>'T',
    p_action=>normal_action,
    p_rowid=>get_rowid
  );
END IF;

    "WDT_ACADEMIC_TIME_ins" := "WDT_ACADEMIC_TIME_ins" + get_rowid.COUNT;
    "WDT_ACADEMIC_TIME_si" := error_index + 1;
  END LOOP;
  END IF;
END IF;


 IF get_use_hc AND NOT firstround THEN
  COMMIT; -- commit no.27
 END IF;
 IF get_use_hc AND NOT get_row_status THEN
 "WDT_ACADEMIC_TIME_ins" := "WDT_ACADEMIC_TIME_ins0"; 
"WDT_ACADEMIC_TIME_upd" := "WDT_ACADEMIC_TIME_upd0";
END IF;

END "JOINER_DML";

---------------------------------------------------------------------------
-- "JOINER_p" main
---------------------------------------------------------------------------

BEGIN
  IF get_abort OR get_abort_procedure THEN
    
    RETURN;
  END IF;

  
  IF NOT get_no_commit THEN
  COMMIT;  -- commit no.7
  sql_stmt := 'ALTER SESSION DISABLE PARALLEL DML';
  EXECUTE IMMEDIATE sql_stmt;
END IF;

  IF NOT "WDT_ACADEMIC_TIME_St" THEN
    -- For normal cursor query loop operation, skip map procedure initialization if 
    -- cursor is already open - procedure initialization should only be done the 
    -- first time the procedure is called (since mapping debugger
    -- executes the procedure multiple times and leaves the cursor open). 
    -- For table function (parallel row mode) operation, the cursor will already be
    -- open when the procedure is called, so execute the initialization.
    IF get_table_function OR (NOT "JOINER_c"%ISOPEN) THEN
      IF NOT (get_audit_level = AUDIT_NONE) THEN
        IF NOT "WDT_ACADEMIC_TIME_St" THEN
          "WDT_ACADEMIC_TIME_id" :=
            OWBSYS.WB_RT_MAPAUDIT.auditd_begin(  -- Template AuditDetailBegin
              p_rta=>get_runtime_audit_id,
              p_step=>get_step_number,
              p_name=>get_map_name,
              p_source=>get_source_name,
              p_source_uoid=>get_source_uoid,
              p_target=>'"WDT_ACADEMIC_TIME"',
              p_target_uoid=>'F14CC0123FC97D66E040F00AA4443159',
              p_stm=>'TRACE 1988',
            	p_info=>NULL,
              p_exec_mode=>l_exec_mode
            );
            get_audit_detail_id := "WDT_ACADEMIC_TIME_id";
              
get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
              p_rtd=>get_audit_detail_id,
              p_parent_operator_uoid=>'F14CC012403F7D66E040F00AA4443159', -- Operator WTT_STUDENT_COHORT_CLEAN
              p_parent_object_name=>'WTT_STUDENT_COHORT_CLEAN',
              p_parent_object_uoid=>'F085A9588E159205E040F00AA444128A', -- Table WTT_STUDENT_COHORT_CLEAN
              p_parent_object_type=>'Table',
              p_object_name=>'WTT_STUDENT_COHORT_CLEAN',
              p_object_uoid=>'F085A9588E159205E040F00AA444128A', -- Table WTT_STUDENT_COHORT_CLEAN
              p_object_type=>'Table',
              p_location_uoid=>'F085808747D20042E040F00AA4445414' -- Location EDWSTG_LOCATION
            );  
get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
              p_rtd=>get_audit_detail_id,
              p_parent_operator_uoid=>'F14CC0123FB27D66E040F00AA4443159', -- Operator WCV_DEFAULT_VALUES
              p_parent_object_name=>'WCV_DEFAULT_VALUES',
              p_parent_object_uoid=>'F085A9589FEA9205E040F00AA444128A', -- View WCV_DEFAULT_VALUES
              p_parent_object_type=>'View',
              p_object_name=>'WCV_DEFAULT_VALUES',
              p_object_uoid=>'F085A9589FEA9205E040F00AA444128A', -- View WCV_DEFAULT_VALUES
              p_object_type=>'View',
              p_location_uoid=>'F085808747D20042E040F00AA4445414' -- Location EDWSTG_LOCATION
            );  
get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
              p_rtd=>get_audit_detail_id,
              p_parent_operator_uoid=>'DBD002C3CF3C7A29E04356251895A34F', -- Operator WCV_DEFAULT_VALUES
              p_parent_object_name=>'WCV_DEFAULT_VALUES',
              p_parent_object_uoid=>'ADA129584CBC36F5E04018955625060B', -- View WCV_DEFAULT_VALUES
              p_parent_object_type=>'View',
              p_object_name=>'WCV_DEFAULT_VALUES',
              p_object_uoid=>'ADA129584CBC36F5E04018955625060B', -- View WCV_DEFAULT_VALUES
              p_object_type=>'View',
              p_location_uoid=>'ADA0B2222EF50292E040189556257D87' -- EDWSTG_LOCATION
            );  
get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
              p_rtd=>get_audit_detail_id,
              p_parent_operator_uoid=>'8EA04146AD0F2D12E0440003BAAC9CF3', -- Operator WTT_STUDENT_COHORT_CLEAN
              p_parent_object_name=>'WTT_STUDENT_COHORT_CLEAN',
              p_parent_object_uoid=>'8B7B34DE6B2E5599E0440003BAAC9CF3', -- Table WTT_STUDENT_COHORT_CLEAN
              p_parent_object_type=>'Table',
              p_object_name=>'WTT_STUDENT_COHORT_CLEAN',
              p_object_uoid=>'8B7B34DE6B2E5599E0440003BAAC9CF3', -- Table WTT_STUDENT_COHORT_CLEAN
              p_object_type=>'Table',
              p_location_uoid=>'8848749C75B34564E0440003BAAC9CF3' -- EDWSTG_LOCATION
            );  
get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
              p_rtd=>get_audit_detail_id,
              p_parent_operator_uoid=>'89C2287E668C662EE0440003BAAC9CF3', -- Operator WDT_ACADEMIC_TIME
              p_parent_object_name=>'WDT_ACADEMIC_TIME',
              p_parent_object_uoid=>'884CA879230550E7E0440003BAAC9CF3', -- Table WDT_ACADEMIC_TIME
              p_parent_object_type=>'Table',
              p_object_name=>'WDT_ACADEMIC_TIME',
              p_object_uoid=>'884CA879230550E7E0440003BAAC9CF3', -- Table WDT_ACADEMIC_TIME
              p_object_type=>'Table',
              p_location_uoid=>'8848749C75C84564E0440003BAAC9CF3' -- EDWMGR_LOCATION
            );  
get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
              p_rtd=>get_audit_detail_id,
              p_parent_operator_uoid=>'F14CC0123FC97D66E040F00AA4443159', -- Operator WDT_ACADEMIC_TIME
              p_parent_object_name=>'WDT_ACADEMIC_TIME',
              p_parent_object_uoid=>'F085A9581BE39205E040F00AA444128A', -- Table WDT_ACADEMIC_TIME
              p_parent_object_type=>'Table',
              p_object_name=>'WDT_ACADEMIC_TIME',
              p_object_uoid=>'F085A9581BE39205E040F00AA444128A', -- Table WDT_ACADEMIC_TIME
              p_object_type=>'Table',
              p_location_uoid=>'F085808747B70042E040F00AA4445414' -- Location EDWMGR_LOCATION
            );
        END IF;
        IF NOT get_no_commit THEN
          COMMIT; -- commit no.10
        END IF;
      END IF;

      

      -- Initialize buffer variables
      get_buffer_done.DELETE;
      get_buffer_done_index := 1;

    END IF; -- End if cursor not open

    -- Initialize internal loop index variables
    "JOINER_si" := 0;
    "WDT_ACADEMIC_TIME_i" := 1;
    get_rows_processed := FALSE;

    IF NOT get_abort AND NOT get_abort_procedure THEN
      "JOINER_SU";

      LOOP
        IF "JOINER_si" = 0 THEN
          "JOINER_RD";   -- Fetch data from source
          IF NOT get_read_success THEN
            bulk_count := "J1_23_A9".COUNT - 1;
          ELSE
            bulk_count := "J1_23_A9".COUNT;
          END IF;
                                        IF bulk_commit THEN
                                                bulk_commit_count := 0;
                                                bulk_commit := FALSE;
                                        END IF;
                                        bulk_commit_count := bulk_commit_count + bulk_count;

 
          IF get_use_hc THEN
            dml_bsize := 0;
            "WDT_ACADEMIC_TIME_ir".DELETE;
"WDT_ACADEMIC_TIME_i" := 1;
          END IF;
        END IF;

        -- Processing:
        "JOINER_i" := "JOINER_si";
        BEGIN
          
          LOOP
            EXIT WHEN "WDT_ACADEMIC_TIME_i" > get_bulk_size OR get_abort OR get_abort_procedure;

            "JOINER_i" := "JOINER_i" + 1;
            "JOINER_si" := "JOINER_i";
            IF get_use_hc THEN
              get_row_status := TRUE;
                "WDT_ACADEMIC_TIME_new" := FALSE;
            END IF;

            get_buffer_done(get_buffer_done_index) := 
              ("JOINER_c"%NOTFOUND AND
               "JOINER_i" > bulk_count);

            IF (NOT get_buffer_done(get_buffer_done_index)) AND
              "JOINER_i" > bulk_count THEN
            
              "JOINER_si" := 0;
              EXIT;
            END IF;


            
get_target_name := '"WDT_ACADEMIC_TIME"';
            get_audit_detail_id := "WDT_ACADEMIC_TIME_id";
            IF NOT "WDT_ACADEMIC_TIME_St" AND NOT get_buffer_done(get_buffer_done_index) THEN
              BEGIN
                get_rows_processed := true; -- Set to indicate that some row data was processed (for debugger)
            		error_stmt := SUBSTRB('"W5_1_A9"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_23_A9"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_1_A9"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_23_A9"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_1_A9"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_23_A9"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_1_A9" :=
            
            "J1_23_A9"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_2_A9"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_24_A9"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_2_A9"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_24_A9"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_2_A9"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_24_A9"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_2_A9" :=
            
            "J1_24_A9"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_3_A2"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_25_A2"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_3_A2"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_25_A2"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_3_A2"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_25_A2"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_3_A2" :=
            
            "J1_25_A2"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_4_A2"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_26_A2"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_4_A2"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_26_A2"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_4_A2"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_26_A2"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_4_A2" :=
            
            "J1_26_A2"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_5_A6"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_27_A6"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_5_A6"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_27_A6"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_5_A6"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_27_A6"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_5_A6" :=
            
            "J1_27_A6"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_6_A1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_28_A1"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_6_A1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_28_A1"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_6_A1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_28_A1"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_6_A1" :=
            
            "J1_28_A1"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_7_A1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_29_A1"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_7_A1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_29_A1"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_7_A1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_29_A1"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_7_A1" :=
            
            "J1_29_A1"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_8_A4"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_30_A4"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_8_A4"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_30_A4"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_8_A4"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_30_A4"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_8_A4" :=
            
            "J1_30_A4"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_9_U2"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_31_U2"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_9_U2"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_31_U2"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_9_U2"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_31_U2"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_9_U2" :=
            
            "J1_31_U2"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_10_U6"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_32_U6"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_10_U6"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_32_U6"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_10_U6"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_32_U6"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_10_U6" :=
            
            "J1_32_U6"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_11_U9"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_33_U9"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_11_U9"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_33_U9"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_11_U9"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_33_U9"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_11_U9" :=
            
            "J1_33_U9"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_12_U3"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_34_U3"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_12_U3"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_34_U3"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_12_U3"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_34_U3"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_12_U3" :=
            
            "J1_34_U3"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_13_U7"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_35_U7"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_13_U7"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_35_U7"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_13_U7"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_35_U7"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_13_U7" :=
            
            "J1_35_U7"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_14_U0"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_36_U0"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_14_U0"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_36_U0"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_14_U0"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_36_U0"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_14_U0" :=
            
            "J1_36_U0"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_15_U4"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_37_U4"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_15_U4"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_37_U4"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_15_U4"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_37_U4"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_15_U4" :=
            
            "J1_37_U4"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_16_U8"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_38_U8"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_16_U8"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_38_U8"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_16_U8"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_38_U8"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_16_U8" :=
            
            "J1_38_U8"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_17_U1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_39_U1"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_17_U1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_39_U1"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_17_U1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_39_U1"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_17_U1" :=
            
            "J1_39_U1"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_18_U5"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_40_U5"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_18_U5"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_40_U5"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_18_U5"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_40_U5"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_18_U5" :=
            
            "J1_40_U5"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_19_U9"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_41_U9"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_19_U9"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_41_U9"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_19_U9"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_41_U9"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_19_U9" :=
            
            "J1_41_U9"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_20_U2"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_42_U2"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_20_U2"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_42_U2"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_20_U2"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_42_U2"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_20_U2" :=
            
            "J1_42_U2"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_21_U6"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_43_U6"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_21_U6"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_43_U6"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_21_U6"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_43_U6"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_21_U6" :=
            
            "J1_43_U6"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_22_U0"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_44_U0"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_22_U0"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_44_U0"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_22_U0"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_44_U0"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_22_U0" :=
            
            "J1_44_U0"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_23_U3"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_45_U3"("JOINER_i");',0,2000);
            error_column := SUBSTRB('"W5_23_U3"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_45_U3"("JOINER_i"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_23_U3"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_45_U3"("JOINER_i");
            
            ELSIF get_row_status THEN
              "SV_W5_23_U3" :=
            
            "J1_45_U3"("JOINER_i");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_24_S0"("WDT_ACADEMIC_TIME_i") := 
            
            ''STUDENT_COHORT''/* ATTRIBUTE CONSTANT.OUTGRP1.SYSTEM_LOAD_PROCESS */;',0,2000);
            error_column := SUBSTRB('"W5_24_S0"',0,80);
            
            BEGIN
              error_value := SUBSTRB('STUDENT_COHORT'/* ATTRIBUTE CONSTANT.OUTGRP1.SYSTEM_LOAD_PROCESS */,0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_24_S0"("WDT_ACADEMIC_TIME_i") :=
            
            'STUDENT_COHORT'/* ATTRIBUTE CONSTANT.OUTGRP1.SYSTEM_LOAD_PROCESS */;
            
            ELSIF get_row_status THEN
              "SV_W5_24_S0" :=
            
            'STUDENT_COHORT'/* ATTRIBUTE CONSTANT.OUTGRP1.SYSTEM_LOAD_PROCESS */;
            
            ELSE
              NULL;
            END IF;
            
            
            
                IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
                  IF NOT get_use_hc THEN
                    "WDT_ACADEMIC_TIME_srk"("WDT_ACADEMIC_TIME_i") := get_rowkey + "JOINER_i" - 1;
                  ELSIF get_row_status THEN
                    "SV_WDT_ACADEMIC_TIME_srk" := get_rowkey + "JOINER_i" - 1;
                  ELSE
                    NULL;
                  END IF;
                  END IF;
                  IF get_use_hc THEN
                  "WDT_ACADEMIC_TIME_new" := TRUE;
                ELSE
                  "WDT_ACADEMIC_TIME_i" := "WDT_ACADEMIC_TIME_i" + 1;
                END IF;
              EXCEPTION
                WHEN OTHERS THEN
                    last_error_number  := SQLCODE;
  last_error_message := SQLERRM;
             
                  "JOINER_ER"('TRACE 1989: ' || error_stmt, error_column, error_value, SQLCODE, SQLERRM, get_audit_detail_id, "JOINER_i");
                  
                  "WDT_ACADEMIC_TIME_err" := "WDT_ACADEMIC_TIME_err" + 1;
                  
                  IF get_errors + "WDT_ACADEMIC_TIME_err" > get_max_errors THEN
                    get_abort:= TRUE;
                  END IF;
                  get_row_status := FALSE; 
              END;
            END IF;
            
            
            
              
            
             EXIT WHEN get_buffer_done(get_buffer_done_index);

            IF get_use_hc AND get_row_status AND ("WDT_ACADEMIC_TIME_new") THEN
              dml_bsize := dml_bsize + 1;
            	IF "WDT_ACADEMIC_TIME_new" 
            AND (NOT "WDT_ACADEMIC_TIME_nul") THEN
              "WDT_ACADEMIC_TIME_ir"(dml_bsize) := "WDT_ACADEMIC_TIME_i";
            	"W5_1_A9"("WDT_ACADEMIC_TIME_i") := "SV_W5_1_A9";
            	"W5_2_A9"("WDT_ACADEMIC_TIME_i") := "SV_W5_2_A9";
            	"W5_3_A2"("WDT_ACADEMIC_TIME_i") := "SV_W5_3_A2";
            	"W5_4_A2"("WDT_ACADEMIC_TIME_i") := "SV_W5_4_A2";
            	"W5_5_A6"("WDT_ACADEMIC_TIME_i") := "SV_W5_5_A6";
            	"W5_6_A1"("WDT_ACADEMIC_TIME_i") := "SV_W5_6_A1";
            	"W5_7_A1"("WDT_ACADEMIC_TIME_i") := "SV_W5_7_A1";
            	"W5_8_A4"("WDT_ACADEMIC_TIME_i") := "SV_W5_8_A4";
            	"W5_9_U2"("WDT_ACADEMIC_TIME_i") := "SV_W5_9_U2";
            	"W5_10_U6"("WDT_ACADEMIC_TIME_i") := "SV_W5_10_U6";
            	"W5_11_U9"("WDT_ACADEMIC_TIME_i") := "SV_W5_11_U9";
            	"W5_12_U3"("WDT_ACADEMIC_TIME_i") := "SV_W5_12_U3";
            	"W5_13_U7"("WDT_ACADEMIC_TIME_i") := "SV_W5_13_U7";
            	"W5_14_U0"("WDT_ACADEMIC_TIME_i") := "SV_W5_14_U0";
            	"W5_15_U4"("WDT_ACADEMIC_TIME_i") := "SV_W5_15_U4";
            	"W5_16_U8"("WDT_ACADEMIC_TIME_i") := "SV_W5_16_U8";
            	"W5_17_U1"("WDT_ACADEMIC_TIME_i") := "SV_W5_17_U1";
            	"W5_18_U5"("WDT_ACADEMIC_TIME_i") := "SV_W5_18_U5";
            	"W5_19_U9"("WDT_ACADEMIC_TIME_i") := "SV_W5_19_U9";
            	"W5_20_U2"("WDT_ACADEMIC_TIME_i") := "SV_W5_20_U2";
            	"W5_21_U6"("WDT_ACADEMIC_TIME_i") := "SV_W5_21_U6";
            	"W5_22_U0"("WDT_ACADEMIC_TIME_i") := "SV_W5_22_U0";
            	"W5_23_U3"("WDT_ACADEMIC_TIME_i") := "SV_W5_23_U3";
            	"W5_24_S0"("WDT_ACADEMIC_TIME_i") := "SV_W5_24_S0";
              "WDT_ACADEMIC_TIME_srk"("WDT_ACADEMIC_TIME_i") := "SV_WDT_ACADEMIC_TIME_srk";
              "WDT_ACADEMIC_TIME_i" := "WDT_ACADEMIC_TIME_i" + 1;
            ELSE
              "WDT_ACADEMIC_TIME_ir"(dml_bsize) := 0;
            END IF;
            END IF;
            
          END LOOP;

          "JOINER_DML"(1, TRUE);
          IF get_use_hc THEN
            IF NOT get_row_status THEN
              FOR start_index IN 1..dml_bsize LOOP
                "JOINER_DML"(start_index, FALSE);
              END LOOP;
            ELSE
              COMMIT;
            END IF;
          END IF;
          
        EXCEPTION
          WHEN OTHERS THEN
              last_error_number  := SQLCODE;
  last_error_message := SQLERRM;
            "JOINER_ER"('TRACE 1987: ' || error_stmt, '*', NULL, SQLCODE, SQLERRM, NULL, "JOINER_i");
            get_errors := get_errors + 1;
            IF get_errors > get_max_errors THEN  
  get_abort := TRUE;
END IF;
            
        END;
        
  IF NOT "WDT_ACADEMIC_TIME_St" AND bulk_commit_count > get_commit_frequency THEN
            IF NOT (get_audit_level = AUDIT_NONE) THEN
              OWBSYS.WB_RT_MAPAUDIT.auditd_progress(
                p_rtd=>"WDT_ACADEMIC_TIME_id",
                p_sel=>get_map_selected,
                p_ins=>"WDT_ACADEMIC_TIME_ins",
                p_upd=>"WDT_ACADEMIC_TIME_upd",
                p_del=>"WDT_ACADEMIC_TIME_del",
                p_err=>"WDT_ACADEMIC_TIME_err",
                p_dis=>NULL
              );
            END IF;
            IF NOT get_no_commit THEN
              COMMIT; -- commit no.25
              bulk_commit := TRUE;
            END IF;
          END IF;


        cursor_exhausted := "JOINER_c"%NOTFOUND;
        exit_loop_normal := get_abort OR get_abort_procedure OR (cursor_exhausted AND "JOINER_i" > bulk_count);
        exit_loop_early := get_rows_processed AND get_bulk_loop_count IS NOT NULL AND "JOINER_i" >= get_bulk_loop_count;
        get_close_cursor := get_abort OR get_abort_procedure OR cursor_exhausted;
        EXIT WHEN exit_loop_normal OR exit_loop_early;

      END LOOP;
    END IF;
    IF NOT get_no_commit THEN
      COMMIT; -- commit no.11
    END IF;
    BEGIN
      IF get_close_cursor THEN
        CLOSE "JOINER_c";
      END IF;
    EXCEPTION WHEN OTHERS THEN
      NULL;
      END;
    -- Do post processing only after procedure has been called for the last time and the cursor is closing
    IF get_close_cursor THEN
      
IF NOT get_abort AND NOT get_abort_procedure AND NOT get_no_commit THEN
        -- resolve actual owner and name
        OWBSYS.WB_RT_MAPAUDIT_UTIL.resolve_name(p_original_owner=>
      USER, p_original_name=>'WDT_ACADEMIC_TIME', p_actual_owner=>actual_owner, p_actual_name=>actual_name);
      
        IF actual_name IS NOT NULL THEN
          SELECT NVL(num_rows, 0) INTO get_map_num_rows
          FROM all_tables
          WHERE table_name = actual_name
          AND owner = actual_owner;
          IF ("WDT_ACADEMIC_TIME_ins" + "WDT_ACADEMIC_TIME_upd" + "WDT_ACADEMIC_TIME_del") >= get_map_num_rows THEN
            a_table_to_analyze.ownname := actual_owner;
            a_table_to_analyze.tabname := actual_name;
            a_table_to_analyze.estimate_percent := 5;
            a_table_to_analyze.granularity := 'ALL';
            a_table_to_analyze.cascade := TRUE;
            a_table_to_analyze.degree  := NULL;
            "EDW_STUD_CHRT_DIM_ACAD_TIME".tables_to_analyze(
          "EDW_STUD_CHRT_DIM_ACAD_TIME".tables_to_analyze.COUNT + 1) := a_table_to_analyze;
          END IF;
        END IF;
      END IF;
      
      NULL;
    END IF; -- If get_close_cursor
  END IF;
  
  IF NOT "WDT_ACADEMIC_TIME_St"
    AND NOT (get_audit_level = AUDIT_NONE) THEN
      OWBSYS.WB_RT_MAPAUDIT.auditd_end(
        p_rtd=>"WDT_ACADEMIC_TIME_id",
        p_sel=>get_map_selected,  -- AuditDetailEnd1
        p_ins=>"WDT_ACADEMIC_TIME_ins",
        p_upd=>"WDT_ACADEMIC_TIME_upd",
        p_del=>"WDT_ACADEMIC_TIME_del",
        p_err=>"WDT_ACADEMIC_TIME_err",
        p_dis=>NULL
      );
    END IF;
  	get_inserted := get_inserted + "WDT_ACADEMIC_TIME_ins";
    get_updated  := get_updated  + "WDT_ACADEMIC_TIME_upd";
    get_deleted  := get_deleted  + "WDT_ACADEMIC_TIME_del";
    get_errors   := get_errors   + "WDT_ACADEMIC_TIME_err";

  get_selected := get_selected + get_map_selected;
  IF NOT get_no_commit THEN
  COMMIT;  -- commit no.21
END IF;

END "JOINER_p";



-- Procedure "JOINER_t" is the entry point for map "JOINER_t"

PROCEDURE "JOINER_t"
 IS
-- Constants for this map
get_map_name               CONSTANT VARCHAR2(40) := '"JOINER_t"';
get_source_name            CONSTANT VARCHAR2(2000) := SUBSTRB('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,2000);
get_source_uoid            CONSTANT VARCHAR2(2000) := SUBSTRB('F14CC0123FB27D66E040F00AA4443159',0,2000);
get_step_number            CONSTANT NUMBER(22) := 1;

cursor_exhausted           BOOLEAN := FALSE;
get_close_cursor           BOOLEAN := TRUE;
exit_loop_normal           BOOLEAN := FALSE;
exit_loop_early            BOOLEAN := FALSE;
loop_count                 NUMBER(22);

get_map_selected           NUMBER(22) := 0;
get_map_errors             NUMBER(22) := 0;
get_map_num_rows           NUMBER(22) := 0;
actual_owner               VARCHAR2(30);
actual_name                VARCHAR2(30);

-- Constraint management
num_fk_err                 NUMBER(22);
l_rowkey                   NUMBER(22) := 0;
l_table                    VARCHAR2(30) := 'CREATE';
l_rowid                    ROWID;
l_owner                    VARCHAR2(30);
l_tablename                VARCHAR2(30);
l_constraint               VARCHAR2(30);
l_exec_mode                BINARY_INTEGER := MODE_ROW_TARGET;
sql_excp_stmt              VARCHAR2(32767);
TYPE exceptionsCurType IS REF CURSOR;
exceptions_cursor          exceptionsCurType;

normal_action              VARCHAR2(20);
extended_action            VARCHAR2(2000);
error_action               VARCHAR2(20);
-- The get_audit_detail_id variable has been moved to a package-level variable
-- get_audit_detail_id        NUMBER(22) := 0;
get_target_name            VARCHAR2(80);
error_column               VARCHAR2(80);
error_value                VARCHAR2(2000);
error_rowkey               NUMBER(22) := 0;

-- Scalar variables for auditing

"WDT_ACADEMIC_TIME_id" NUMBER(22) := 0;
"WDT_ACADEMIC_TIME_ins" NUMBER(22) := 0;
"WDT_ACADEMIC_TIME_upd" NUMBER(22) := 0;
"WDT_ACADEMIC_TIME_del" NUMBER(22) := 0;
"WDT_ACADEMIC_TIME_err" NUMBER(22) := 0;
-- Variables for auditing in bulk processing
one_rowkey            NUMBER(22) := 0;
get_rowkey            NUMBER(22) := 0;
get_rowkey_bulk       OWBSYS.WB_RT_MAPAUDIT.NUMBERLIST;
one_rowid             ROWID;
get_rowid             OWBSYS.WB_RT_MAPAUDIT.ROWIDLIST;
rowkey_bulk_index     NUMBER(22) := 0;
x_it_err_count        NUMBER(22) := 0;
get_rowkey_error      NUMBER(22) := 0;

"WDT_ACADEMIC_TIME_srk" OWBSYS.WB_RT_MAPAUDIT.NUMBERLIST;

-- Helper variables for implementing the correlated commit mechanism
TYPE index_redirect_array IS TABLE OF NUMBER INDEX BY BINARY_INTEGER;

"WDT_ACADEMIC_TIME_ir"  index_redirect_array;
"SV_WDT_ACADEMIC_TIME_srk" NUMBER;
"WDT_ACADEMIC_TIME_new"  BOOLEAN;
"WDT_ACADEMIC_TIME_nul"  BOOLEAN := FALSE;

-- Bulk processing
error_index                NUMBER(22);
update_bulk                OWBSYS.WB_RT_MAPAUDIT.NUMBERLIST;
update_bulk_index          NUMBER(22) := 0;
insert_bulk_index          NUMBER(22) := 0;
last_successful_index      NUMBER(22) := 0;
feedback_bulk_limit        NUMBER(22) := 0;
bulk_commit_count          NUMBER(22) := 0;
bulk_commit                BOOLEAN := FALSE;
get_row_status             BOOLEAN; 
dml_bsize                  NUMBER; 
row_count                  NUMBER(22);
bulk_count                 NUMBER(22);

"JOINER_si$1" NUMBER(22) := 0;

"JOINER_i$1" NUMBER(22) := 0;


"WDT_ACADEMIC_TIME_si" NUMBER(22) := 0;

"WDT_ACADEMIC_TIME_i" NUMBER(22) := 0;




-- Bulk: types for collection variables
TYPE "T_J1_23_A9$1" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_ROWKEY_JOINER$1" IS TABLE OF VARCHAR2(18) INDEX BY BINARY_INTEGER;
TYPE "T_J1_24_A9$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_25_A2$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_26_A2$1" IS TABLE OF DATE INDEX BY BINARY_INTEGER;
TYPE "T_J1_27_A6$1" IS TABLE OF DATE INDEX BY BINARY_INTEGER;
TYPE "T_J1_28_A1$1" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_J1_29_A1$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_30_A4$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_31_U2$1" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_J1_32_U6$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_33_U9$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_34_U3$1" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_J1_35_U7$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_36_U0$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_37_U4$1" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_J1_38_U8$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_39_U1$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_40_U5$1" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_J1_41_U9$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_42_U2$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_43_U6$1" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_J1_44_U0$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_J1_45_U3$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_ROWKEY_DUMMY_TABLE_CURSOR" IS TABLE OF VARCHAR2(18) INDEX BY BINARY_INTEGER;
TYPE "T_W5_1_A9$1" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_W5_2_A9$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_3_A2$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_4_A2$1" IS TABLE OF DATE INDEX BY BINARY_INTEGER;
TYPE "T_W5_5_A6$1" IS TABLE OF DATE INDEX BY BINARY_INTEGER;
TYPE "T_W5_6_A1$1" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_W5_7_A1$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_8_A4$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_9_U2$1" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_W5_10_U6$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_11_U9$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_12_U3$1" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_W5_13_U7$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_14_U0$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_15_U4$1" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_W5_16_U8$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_17_U1$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_18_U5$1" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_W5_19_U9$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_20_U2$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_21_U6$1" IS TABLE OF VARCHAR2(252) INDEX BY BINARY_INTEGER;
TYPE "T_W5_22_U0$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_23_U3$1" IS TABLE OF VARCHAR2(1020) INDEX BY BINARY_INTEGER;
TYPE "T_W5_24_S0$1" IS TABLE OF VARCHAR2(120) INDEX BY BINARY_INTEGER;

-- Bulk: intermediate scalar variables
"SV_J1_23_A9$1"  VARCHAR2(252);
"SV_ROWKEY_JOINER$1"  VARCHAR2(18);
"SV_J1_24_A9$1"  VARCHAR2(1020);
"SV_J1_25_A2$1"  VARCHAR2(1020);
"SV_J1_26_A2$1"  DATE;
"SV_J1_27_A6$1"  DATE;
"SV_J1_28_A1$1"  VARCHAR2(252);
"SV_J1_29_A1$1"  VARCHAR2(1020);
"SV_J1_30_A4$1"  VARCHAR2(1020);
"SV_J1_31_U2$1"  VARCHAR2(252);
"SV_J1_32_U6$1"  VARCHAR2(1020);
"SV_J1_33_U9$1"  VARCHAR2(1020);
"SV_J1_34_U3$1"  VARCHAR2(252);
"SV_J1_35_U7$1"  VARCHAR2(1020);
"SV_J1_36_U0$1"  VARCHAR2(1020);
"SV_J1_37_U4$1"  VARCHAR2(252);
"SV_J1_38_U8$1"  VARCHAR2(1020);
"SV_J1_39_U1$1"  VARCHAR2(1020);
"SV_J1_40_U5$1"  VARCHAR2(252);
"SV_J1_41_U9$1"  VARCHAR2(1020);
"SV_J1_42_U2$1"  VARCHAR2(1020);
"SV_J1_43_U6$1"  VARCHAR2(252);
"SV_J1_44_U0$1"  VARCHAR2(1020);
"SV_J1_45_U3$1"  VARCHAR2(1020);
"SV_ROWKEY_DUMMY_TABLE_CURSOR"  VARCHAR2(18);
"SV_W5_1_A9$1"  VARCHAR2(252);
"SV_W5_2_A9$1"  VARCHAR2(1020);
"SV_W5_3_A2$1"  VARCHAR2(1020);
"SV_W5_4_A2$1"  DATE;
"SV_W5_5_A6$1"  DATE;
"SV_W5_6_A1$1"  VARCHAR2(252);
"SV_W5_7_A1$1"  VARCHAR2(1020);
"SV_W5_8_A4$1"  VARCHAR2(1020);
"SV_W5_9_U2$1"  VARCHAR2(252);
"SV_W5_10_U6$1"  VARCHAR2(1020);
"SV_W5_11_U9$1"  VARCHAR2(1020);
"SV_W5_12_U3$1"  VARCHAR2(252);
"SV_W5_13_U7$1"  VARCHAR2(1020);
"SV_W5_14_U0$1"  VARCHAR2(1020);
"SV_W5_15_U4$1"  VARCHAR2(252);
"SV_W5_16_U8$1"  VARCHAR2(1020);
"SV_W5_17_U1$1"  VARCHAR2(1020);
"SV_W5_18_U5$1"  VARCHAR2(252);
"SV_W5_19_U9$1"  VARCHAR2(1020);
"SV_W5_20_U2$1"  VARCHAR2(1020);
"SV_W5_21_U6$1"  VARCHAR2(252);
"SV_W5_22_U0$1"  VARCHAR2(1020);
"SV_W5_23_U3$1"  VARCHAR2(1020);
"SV_W5_24_S0$1"  VARCHAR2(120);

-- Bulk: intermediate collection variables
"J1_23_A9$1" "T_J1_23_A9$1";
"ROWKEY_JOINER$1" "T_ROWKEY_JOINER$1";
"J1_24_A9$1" "T_J1_24_A9$1";
"J1_25_A2$1" "T_J1_25_A2$1";
"J1_26_A2$1" "T_J1_26_A2$1";
"J1_27_A6$1" "T_J1_27_A6$1";
"J1_28_A1$1" "T_J1_28_A1$1";
"J1_29_A1$1" "T_J1_29_A1$1";
"J1_30_A4$1" "T_J1_30_A4$1";
"J1_31_U2$1" "T_J1_31_U2$1";
"J1_32_U6$1" "T_J1_32_U6$1";
"J1_33_U9$1" "T_J1_33_U9$1";
"J1_34_U3$1" "T_J1_34_U3$1";
"J1_35_U7$1" "T_J1_35_U7$1";
"J1_36_U0$1" "T_J1_36_U0$1";
"J1_37_U4$1" "T_J1_37_U4$1";
"J1_38_U8$1" "T_J1_38_U8$1";
"J1_39_U1$1" "T_J1_39_U1$1";
"J1_40_U5$1" "T_J1_40_U5$1";
"J1_41_U9$1" "T_J1_41_U9$1";
"J1_42_U2$1" "T_J1_42_U2$1";
"J1_43_U6$1" "T_J1_43_U6$1";
"J1_44_U0$1" "T_J1_44_U0$1";
"J1_45_U3$1" "T_J1_45_U3$1";
"ROWKEY_DUMMY_TABLE_CURSOR" "T_ROWKEY_DUMMY_TABLE_CURSOR";
"W5_1_A9$1" "T_W5_1_A9$1";
"W5_2_A9$1" "T_W5_2_A9$1";
"W5_3_A2$1" "T_W5_3_A2$1";
"W5_4_A2$1" "T_W5_4_A2$1";
"W5_5_A6$1" "T_W5_5_A6$1";
"W5_6_A1$1" "T_W5_6_A1$1";
"W5_7_A1$1" "T_W5_7_A1$1";
"W5_8_A4$1" "T_W5_8_A4$1";
"W5_9_U2$1" "T_W5_9_U2$1";
"W5_10_U6$1" "T_W5_10_U6$1";
"W5_11_U9$1" "T_W5_11_U9$1";
"W5_12_U3$1" "T_W5_12_U3$1";
"W5_13_U7$1" "T_W5_13_U7$1";
"W5_14_U0$1" "T_W5_14_U0$1";
"W5_15_U4$1" "T_W5_15_U4$1";
"W5_16_U8$1" "T_W5_16_U8$1";
"W5_17_U1$1" "T_W5_17_U1$1";
"W5_18_U5$1" "T_W5_18_U5$1";
"W5_19_U9$1" "T_W5_19_U9$1";
"W5_20_U2$1" "T_W5_20_U2$1";
"W5_21_U6$1" "T_W5_21_U6$1";
"W5_22_U0$1" "T_W5_22_U0$1";
"W5_23_U3$1" "T_W5_23_U3$1";
"W5_24_S0$1" "T_W5_24_S0$1";

PROCEDURE Main_ES(p_step_number IN NUMBER, p_rowkey IN NUMBER, p_table IN VARCHAR2, p_col IN VARCHAR2, p_value IN VARCHAR2 default 'VALUE DISABLED') IS
BEGIN
  get_column_seq := get_column_seq + 1;
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>p_rowkey,
    p_seq=>get_column_seq,
    p_instance=>1,
    p_table=>SUBSTR(p_table,0,80),
    p_column=>SUBSTR(p_col,0,80),
    p_value=>SUBSTRB(p_value,0,2000),
    p_step=>p_step_number,
    p_role=>'T'
  );
END;

---------------------------------------------------------------------------
-- This procedure records column values of one erroneous source row
-- into an audit trail table named WB_RT_ERROR_SOURCES.  Each column is
-- recorded by one row in the audit trail.  To collect all source column
-- values corresponding to one erroneous source row, query the audit
-- trail and specify:
--    RTA_IID, uniquely identifies one audited run,
--    RTE_ROWKEY, uniquely identifies a source row within and audited run
---------------------------------------------------------------------------
PROCEDURE "JOINER_ES$1"(error_index IN NUMBER) IS
BEGIN

  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>1,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('ACADEMIC_PERIOD',0,80),
    p_value=>SUBSTRB("J1_23_A9$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>2,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('ACADEMIC_PERIOD_SD',0,80),
    p_value=>SUBSTRB("J1_24_A9$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>3,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('ACADEMIC_PERIOD_LD',0,80),
    p_value=>SUBSTRB("J1_25_A2$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>4,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('ACADEMIC_PERIOD_BEGIN_DATE',0,80),
    p_value=>SUBSTRB("J1_26_A2$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>5,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('ACADEMIC_PERIOD_END_DATE',0,80),
    p_value=>SUBSTRB("J1_27_A6$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>6,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('ACADEMIC_YEAR',0,80),
    p_value=>SUBSTRB("J1_28_A1$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>7,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('ACADEMIC_YEAR_SD',0,80),
    p_value=>SUBSTRB("J1_29_A1$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>8,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('ACADEMIC_YEAR_LD',0,80),
    p_value=>SUBSTRB("J1_30_A4$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>9,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_01',0,80),
    p_value=>SUBSTRB("J1_31_U2$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>10,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_01_SD',0,80),
    p_value=>SUBSTRB("J1_32_U6$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>11,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_01_LD',0,80),
    p_value=>SUBSTRB("J1_33_U9$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>12,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_02',0,80),
    p_value=>SUBSTRB("J1_34_U3$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>13,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_02_SD',0,80),
    p_value=>SUBSTRB("J1_35_U7$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>14,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_02_LD',0,80),
    p_value=>SUBSTRB("J1_36_U0$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>15,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_03',0,80),
    p_value=>SUBSTRB("J1_37_U4$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>16,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_03_SD',0,80),
    p_value=>SUBSTRB("J1_38_U8$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>17,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_03_LD',0,80),
    p_value=>SUBSTRB("J1_39_U1$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>18,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_04',0,80),
    p_value=>SUBSTRB("J1_40_U5$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>19,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_04_SD',0,80),
    p_value=>SUBSTRB("J1_41_U9$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>20,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_04_LD',0,80),
    p_value=>SUBSTRB("J1_42_U2$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>21,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_05',0,80),
    p_value=>SUBSTRB("J1_43_U6$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>22,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_05_SD',0,80),
    p_value=>SUBSTRB("J1_44_U0$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  OWBSYS.WB_RT_MAPAUDIT.error_source(
    p_rta=>get_runtime_audit_id,
    p_rowkey=>get_rowkey + error_index - 1,
    p_seq=>23,
    p_instance=>1,
    p_table=>SUBSTR('"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',0,80),
    p_column=>SUBSTR('USER_ATTRIBUTE_05_LD',0,80),
    p_value=>SUBSTRB("J1_45_U3$1"(error_index),0,2000),
    p_step=>get_step_number,
    p_role=>'S'
    );
  RETURN;
    
  END "JOINER_ES$1";

---------------------------------------------------------------------------
-- Procedure "JOINER_ER$1" registers error for one erroneous row
---------------------------------------------------------------------------
PROCEDURE "JOINER_ER$1"(p_statement IN VARCHAR2, p_column IN VARCHAR2, p_col_value IN VARCHAR2, p_sqlcode IN NUMBER, p_sqlerrm IN VARCHAR2, p_auditd_id IN NUMBER, p_error_index IN NUMBER) IS
l_source_target_name VARCHAR2(80);
BEGIN
  IF p_auditd_id IS NULL THEN
    l_source_target_name := SUBSTR(get_source_name,0,80);
  ELSE
    l_source_target_name := get_target_name;
  END IF;

  IF p_error_index = 0 THEN  
  get_rowkey_error := 0;
ELSE  
  get_rowkey_error := get_rowkey + p_error_index - 1;
END IF;

  IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
    OWBSYS.WB_RT_MAPAUDIT.error(
      p_rta=>get_runtime_audit_id,
      p_step=>get_step_number,
      p_rtd=>p_auditd_id,
      p_rowkey=>get_rowkey_error,
      p_table=>l_source_target_name,
      p_column=>p_column,
      p_dstval=>p_col_value,
      p_stm=>'TRACE 1990: ' || p_statement,
      p_sqlerr=>p_sqlcode,
      p_sqlerrm=>p_sqlerrm,
      p_rowid=>NULL
    );
  END IF;

  IF ( get_audit_level = AUDIT_COMPLETE ) AND (get_rowkey_error > 0) THEN
    OWBSYS.WB_RT_MAPAUDIT.register_feedback(
      p_rta=>get_runtime_audit_id,
      p_step=>get_step_number,
      p_rowkey=>get_rowkey_error,
      p_status=>'ERROR',
      p_table=>l_source_target_name,
      p_role=>'T',
      p_action=>SUBSTR(p_statement,0,30)
    );
  END IF;

  IF ( get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE ) AND (get_rowkey_error > 0) THEN
    "JOINER_ES$1"(p_error_index);
  END IF;
END "JOINER_ER$1";



---------------------------------------------------------------------------
-- Procedure "JOINER_SU$1" opens and initializes data source
-- for map "JOINER_t"
---------------------------------------------------------------------------
PROCEDURE "JOINER_SU$1" IS
BEGIN
  IF get_abort THEN
    RETURN;
  END IF;
  IF (NOT "JOINER_c$1"%ISOPEN) THEN
    OPEN "JOINER_c$1";
  END IF;
  get_read_success := TRUE;
END "JOINER_SU$1";

---------------------------------------------------------------------------
-- Procedure "JOINER_RD$1" fetches a bulk of rows from
--   the data source for map "JOINER_t"
---------------------------------------------------------------------------
PROCEDURE "JOINER_RD$1" IS
BEGIN
  IF NOT get_read_success THEN
    get_abort := TRUE;
    IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
      OWBSYS.WB_RT_MAPAUDIT.error(
        p_rta=>get_runtime_audit_id,
        p_step=>0,
        p_rtd=>NULL,
        p_rowkey=>0,
        p_table=>NULL,
        p_column=>NULL,
        p_dstval=>NULL,
        p_stm=>NULL,
        p_sqlerr=>-20007,
        p_sqlerrm=>'CursorFetchMapTerminationRTV20007',
        p_rowid=>NULL
      );
    END IF;
                END IF;

  IF get_abort OR get_abort_procedure THEN
    RETURN;
  END IF;

  BEGIN
    "J1_23_A9$1".DELETE;
    "J1_24_A9$1".DELETE;
    "J1_25_A2$1".DELETE;
    "J1_26_A2$1".DELETE;
    "J1_27_A6$1".DELETE;
    "J1_28_A1$1".DELETE;
    "J1_29_A1$1".DELETE;
    "J1_30_A4$1".DELETE;
    "J1_31_U2$1".DELETE;
    "J1_32_U6$1".DELETE;
    "J1_33_U9$1".DELETE;
    "J1_34_U3$1".DELETE;
    "J1_35_U7$1".DELETE;
    "J1_36_U0$1".DELETE;
    "J1_37_U4$1".DELETE;
    "J1_38_U8$1".DELETE;
    "J1_39_U1$1".DELETE;
    "J1_40_U5$1".DELETE;
    "J1_41_U9$1".DELETE;
    "J1_42_U2$1".DELETE;
    "J1_43_U6$1".DELETE;
    "J1_44_U0$1".DELETE;
    "J1_45_U3$1".DELETE;

    FETCH
      "JOINER_c$1"
    BULK COLLECT INTO
      "J1_23_A9$1",
      "J1_24_A9$1",
      "J1_25_A2$1",
      "J1_26_A2$1",
      "J1_27_A6$1",
      "J1_28_A1$1",
      "J1_29_A1$1",
      "J1_30_A4$1",
      "J1_31_U2$1",
      "J1_32_U6$1",
      "J1_33_U9$1",
      "J1_34_U3$1",
      "J1_35_U7$1",
      "J1_36_U0$1",
      "J1_37_U4$1",
      "J1_38_U8$1",
      "J1_39_U1$1",
      "J1_40_U5$1",
      "J1_41_U9$1",
      "J1_42_U2$1",
      "J1_43_U6$1",
      "J1_44_U0$1",
      "J1_45_U3$1"
    LIMIT get_bulk_size;

    get_total_processed_rowcount := get_total_processed_rowcount + "J1_23_A9$1".COUNT;

    IF "JOINER_c$1"%NOTFOUND AND "J1_23_A9$1".COUNT = 0 THEN
      RETURN;
    END IF;
    -- register feedback for successful reads
    IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
      get_rowkey := rowkey_counter;
      rowkey_counter := rowkey_counter + "J1_23_A9$1".COUNT;
    END IF;
    
    IF get_audit_level = AUDIT_COMPLETE THEN
      OWBSYS.WB_RT_MAPAUDIT.register_feedback_bulk(
        p_rta=>get_runtime_audit_id,
        p_step=>get_step_number,
        p_rowkey=>get_rowkey,
        p_status=>'NEW',
        p_table=>get_source_name,
        p_role=>'S',
        p_action=>'SELECT'
      );
    END IF;
    get_map_selected := get_map_selected + "J1_23_A9$1".COUNT;
  EXCEPTION
    WHEN OTHERS THEN
        last_error_number  := SQLCODE;
  last_error_message := SQLERRM;
      get_read_success := FALSE;
      -- register error
      IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
        one_rowkey := rowkey_counter;
        rowkey_counter := rowkey_counter + 1;
        OWBSYS.WB_RT_MAPAUDIT.error(
          p_rta=>get_runtime_audit_id,
          p_step=>get_step_number,
          p_rtd=>NULL,
          p_rowkey=>one_rowkey,
          p_table=>get_source_name,
          p_column=>'*',
          p_dstval=>NULL,
          p_stm=>'TRACE 1991: SELECT',
          p_sqlerr=>SQLCODE,
          p_sqlerrm=>SQLERRM,
          p_rowid=>NULL
        );
      END IF;
      
      -- register feedback for the erroneous row
      IF get_audit_level = AUDIT_COMPLETE THEN
        OWBSYS.WB_RT_MAPAUDIT.register_feedback(
          p_rta=>get_runtime_audit_id,
          p_step=>get_step_number,
          p_rowkey=>one_rowkey,
          p_status=>'ERROR',
          p_table=>get_source_name,
          p_role=>'S',
          p_action=>'SELECT'
        );
      END IF;
      get_errors := get_errors + 1;
      IF get_errors > get_max_errors THEN get_abort := TRUE; END IF;
  END;
END "JOINER_RD$1";

---------------------------------------------------------------------------
-- Procedure "JOINER_DML$1" does DML for a bulk of rows starting from index si.
---------------------------------------------------------------------------
PROCEDURE "JOINER_DML$1"(si NUMBER, firstround BOOLEAN) IS
 "WDT_ACADEMIC_TIME_ins0" NUMBER := "WDT_ACADEMIC_TIME_ins";
"WDT_ACADEMIC_TIME_upd0" NUMBER := "WDT_ACADEMIC_TIME_upd";
BEGIN
 IF get_use_hc THEN
  IF firstround AND NOT get_row_status THEN
   RETURN;
  END IF;
  get_row_status := TRUE;
 END IF;
 IF NOT "WDT_ACADEMIC_TIME_St" THEN
-- Update/Insert DML for "WDT_ACADEMIC_TIME"
  normal_action := 'UPDATE';
  error_action  := 'UPDATE';
  get_target_name := '"WDT_ACADEMIC_TIME"';
  get_audit_detail_id := "WDT_ACADEMIC_TIME_id";
  "WDT_ACADEMIC_TIME_si" := 1;
  update_bulk.DELETE;
  update_bulk_index := 1;
  IF "WDT_ACADEMIC_TIME_i" > get_bulk_size 
 OR "JOINER_c$1"%NOTFOUND OR get_abort OR get_use_hc THEN
    LOOP
      get_rowid.DELETE;

      BEGIN
        FORALL i IN "WDT_ACADEMIC_TIME_si".."WDT_ACADEMIC_TIME_i" - 1 
          UPDATE
            "WDT_ACADEMIC_TIME"
          SET

						"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_SD" = "W5_2_A9$1"
(i),						"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_LD" = "W5_3_A2$1"
(i),						"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_BEGIN_DATE" = "W5_4_A2$1"
(i),						"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_END_DATE" = "W5_5_A6$1"
(i),						"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_SD" = "W5_7_A1$1"
(i),						"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_LD" = "W5_8_A4$1"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_SD" = "W5_10_U6$1"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_LD" = "W5_11_U9$1"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_SD" = "W5_13_U7$1"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_LD" = "W5_14_U0$1"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_SD" = "W5_16_U8$1"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_LD" = "W5_17_U1$1"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_SD" = "W5_19_U9$1"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_LD" = "W5_20_U2$1"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_SD" = "W5_22_U0$1"
(i),						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_LD" = "W5_23_U3$1"
(i),						"WDT_ACADEMIC_TIME"."SYSTEM_LOAD_PROCESS" = "W5_24_S0$1"
(i)
  
          WHERE

						"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD" = "W5_1_A9$1"
(i) AND						"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR" = "W5_6_A1$1"
(i) AND						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01" = "W5_9_U2$1"
(i) AND						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02" = "W5_12_U3$1"
(i) AND						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03" = "W5_15_U4$1"
(i) AND						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04" = "W5_18_U5$1"
(i) AND						"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05" = "W5_21_U6$1"
(i)
  
          RETURNING ROWID BULK COLLECT INTO get_rowid;
          
        feedback_bulk_limit := "WDT_ACADEMIC_TIME_i" - 1;
        get_rowkey_bulk.DELETE;
        rowkey_bulk_index := 1;
        FOR rowkey_index IN "WDT_ACADEMIC_TIME_si"..feedback_bulk_limit LOOP
          IF SQL%BULK_ROWCOUNT(rowkey_index) = 0 THEN
            update_bulk(update_bulk_index) := rowkey_index;
            update_bulk_index := update_bulk_index + 1;
          ELSE
            IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
              get_rowkey_bulk(rowkey_bulk_index) := "WDT_ACADEMIC_TIME_srk"(rowkey_index);
              rowkey_bulk_index := rowkey_bulk_index + 1;
            END IF;
          END IF;
        END LOOP;
        
        
IF get_audit_level = AUDIT_COMPLETE THEN
  OWBSYS.WB_RT_MAPAUDIT.register_feedback_bulk(
    p_rta=>get_runtime_audit_id,
    p_step=>get_step_number,
    p_rowkey=>get_rowkey_bulk,
    p_status=>'NEW',
    p_table=>get_target_name,
    p_role=>'T',
    p_action=>normal_action,
    p_rowid=>get_rowid
  );
END IF;

        "WDT_ACADEMIC_TIME_upd" := "WDT_ACADEMIC_TIME_upd" + get_rowid.COUNT;
        "WDT_ACADEMIC_TIME_si" := "WDT_ACADEMIC_TIME_i";

      EXCEPTION
        WHEN OTHERS THEN
            last_error_number  := SQLCODE;
  last_error_message := SQLERRM;
          IF SQL%NOTFOUND THEN
            last_successful_index := 0;
          ELSE
            FOR rowkey_index IN REVERSE "WDT_ACADEMIC_TIME_si".."WDT_ACADEMIC_TIME_i"- 1 LOOP
              IF NOT (SQL%BULK_ROWCOUNT(rowkey_index) = 0) THEN
                last_successful_index := rowkey_index;
                EXIT;
              END IF;
            END LOOP;
          END IF;
          feedback_bulk_limit := last_successful_index;
          get_rowkey_bulk.DELETE;
          rowkey_bulk_index := 1;
          FOR rowkey_index IN "WDT_ACADEMIC_TIME_si"..feedback_bulk_limit LOOP
            IF SQL%BULK_ROWCOUNT(rowkey_index) = 0 THEN
              update_bulk(update_bulk_index) := rowkey_index;
              update_bulk_index := update_bulk_index + 1;
            ELSE
              IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
                get_rowkey_bulk(rowkey_bulk_index) := "WDT_ACADEMIC_TIME_srk"(rowkey_index);
                rowkey_bulk_index := rowkey_bulk_index + 1;
              END IF;
            END IF;
          END LOOP;
          
          
IF get_audit_level = AUDIT_COMPLETE THEN
  OWBSYS.WB_RT_MAPAUDIT.register_feedback_bulk(
    p_rta=>get_runtime_audit_id,
    p_step=>get_step_number,
    p_rowkey=>get_rowkey_bulk,
    p_status=>'NEW',
    p_table=>get_target_name,
    p_role=>'T',
    p_action=>normal_action,
    p_rowid=>get_rowid
  );
END IF;
          "WDT_ACADEMIC_TIME_upd" := "WDT_ACADEMIC_TIME_upd" + get_rowid.COUNT;
          IF last_successful_index = 0 THEN
            last_successful_index := "WDT_ACADEMIC_TIME_si";
          ELSE
            last_successful_index := last_successful_index +1;
          END IF;
          LOOP
            BEGIN
              UPDATE
                "WDT_ACADEMIC_TIME"
              SET

								"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_SD" = "W5_2_A9$1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_LD" = "W5_3_A2$1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_BEGIN_DATE" = "W5_4_A2$1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_END_DATE" = "W5_5_A6$1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_SD" = "W5_7_A1$1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_LD" = "W5_8_A4$1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_SD" = "W5_10_U6$1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_LD" = "W5_11_U9$1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_SD" = "W5_13_U7$1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_LD" = "W5_14_U0$1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_SD" = "W5_16_U8$1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_LD" = "W5_17_U1$1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_SD" = "W5_19_U9$1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_LD" = "W5_20_U2$1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_SD" = "W5_22_U0$1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_LD" = "W5_23_U3$1"
(last_successful_index),								"WDT_ACADEMIC_TIME"."SYSTEM_LOAD_PROCESS" = "W5_24_S0$1"
(last_successful_index)

              WHERE

								"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD" = "W5_1_A9$1"
(last_successful_index) AND 								"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR" = "W5_6_A1$1"
(last_successful_index) AND 								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01" = "W5_9_U2$1"
(last_successful_index) AND 								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02" = "W5_12_U3$1"
(last_successful_index) AND 								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03" = "W5_15_U4$1"
(last_successful_index) AND 								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04" = "W5_18_U5$1"
(last_successful_index) AND 								"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05" = "W5_21_U6$1"
(last_successful_index)

              ;
            update_bulk(update_bulk_index) := last_successful_index;
            update_bulk_index := update_bulk_index + 1;
            last_successful_index := last_successful_index + 1;
          EXCEPTION
            WHEN OTHERS THEN
                last_error_number  := SQLCODE;
  last_error_message := SQLERRM;
              IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
                error_rowkey := "WDT_ACADEMIC_TIME_srk"(last_successful_index);
                OWBSYS.WB_RT_MAPAUDIT.error(
                  p_rta=>get_runtime_audit_id,
                  p_step=>get_step_number,
                  p_rtd=>get_audit_detail_id,
                  p_rowkey=>error_rowkey,
                  p_table=>get_target_name,
                  p_column=>'*',
                  p_dstval=>NULL,
                  p_stm=>'TRACE : ' || error_action,
                  p_sqlerr=>SQLCODE,
                  p_sqlerrm=>SQLERRM,
                  p_rowid=>NULL
                );
                get_column_seq := 0;
                

                
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_SD"',0,80),SUBSTRB("W5_2_A9$1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_LD"',0,80),SUBSTRB("W5_3_A2$1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_BEGIN_DATE"',0,80),SUBSTRB("W5_4_A2$1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_END_DATE"',0,80),SUBSTRB("W5_5_A6$1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_SD"',0,80),SUBSTRB("W5_7_A1$1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_LD"',0,80),SUBSTRB("W5_8_A4$1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_SD"',0,80),SUBSTRB("W5_10_U6$1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_LD"',0,80),SUBSTRB("W5_11_U9$1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_SD"',0,80),SUBSTRB("W5_13_U7$1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_LD"',0,80),SUBSTRB("W5_14_U0$1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_SD"',0,80),SUBSTRB("W5_16_U8$1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_LD"',0,80),SUBSTRB("W5_17_U1$1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_SD"',0,80),SUBSTRB("W5_19_U9$1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_LD"',0,80),SUBSTRB("W5_20_U2$1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_SD"',0,80),SUBSTRB("W5_22_U0$1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_LD"',0,80),SUBSTRB("W5_23_U3$1"(last_successful_index),0,2000));
                Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."SYSTEM_LOAD_PROCESS"',0,80),SUBSTRB("W5_24_S0$1"(last_successful_index),0,2000));
                
              END IF;
              IF get_audit_level = AUDIT_COMPLETE THEN
                OWBSYS.WB_RT_MAPAUDIT.register_feedback(
                  p_rta=>get_runtime_audit_id,
                  p_step=>get_step_number,
                  p_rowkey=>error_rowkey,
                  p_status=>'ERROR',
                  p_table=>get_target_name,
                  p_role=>'T',
                  p_action=>error_action
                );
              END IF;
              "WDT_ACADEMIC_TIME_err" := "WDT_ACADEMIC_TIME_err" + 1;
              
              IF get_errors + "WDT_ACADEMIC_TIME_err" > get_max_errors THEN
                get_abort:= TRUE;
              END IF;
              "WDT_ACADEMIC_TIME_si" := last_successful_index + 1;
              EXIT;
          END;
        END LOOP;
    END;
    IF "WDT_ACADEMIC_TIME_si" >= "WDT_ACADEMIC_TIME_i" OR get_abort THEN
      EXIT;
    END IF;
  END LOOP;

  "WDT_ACADEMIC_TIME_i" := 1;

  --process leftover inserts
  insert_bulk_index := 0;
  FOR j IN 1..update_bulk.COUNT LOOP
    insert_bulk_index := insert_bulk_index + 1;
		"W5_1_A9$1"(insert_bulk_index) := "W5_1_A9$1"(update_bulk(j));
		"W5_2_A9$1"(insert_bulk_index) := "W5_2_A9$1"(update_bulk(j));
		"W5_3_A2$1"(insert_bulk_index) := "W5_3_A2$1"(update_bulk(j));
		"W5_4_A2$1"(insert_bulk_index) := "W5_4_A2$1"(update_bulk(j));
		"W5_5_A6$1"(insert_bulk_index) := "W5_5_A6$1"(update_bulk(j));
		"W5_6_A1$1"(insert_bulk_index) := "W5_6_A1$1"(update_bulk(j));
		"W5_7_A1$1"(insert_bulk_index) := "W5_7_A1$1"(update_bulk(j));
		"W5_8_A4$1"(insert_bulk_index) := "W5_8_A4$1"(update_bulk(j));
		"W5_9_U2$1"(insert_bulk_index) := "W5_9_U2$1"(update_bulk(j));
		"W5_10_U6$1"(insert_bulk_index) := "W5_10_U6$1"(update_bulk(j));
		"W5_11_U9$1"(insert_bulk_index) := "W5_11_U9$1"(update_bulk(j));
		"W5_12_U3$1"(insert_bulk_index) := "W5_12_U3$1"(update_bulk(j));
		"W5_13_U7$1"(insert_bulk_index) := "W5_13_U7$1"(update_bulk(j));
		"W5_14_U0$1"(insert_bulk_index) := "W5_14_U0$1"(update_bulk(j));
		"W5_15_U4$1"(insert_bulk_index) := "W5_15_U4$1"(update_bulk(j));
		"W5_16_U8$1"(insert_bulk_index) := "W5_16_U8$1"(update_bulk(j));
		"W5_17_U1$1"(insert_bulk_index) := "W5_17_U1$1"(update_bulk(j));
		"W5_18_U5$1"(insert_bulk_index) := "W5_18_U5$1"(update_bulk(j));
		"W5_19_U9$1"(insert_bulk_index) := "W5_19_U9$1"(update_bulk(j));
		"W5_20_U2$1"(insert_bulk_index) := "W5_20_U2$1"(update_bulk(j));
		"W5_21_U6$1"(insert_bulk_index) := "W5_21_U6$1"(update_bulk(j));
		"W5_22_U0$1"(insert_bulk_index) := "W5_22_U0$1"(update_bulk(j));
		"W5_23_U3$1"(insert_bulk_index) := "W5_23_U3$1"(update_bulk(j));
		"W5_24_S0$1"(insert_bulk_index) := "W5_24_S0$1"(update_bulk(j));
    IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
      "WDT_ACADEMIC_TIME_srk"(insert_bulk_index) := "WDT_ACADEMIC_TIME_srk"(update_bulk(j));
    END IF;
  END LOOP;

  "WDT_ACADEMIC_TIME_si" := 1;
  normal_action := 'INSERT';
  error_action  := 'INSERT';
  LOOP
    EXIT WHEN get_abort OR "WDT_ACADEMIC_TIME_si" > insert_bulk_index;
    get_rowid.DELETE;

    BEGIN
      FORALL i IN "WDT_ACADEMIC_TIME_si"..insert_bulk_index
        INSERT INTO
          "WDT_ACADEMIC_TIME"
          ("WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD",
          "WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_SD",
          "WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_LD",
          "WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_BEGIN_DATE",
          "WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_END_DATE",
          "WDT_ACADEMIC_TIME"."ACADEMIC_YEAR",
          "WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_SD",
          "WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_LD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_SD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_LD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_SD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_LD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_SD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_LD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_SD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_LD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_SD",
          "WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_LD",
          "WDT_ACADEMIC_TIME"."SYSTEM_LOAD_PROCESS")
        VALUES
          ("W5_1_A9$1"(i),
          "W5_2_A9$1"(i),
          "W5_3_A2$1"(i),
          "W5_4_A2$1"(i),
          "W5_5_A6$1"(i),
          "W5_6_A1$1"(i),
          "W5_7_A1$1"(i),
          "W5_8_A4$1"(i),
          "W5_9_U2$1"(i),
          "W5_10_U6$1"(i),
          "W5_11_U9$1"(i),
          "W5_12_U3$1"(i),
          "W5_13_U7$1"(i),
          "W5_14_U0$1"(i),
          "W5_15_U4$1"(i),
          "W5_16_U8$1"(i),
          "W5_17_U1$1"(i),
          "W5_18_U5$1"(i),
          "W5_19_U9$1"(i),
          "W5_20_U2$1"(i),
          "W5_21_U6$1"(i),
          "W5_22_U0$1"(i),
          "W5_23_U3$1"(i),
          "W5_24_S0$1"(i))
        RETURNING ROWID BULK COLLECT INTO get_rowid;
      error_index := "WDT_ACADEMIC_TIME_si" + get_rowid.COUNT;
    EXCEPTION
      WHEN OTHERS THEN
          last_error_number  := SQLCODE;
  last_error_message := SQLERRM;
        error_index := "WDT_ACADEMIC_TIME_si" + get_rowid.COUNT;
        IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
          error_rowkey := "WDT_ACADEMIC_TIME_srk"(error_index);
          OWBSYS.WB_RT_MAPAUDIT.error(
            p_rta=>get_runtime_audit_id,
            p_step=>get_step_number,
            p_rtd=>get_audit_detail_id,
            p_rowkey=>error_rowkey,
            p_table=>get_target_name,
            p_column=>'*',
            p_dstval=>NULL,
            p_stm=>'TRACE 1992: ' || error_action,
            p_sqlerr=>SQLCODE,
            p_sqlerrm=>SQLERRM,
            p_rowid=>NULL
          );
          get_column_seq := 0;
          

          
          
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD"',0,80),SUBSTRB("W5_1_A9$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_SD"',0,80),SUBSTRB("W5_2_A9$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_LD"',0,80),SUBSTRB("W5_3_A2$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_BEGIN_DATE"',0,80),SUBSTRB("W5_4_A2$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_PERIOD_END_DATE"',0,80),SUBSTRB("W5_5_A6$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR"',0,80),SUBSTRB("W5_6_A1$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_SD"',0,80),SUBSTRB("W5_7_A1$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."ACADEMIC_YEAR_LD"',0,80),SUBSTRB("W5_8_A4$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01"',0,80),SUBSTRB("W5_9_U2$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_SD"',0,80),SUBSTRB("W5_10_U6$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_01_LD"',0,80),SUBSTRB("W5_11_U9$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02"',0,80),SUBSTRB("W5_12_U3$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_SD"',0,80),SUBSTRB("W5_13_U7$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_02_LD"',0,80),SUBSTRB("W5_14_U0$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03"',0,80),SUBSTRB("W5_15_U4$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_SD"',0,80),SUBSTRB("W5_16_U8$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_03_LD"',0,80),SUBSTRB("W5_17_U1$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04"',0,80),SUBSTRB("W5_18_U5$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_SD"',0,80),SUBSTRB("W5_19_U9$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_04_LD"',0,80),SUBSTRB("W5_20_U2$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05"',0,80),SUBSTRB("W5_21_U6$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_SD"',0,80),SUBSTRB("W5_22_U0$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."USER_ATTRIBUTE_05_LD"',0,80),SUBSTRB("W5_23_U3$1"(error_index),0,2000));
          Main_ES(get_step_number,error_rowkey,get_target_name,SUBSTRB('"WDT_ACADEMIC_TIME"."SYSTEM_LOAD_PROCESS"',0,80),SUBSTRB("W5_24_S0$1"(error_index),0,2000));
          
        END IF;
        IF get_audit_level = AUDIT_COMPLETE THEN
          OWBSYS.WB_RT_MAPAUDIT.register_feedback(
            p_rta=>get_runtime_audit_id,
            p_step=>get_step_number,
            p_rowkey=>error_rowkey,
            p_status=>'ERROR',
            p_table=>get_target_name,
            p_role=>'T',
            p_action=>error_action
          );
        END IF;
        "WDT_ACADEMIC_TIME_err" := "WDT_ACADEMIC_TIME_err" + 1;
        
        IF get_errors + "WDT_ACADEMIC_TIME_err" > get_max_errors THEN
          get_abort:= TRUE;
        END IF;
    END;

    -- feedback for a bulk of rows
    IF get_audit_level = AUDIT_COMPLETE THEN
      get_rowkey_bulk.DELETE;
      rowkey_bulk_index := 1;
      FOR rowkey_index IN "WDT_ACADEMIC_TIME_si"..error_index - 1 LOOP
        get_rowkey_bulk(rowkey_bulk_index) := "WDT_ACADEMIC_TIME_srk"(rowkey_index);
        rowkey_bulk_index := rowkey_bulk_index + 1;
      END LOOP;
    END IF;
    
IF get_audit_level = AUDIT_COMPLETE THEN
  OWBSYS.WB_RT_MAPAUDIT.register_feedback_bulk(
    p_rta=>get_runtime_audit_id,
    p_step=>get_step_number,
    p_rowkey=>get_rowkey_bulk,
    p_status=>'NEW',
    p_table=>get_target_name,
    p_role=>'T',
    p_action=>normal_action,
    p_rowid=>get_rowid
  );
END IF;

    "WDT_ACADEMIC_TIME_ins" := "WDT_ACADEMIC_TIME_ins" + get_rowid.COUNT;
    "WDT_ACADEMIC_TIME_si" := error_index + 1;
  END LOOP;
  END IF;
END IF;


 IF get_use_hc AND NOT firstround THEN
  COMMIT; -- commit no.27
 END IF;
 IF get_use_hc AND NOT get_row_status THEN
 "WDT_ACADEMIC_TIME_ins" := "WDT_ACADEMIC_TIME_ins0"; 
"WDT_ACADEMIC_TIME_upd" := "WDT_ACADEMIC_TIME_upd0";
END IF;

END "JOINER_DML$1";

---------------------------------------------------------------------------
-- "JOINER_t" main
---------------------------------------------------------------------------

BEGIN
  IF get_abort OR get_abort_procedure THEN
    
    RETURN;
  END IF;

  
  IF NOT get_no_commit THEN
  COMMIT;  -- commit no.7
  sql_stmt := 'ALTER SESSION DISABLE PARALLEL DML';
  EXECUTE IMMEDIATE sql_stmt;
END IF;

  IF NOT "WDT_ACADEMIC_TIME_St" THEN
    -- For normal cursor query loop operation, skip map procedure initialization if 
    -- cursor is already open - procedure initialization should only be done the 
    -- first time the procedure is called (since mapping debugger
    -- executes the procedure multiple times and leaves the cursor open). 
    -- For table function (parallel row mode) operation, the cursor will already be
    -- open when the procedure is called, so execute the initialization.
    IF get_table_function OR (NOT "JOINER_c$1"%ISOPEN) THEN
      IF NOT (get_audit_level = AUDIT_NONE) THEN
        IF NOT "WDT_ACADEMIC_TIME_St" THEN
          "WDT_ACADEMIC_TIME_id" :=
            OWBSYS.WB_RT_MAPAUDIT.auditd_begin(  -- Template AuditDetailBegin
              p_rta=>get_runtime_audit_id,
              p_step=>get_step_number,
              p_name=>get_map_name,
              p_source=>get_source_name,
              p_source_uoid=>get_source_uoid,
              p_target=>'"WDT_ACADEMIC_TIME"',
              p_target_uoid=>'F14CC0123FC97D66E040F00AA4443159',
              p_stm=>'TRACE 1994',
            	p_info=>NULL,
              p_exec_mode=>l_exec_mode
            );
            get_audit_detail_id := "WDT_ACADEMIC_TIME_id";
              
get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
              p_rtd=>get_audit_detail_id,
              p_parent_operator_uoid=>'F14CC012403F7D66E040F00AA4443159', -- Operator WTT_STUDENT_COHORT_CLEAN
              p_parent_object_name=>'WTT_STUDENT_COHORT_CLEAN',
              p_parent_object_uoid=>'F085A9588E159205E040F00AA444128A', -- Table WTT_STUDENT_COHORT_CLEAN
              p_parent_object_type=>'Table',
              p_object_name=>'WTT_STUDENT_COHORT_CLEAN',
              p_object_uoid=>'F085A9588E159205E040F00AA444128A', -- Table WTT_STUDENT_COHORT_CLEAN
              p_object_type=>'Table',
              p_location_uoid=>'F085808747D20042E040F00AA4445414' -- Location EDWSTG_LOCATION
            );  
get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
              p_rtd=>get_audit_detail_id,
              p_parent_operator_uoid=>'F14CC0123FB27D66E040F00AA4443159', -- Operator WCV_DEFAULT_VALUES
              p_parent_object_name=>'WCV_DEFAULT_VALUES',
              p_parent_object_uoid=>'F085A9589FEA9205E040F00AA444128A', -- View WCV_DEFAULT_VALUES
              p_parent_object_type=>'View',
              p_object_name=>'WCV_DEFAULT_VALUES',
              p_object_uoid=>'F085A9589FEA9205E040F00AA444128A', -- View WCV_DEFAULT_VALUES
              p_object_type=>'View',
              p_location_uoid=>'F085808747D20042E040F00AA4445414' -- Location EDWSTG_LOCATION
            );  
get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
              p_rtd=>get_audit_detail_id,
              p_parent_operator_uoid=>'DBD002C3CF3C7A29E04356251895A34F', -- Operator WCV_DEFAULT_VALUES
              p_parent_object_name=>'WCV_DEFAULT_VALUES',
              p_parent_object_uoid=>'ADA129584CBC36F5E04018955625060B', -- View WCV_DEFAULT_VALUES
              p_parent_object_type=>'View',
              p_object_name=>'WCV_DEFAULT_VALUES',
              p_object_uoid=>'ADA129584CBC36F5E04018955625060B', -- View WCV_DEFAULT_VALUES
              p_object_type=>'View',
              p_location_uoid=>'ADA0B2222EF50292E040189556257D87' -- EDWSTG_LOCATION
            );  
get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
              p_rtd=>get_audit_detail_id,
              p_parent_operator_uoid=>'8EA04146AD0F2D12E0440003BAAC9CF3', -- Operator WTT_STUDENT_COHORT_CLEAN
              p_parent_object_name=>'WTT_STUDENT_COHORT_CLEAN',
              p_parent_object_uoid=>'8B7B34DE6B2E5599E0440003BAAC9CF3', -- Table WTT_STUDENT_COHORT_CLEAN
              p_parent_object_type=>'Table',
              p_object_name=>'WTT_STUDENT_COHORT_CLEAN',
              p_object_uoid=>'8B7B34DE6B2E5599E0440003BAAC9CF3', -- Table WTT_STUDENT_COHORT_CLEAN
              p_object_type=>'Table',
              p_location_uoid=>'8848749C75B34564E0440003BAAC9CF3' -- EDWSTG_LOCATION
            );  
get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
              p_rtd=>get_audit_detail_id,
              p_parent_operator_uoid=>'89C2287E668C662EE0440003BAAC9CF3', -- Operator WDT_ACADEMIC_TIME
              p_parent_object_name=>'WDT_ACADEMIC_TIME',
              p_parent_object_uoid=>'884CA879230550E7E0440003BAAC9CF3', -- Table WDT_ACADEMIC_TIME
              p_parent_object_type=>'Table',
              p_object_name=>'WDT_ACADEMIC_TIME',
              p_object_uoid=>'884CA879230550E7E0440003BAAC9CF3', -- Table WDT_ACADEMIC_TIME
              p_object_type=>'Table',
              p_location_uoid=>'8848749C75C84564E0440003BAAC9CF3' -- EDWMGR_LOCATION
            );  
get_audit_detail_type_id := OWBSYS.WB_RT_MAPAUDIT.register_audit_detail_type(
              p_rtd=>get_audit_detail_id,
              p_parent_operator_uoid=>'F14CC0123FC97D66E040F00AA4443159', -- Operator WDT_ACADEMIC_TIME
              p_parent_object_name=>'WDT_ACADEMIC_TIME',
              p_parent_object_uoid=>'F085A9581BE39205E040F00AA444128A', -- Table WDT_ACADEMIC_TIME
              p_parent_object_type=>'Table',
              p_object_name=>'WDT_ACADEMIC_TIME',
              p_object_uoid=>'F085A9581BE39205E040F00AA444128A', -- Table WDT_ACADEMIC_TIME
              p_object_type=>'Table',
              p_location_uoid=>'F085808747B70042E040F00AA4445414' -- Location EDWMGR_LOCATION
            );
        END IF;
        IF NOT get_no_commit THEN
          COMMIT; -- commit no.10
        END IF;
      END IF;

      

      -- Initialize buffer variables
      get_buffer_done.DELETE;
      get_buffer_done_index := 1;

    END IF; -- End if cursor not open

    -- Initialize internal loop index variables
    "JOINER_si$1" := 0;
    "WDT_ACADEMIC_TIME_i" := 1;
    get_rows_processed := FALSE;

    IF NOT get_abort AND NOT get_abort_procedure THEN
      "JOINER_SU$1";

      LOOP
        IF "JOINER_si$1" = 0 THEN
          "JOINER_RD$1";   -- Fetch data from source
          IF NOT get_read_success THEN
            bulk_count := "J1_23_A9$1".COUNT - 1;
          ELSE
            bulk_count := "J1_23_A9$1".COUNT;
          END IF;
                                        IF bulk_commit THEN
                                                bulk_commit_count := 0;
                                                bulk_commit := FALSE;
                                        END IF;
                                        bulk_commit_count := bulk_commit_count + bulk_count;

 
          IF get_use_hc THEN
            dml_bsize := 0;
            "WDT_ACADEMIC_TIME_ir".DELETE;
"WDT_ACADEMIC_TIME_i" := 1;
          END IF;
        END IF;

        -- Processing:
        "JOINER_i$1" := "JOINER_si$1";
        BEGIN
          
          LOOP
            EXIT WHEN "WDT_ACADEMIC_TIME_i" > get_bulk_size OR get_abort OR get_abort_procedure;

            "JOINER_i$1" := "JOINER_i$1" + 1;
            "JOINER_si$1" := "JOINER_i$1";
            IF get_use_hc THEN
              get_row_status := TRUE;
                "WDT_ACADEMIC_TIME_new" := FALSE;
            END IF;

            get_buffer_done(get_buffer_done_index) := 
              ("JOINER_c$1"%NOTFOUND AND
               "JOINER_i$1" > bulk_count);

            IF (NOT get_buffer_done(get_buffer_done_index)) AND
              "JOINER_i$1" > bulk_count THEN
            
              "JOINER_si$1" := 0;
              EXIT;
            END IF;


            
get_target_name := '"WDT_ACADEMIC_TIME"';
            get_audit_detail_id := "WDT_ACADEMIC_TIME_id";
            IF NOT "WDT_ACADEMIC_TIME_St" AND NOT get_buffer_done(get_buffer_done_index) THEN
              BEGIN
                get_rows_processed := true; -- Set to indicate that some row data was processed (for debugger)
            		error_stmt := SUBSTRB('"W5_1_A9$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_23_A9$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_1_A9$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_23_A9$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_1_A9$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_23_A9$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_1_A9$1" :=
            
            "J1_23_A9$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_2_A9$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_24_A9$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_2_A9$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_24_A9$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_2_A9$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_24_A9$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_2_A9$1" :=
            
            "J1_24_A9$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_3_A2$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_25_A2$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_3_A2$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_25_A2$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_3_A2$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_25_A2$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_3_A2$1" :=
            
            "J1_25_A2$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_4_A2$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_26_A2$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_4_A2$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_26_A2$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_4_A2$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_26_A2$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_4_A2$1" :=
            
            "J1_26_A2$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_5_A6$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_27_A6$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_5_A6$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_27_A6$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_5_A6$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_27_A6$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_5_A6$1" :=
            
            "J1_27_A6$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_6_A1$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_28_A1$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_6_A1$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_28_A1$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_6_A1$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_28_A1$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_6_A1$1" :=
            
            "J1_28_A1$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_7_A1$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_29_A1$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_7_A1$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_29_A1$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_7_A1$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_29_A1$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_7_A1$1" :=
            
            "J1_29_A1$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_8_A4$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_30_A4$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_8_A4$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_30_A4$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_8_A4$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_30_A4$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_8_A4$1" :=
            
            "J1_30_A4$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_9_U2$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_31_U2$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_9_U2$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_31_U2$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_9_U2$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_31_U2$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_9_U2$1" :=
            
            "J1_31_U2$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_10_U6$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_32_U6$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_10_U6$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_32_U6$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_10_U6$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_32_U6$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_10_U6$1" :=
            
            "J1_32_U6$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_11_U9$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_33_U9$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_11_U9$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_33_U9$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_11_U9$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_33_U9$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_11_U9$1" :=
            
            "J1_33_U9$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_12_U3$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_34_U3$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_12_U3$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_34_U3$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_12_U3$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_34_U3$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_12_U3$1" :=
            
            "J1_34_U3$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_13_U7$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_35_U7$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_13_U7$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_35_U7$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_13_U7$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_35_U7$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_13_U7$1" :=
            
            "J1_35_U7$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_14_U0$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_36_U0$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_14_U0$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_36_U0$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_14_U0$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_36_U0$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_14_U0$1" :=
            
            "J1_36_U0$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_15_U4$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_37_U4$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_15_U4$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_37_U4$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_15_U4$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_37_U4$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_15_U4$1" :=
            
            "J1_37_U4$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_16_U8$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_38_U8$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_16_U8$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_38_U8$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_16_U8$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_38_U8$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_16_U8$1" :=
            
            "J1_38_U8$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_17_U1$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_39_U1$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_17_U1$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_39_U1$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_17_U1$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_39_U1$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_17_U1$1" :=
            
            "J1_39_U1$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_18_U5$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_40_U5$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_18_U5$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_40_U5$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_18_U5$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_40_U5$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_18_U5$1" :=
            
            "J1_40_U5$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_19_U9$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_41_U9$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_19_U9$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_41_U9$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_19_U9$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_41_U9$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_19_U9$1" :=
            
            "J1_41_U9$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_20_U2$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_42_U2$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_20_U2$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_42_U2$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_20_U2$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_42_U2$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_20_U2$1" :=
            
            "J1_42_U2$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_21_U6$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_43_U6$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_21_U6$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_43_U6$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_21_U6$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_43_U6$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_21_U6$1" :=
            
            "J1_43_U6$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_22_U0$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_44_U0$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_22_U0$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_44_U0$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_22_U0$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_44_U0$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_22_U0$1" :=
            
            "J1_44_U0$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_23_U3$1"("WDT_ACADEMIC_TIME_i") := 
            
            "J1_45_U3$1"("JOINER_i$1");',0,2000);
            error_column := SUBSTRB('"W5_23_U3$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB("J1_45_U3$1"("JOINER_i$1"),0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_23_U3$1"("WDT_ACADEMIC_TIME_i") :=
            
            "J1_45_U3$1"("JOINER_i$1");
            
            ELSIF get_row_status THEN
              "SV_W5_23_U3$1" :=
            
            "J1_45_U3$1"("JOINER_i$1");
            
            ELSE
              NULL;
            END IF;
            
            		error_stmt := SUBSTRB('"W5_24_S0$1"("WDT_ACADEMIC_TIME_i") := 
            
            ''STUDENT_COHORT''/* ATTRIBUTE CONSTANT.OUTGRP1.SYSTEM_LOAD_PROCESS */;',0,2000);
            error_column := SUBSTRB('"W5_24_S0$1"',0,80);
            
            BEGIN
              error_value := SUBSTRB('STUDENT_COHORT'/* ATTRIBUTE CONSTANT.OUTGRP1.SYSTEM_LOAD_PROCESS */,0,2000);
            EXCEPTION 
              WHEN OTHERS THEN
                error_value := '*';
            END;
            
            IF NOT get_use_hc THEN
              "W5_24_S0$1"("WDT_ACADEMIC_TIME_i") :=
            
            'STUDENT_COHORT'/* ATTRIBUTE CONSTANT.OUTGRP1.SYSTEM_LOAD_PROCESS */;
            
            ELSIF get_row_status THEN
              "SV_W5_24_S0$1" :=
            
            'STUDENT_COHORT'/* ATTRIBUTE CONSTANT.OUTGRP1.SYSTEM_LOAD_PROCESS */;
            
            ELSE
              NULL;
            END IF;
            
            
            
                IF get_audit_level = AUDIT_ERROR_DETAILS OR get_audit_level = AUDIT_COMPLETE THEN
                  IF NOT get_use_hc THEN
                    "WDT_ACADEMIC_TIME_srk"("WDT_ACADEMIC_TIME_i") := get_rowkey + "JOINER_i$1" - 1;
                  ELSIF get_row_status THEN
                    "SV_WDT_ACADEMIC_TIME_srk" := get_rowkey + "JOINER_i$1" - 1;
                  ELSE
                    NULL;
                  END IF;
                  END IF;
                  IF get_use_hc THEN
                  "WDT_ACADEMIC_TIME_new" := TRUE;
                ELSE
                  "WDT_ACADEMIC_TIME_i" := "WDT_ACADEMIC_TIME_i" + 1;
                END IF;
              EXCEPTION
                WHEN OTHERS THEN
                    last_error_number  := SQLCODE;
  last_error_message := SQLERRM;
             
                  "JOINER_ER$1"('TRACE 1995: ' || error_stmt, error_column, error_value, SQLCODE, SQLERRM, get_audit_detail_id, "JOINER_i$1");
                  
                  "WDT_ACADEMIC_TIME_err" := "WDT_ACADEMIC_TIME_err" + 1;
                  
                  IF get_errors + "WDT_ACADEMIC_TIME_err" > get_max_errors THEN
                    get_abort:= TRUE;
                  END IF;
                  get_row_status := FALSE; 
              END;
            END IF;
            
            
            
              
            
             EXIT WHEN get_buffer_done(get_buffer_done_index);

            IF get_use_hc AND get_row_status AND ("WDT_ACADEMIC_TIME_new") THEN
              dml_bsize := dml_bsize + 1;
            	IF "WDT_ACADEMIC_TIME_new" 
            AND (NOT "WDT_ACADEMIC_TIME_nul") THEN
              "WDT_ACADEMIC_TIME_ir"(dml_bsize) := "WDT_ACADEMIC_TIME_i";
            	"W5_1_A9$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_1_A9$1";
            	"W5_2_A9$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_2_A9$1";
            	"W5_3_A2$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_3_A2$1";
            	"W5_4_A2$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_4_A2$1";
            	"W5_5_A6$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_5_A6$1";
            	"W5_6_A1$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_6_A1$1";
            	"W5_7_A1$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_7_A1$1";
            	"W5_8_A4$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_8_A4$1";
            	"W5_9_U2$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_9_U2$1";
            	"W5_10_U6$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_10_U6$1";
            	"W5_11_U9$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_11_U9$1";
            	"W5_12_U3$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_12_U3$1";
            	"W5_13_U7$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_13_U7$1";
            	"W5_14_U0$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_14_U0$1";
            	"W5_15_U4$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_15_U4$1";
            	"W5_16_U8$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_16_U8$1";
            	"W5_17_U1$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_17_U1$1";
            	"W5_18_U5$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_18_U5$1";
            	"W5_19_U9$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_19_U9$1";
            	"W5_20_U2$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_20_U2$1";
            	"W5_21_U6$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_21_U6$1";
            	"W5_22_U0$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_22_U0$1";
            	"W5_23_U3$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_23_U3$1";
            	"W5_24_S0$1"("WDT_ACADEMIC_TIME_i") := "SV_W5_24_S0$1";
              "WDT_ACADEMIC_TIME_srk"("WDT_ACADEMIC_TIME_i") := "SV_WDT_ACADEMIC_TIME_srk";
              "WDT_ACADEMIC_TIME_i" := "WDT_ACADEMIC_TIME_i" + 1;
            ELSE
              "WDT_ACADEMIC_TIME_ir"(dml_bsize) := 0;
            END IF;
            END IF;
            
          END LOOP;

          "JOINER_DML$1"(1, TRUE);
          IF get_use_hc THEN
            IF NOT get_row_status THEN
              FOR start_index IN 1..dml_bsize LOOP
                "JOINER_DML$1"(start_index, FALSE);
              END LOOP;
            ELSE
              COMMIT;
            END IF;
          END IF;
          
        EXCEPTION
          WHEN OTHERS THEN
              last_error_number  := SQLCODE;
  last_error_message := SQLERRM;
            "JOINER_ER$1"('TRACE 1993: ' || error_stmt, '*', NULL, SQLCODE, SQLERRM, NULL, "JOINER_i$1");
            get_errors := get_errors + 1;
            IF get_errors > get_max_errors THEN  
  get_abort := TRUE;
END IF;
            
        END;
        
  IF NOT "WDT_ACADEMIC_TIME_St" AND bulk_commit_count > get_commit_frequency THEN
            IF NOT (get_audit_level = AUDIT_NONE) THEN
              OWBSYS.WB_RT_MAPAUDIT.auditd_progress(
                p_rtd=>"WDT_ACADEMIC_TIME_id",
                p_sel=>get_map_selected,
                p_ins=>"WDT_ACADEMIC_TIME_ins",
                p_upd=>"WDT_ACADEMIC_TIME_upd",
                p_del=>"WDT_ACADEMIC_TIME_del",
                p_err=>"WDT_ACADEMIC_TIME_err",
                p_dis=>NULL
              );
            END IF;
            IF NOT get_no_commit THEN
              COMMIT; -- commit no.25
              bulk_commit := TRUE;
            END IF;
          END IF;


        cursor_exhausted := "JOINER_c$1"%NOTFOUND;
        exit_loop_normal := get_abort OR get_abort_procedure OR (cursor_exhausted AND "JOINER_i$1" > bulk_count);
        exit_loop_early := get_rows_processed AND get_bulk_loop_count IS NOT NULL AND "JOINER_i$1" >= get_bulk_loop_count;
        get_close_cursor := get_abort OR get_abort_procedure OR cursor_exhausted;
        EXIT WHEN exit_loop_normal OR exit_loop_early;

      END LOOP;
    END IF;
    IF NOT get_no_commit THEN
      COMMIT; -- commit no.11
    END IF;
    BEGIN
      IF get_close_cursor THEN
        CLOSE "JOINER_c$1";
      END IF;
    EXCEPTION WHEN OTHERS THEN
      NULL;
      END;
    -- Do post processing only after procedure has been called for the last time and the cursor is closing
    IF get_close_cursor THEN
      
IF NOT get_abort AND NOT get_abort_procedure AND NOT get_no_commit THEN
        -- resolve actual owner and name
        OWBSYS.WB_RT_MAPAUDIT_UTIL.resolve_name(p_original_owner=>
      USER, p_original_name=>'WDT_ACADEMIC_TIME', p_actual_owner=>actual_owner, p_actual_name=>actual_name);
      
        IF actual_name IS NOT NULL THEN
          SELECT NVL(num_rows, 0) INTO get_map_num_rows
          FROM all_tables
          WHERE table_name = actual_name
          AND owner = actual_owner;
          IF ("WDT_ACADEMIC_TIME_ins" + "WDT_ACADEMIC_TIME_upd" + "WDT_ACADEMIC_TIME_del") >= get_map_num_rows THEN
            a_table_to_analyze.ownname := actual_owner;
            a_table_to_analyze.tabname := actual_name;
            a_table_to_analyze.estimate_percent := 5;
            a_table_to_analyze.granularity := 'ALL';
            a_table_to_analyze.cascade := TRUE;
            a_table_to_analyze.degree  := NULL;
            "EDW_STUD_CHRT_DIM_ACAD_TIME".tables_to_analyze(
          "EDW_STUD_CHRT_DIM_ACAD_TIME".tables_to_analyze.COUNT + 1) := a_table_to_analyze;
          END IF;
        END IF;
      END IF;
      
      NULL;
    END IF; -- If get_close_cursor
  END IF;
  
  IF NOT "WDT_ACADEMIC_TIME_St"
    AND NOT (get_audit_level = AUDIT_NONE) THEN
      OWBSYS.WB_RT_MAPAUDIT.auditd_end(
        p_rtd=>"WDT_ACADEMIC_TIME_id",
        p_sel=>get_map_selected,  -- AuditDetailEnd1
        p_ins=>"WDT_ACADEMIC_TIME_ins",
        p_upd=>"WDT_ACADEMIC_TIME_upd",
        p_del=>"WDT_ACADEMIC_TIME_del",
        p_err=>"WDT_ACADEMIC_TIME_err",
        p_dis=>NULL
      );
    END IF;
  	get_inserted := get_inserted + "WDT_ACADEMIC_TIME_ins";
    get_updated  := get_updated  + "WDT_ACADEMIC_TIME_upd";
    get_deleted  := get_deleted  + "WDT_ACADEMIC_TIME_del";
    get_errors   := get_errors   + "WDT_ACADEMIC_TIME_err";

  get_selected := get_selected + get_map_selected;
  IF NOT get_no_commit THEN
  COMMIT;  -- commit no.21
END IF;

END "JOINER_t";







PROCEDURE logTextToUser(p_text IN VARCHAR2) IS
  log_clob CLOB;
  log_line VARCHAR2(32767);
BEGIN
  DBMS_LOB.CREATETEMPORARY(log_clob,TRUE);
  dbms_lob.open(log_clob, DBMS_LOB.LOB_READWRITE);
  log_line := p_text || '
';
  dbms_lob.writeappend(log_clob, LENGTH(log_line), log_line);
  dbms_lob.close(log_clob);
  WB_RT_MAPAUDIT.log_file(p_rta=>get_runtime_audit_id, p_text=>log_clob);
EXCEPTION WHEN OTHERS THEN
  dbms_output.put_line(SQLERRM);
END logTextToUser;

PROCEDURE Initialize(p_env IN OWBSYS.WB_RT_MAPAUDIT.WB_RT_NAME_VALUES)  IS
BEGIN
  get_selected := 0;
  get_inserted := 0;
  get_updated  := 0;
  get_deleted  := 0;
  get_merged   := 0;
  get_errors   := 0;
  get_logical_errors := 0;
  get_abort    := FALSE;
  get_abort_procedure  := FALSE;

  FOR i IN 1..p_env.COUNT LOOP
    IF p_env(i).param_value IS NOT NULL THEN
      IF p_env(i).param_name = 'MAX_NO_OF_ERRORS' THEN
        get_max_errors := p_env(i).param_value;

      ELSIF p_env(i).param_name = 'COMMIT_FREQUENCY' THEN
        get_commit_frequency := p_env(i).param_value;
      ELSIF p_env(i).param_name = 'OPERATING_MODE' THEN
        get_operating_mode := p_env(i).param_value;
      ELSIF p_env(i).param_name = 'BULK_SIZE' THEN
        get_bulk_size := p_env(i).param_value;
      ELSIF p_env(i).param_name = 'AUDIT_LEVEL' THEN
        get_audit_level := p_env(i).param_value;
      ELSIF p_env(i).param_name = 'AUDIT_ID' THEN
        get_audit_id := p_env(i).param_value;
      ELSIF p_env(i).param_name = 'PURGE_GROUP' THEN
        get_purge_group := p_env(i).param_value;
      ELSIF p_env(i).param_name = 'OBJECT_ID' THEN
        OWB$MAP_OBJECT_ID := p_env(i).param_value;
      END IF;
    END IF;
  END LOOP;




        IF NOT (get_job_audit) THEN
            get_audit_level := AUDIT_NONE;
        END IF;

  IF NOT (get_audit_level = AUDIT_NONE) THEN
    get_runtime_audit_id := OWBSYS.WB_RT_MAPAUDIT.audit_begin(  -- Template AuditBegin
      p_auditid=>get_audit_id,
      p_lob_uoid=>get_lob_uoid,
      p_lob_name=>get_model_name,
      p_purge_group=>get_purge_group,
      p_parent=>NULL,
      p_source=>'"EDWSTG"."WCV_DEFAULT_VALUES",DUAL,"EDWSTG"."WTT_STUDENT_COHORT_CLEAN"',
      p_source_uoid=>'F14CC0123FB27D66E040F00AA4443159',
      p_target=>'"WDT_ACADEMIC_TIME"',
      p_target_uoid=>'F14CC0123FC97D66E040F00AA4443159',      p_info=>NULL,
      
            p_type=>'PLSQLMap',
      
      p_date=>get_cycle_date
    );
  END IF;






  IF NOT get_no_commit THEN
    COMMIT; -- commit no.1
  END IF;
END Initialize;

PROCEDURE Analyze_Targets IS
BEGIN
  FOR i IN 1..tables_to_analyze.COUNT LOOP
    OWBSYS.WB_RT_MAPAUDIT_UTIL_INVOKER.gather_table_stats(
      p_ownname          => tables_to_analyze(i).ownname,
      p_tabname          => tables_to_analyze(i).tabname,
      p_estimate_percent => tables_to_analyze(i).estimate_percent,
      p_granularity      => tables_to_analyze(i).granularity,
      p_cascade          => tables_to_analyze(i).cascade,
      p_degree           => tables_to_analyze(i).degree);
  END LOOP;
END Analyze_Targets;


PROCEDURE Finalize(p_env IN OWBSYS.WB_RT_MAPAUDIT.WB_RT_NAME_VALUES)  IS
BEGIN
  IF NOT get_no_commit THEN
    COMMIT; -- commit no.13
  END IF;





  IF get_abort THEN
    get_status := 1;
  ELSIF get_errors > 0 THEN
    get_status := 2;
  ELSE
    get_status := 0;
  END IF;
  get_processed := get_inserted + get_deleted + get_updated + get_merged; 
  IF (get_errors = 0) THEN
    get_error_ratio := 0;
  ELSE
    get_error_ratio := (get_errors /(get_errors + get_processed)) * 100;
  END IF;

  IF NOT (get_audit_level = AUDIT_NONE) THEN
  IF get_status = 0 THEN
    OWBSYS.WB_RT_MAPAUDIT.audit_end(
      p_rta=>get_runtime_audit_id,
      p_sel=>get_selected,
      p_ins=>get_inserted,
      p_upd=>get_updated,
      p_del=>get_deleted,
      p_err=>get_errors,
      p_dis=>NULL,
      p_logical_err=>get_logical_errors,
      p_mer=>get_merged
    );
  ELSE
    OWBSYS.WB_RT_MAPAUDIT.audit_fail(
      p_rta=>get_runtime_audit_id,
      p_status=>get_status,
      p_sel=>get_selected,
      p_ins=>get_inserted,
      p_upd=>get_updated,
      p_del=>get_deleted,
      p_err=>get_errors,
      p_dis=>NULL,
      p_logical_err=>get_logical_errors,
      p_mer=>get_merged
    );
  END IF;
END IF;


  Analyze_Targets;

        
END Finalize;



FUNCTION Main(p_env IN OWBSYS.WB_RT_MAPAUDIT.WB_RT_NAME_VALUES)  RETURN NUMBER IS
get_batch_status           BOOLEAN := TRUE;
x_schema                   VARCHAR2(30);
BEGIN

  IF OWBSYS.WB_RT_MAPAUDIT_UTIL.supportsDesignClient(p_designVersion=>'11.2.0.2.0', p_minRuntimeVersion=>'11.2.0.2.0') < 1 THEN
    raise_application_error(-20103, 'Incompatible runtime and design client versions.');
  END IF;
        
        SELECT ao.owner INTO x_schema
        FROM   user_objects uo, all_objects ao
        WHERE  uo.object_type = 'PACKAGE'
        AND    uo.object_name = 'EDW_STUD_CHRT_DIM_ACAD_TIME'
        AND    uo.object_id = ao.object_id;
 
        OWBSYS.wb_rt_mapaudit_util.set_schema_workspace(x_schema);
    
  Initialize(p_env);
   
  
  
  
  
  
    
  NULL;
  
  
   -- Initialize all batch status variables
   "WDT_ACADEMIC_TIME_St" := FALSE;
  
   --  Processing for different operating modes
   IF get_operating_mode = MODE_SET THEN
    IF get_use_hc AND NOT get_no_commit THEN
     IF get_enable_parallel_dml THEN
      EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
     ELSE
      EXECUTE IMMEDIATE 'ALTER SESSION DISABLE PARALLEL DML';
     END IF;
    END IF;
    
    IF NOT get_use_hc OR get_batch_status THEN
        "WDT_ACADEMIC_TIME_St" := "WDT_ACADEMIC_TIME_Bat";
        get_batch_status := get_batch_status AND "WDT_ACADEMIC_TIME_St";
      END IF;
  
    IF get_use_hc THEN
     IF NOT get_batch_status THEN
      get_inserted := 0;
      get_updated  := 0;
      get_deleted  := 0;
      get_merged   := 0;
      get_logical_errors := 0;
     END IF;
    END IF;
  
   END IF;
   IF get_operating_mode = MODE_ROW THEN
   "JOINER_p";
   END IF;
   IF get_operating_mode = MODE_SET_FAILOVER_ROW THEN
    
    IF get_batch_status THEN
        IF NOT get_use_hc OR get_batch_status THEN
          "WDT_ACADEMIC_TIME_St" := "WDT_ACADEMIC_TIME_Bat";
          get_batch_status := get_batch_status AND "WDT_ACADEMIC_TIME_St";
        END IF;
      END IF;
    IF get_use_hc THEN
     IF NOT get_batch_status AND get_use_hc THEN
      get_inserted := 0;
      get_updated  := 0;
      get_deleted  := 0;
      get_merged   := 0;
      get_logical_errors := 0;
  "WDT_ACADEMIC_TIME_St" := FALSE;
  
     END IF;
    END IF;
  
  "JOINER_p";
  
   END IF;
   IF get_operating_mode = MODE_ROW_TARGET THEN
  "JOINER_t";
  
   END IF;
   IF get_operating_mode = MODE_SET_FAILOVER_ROW_TARGET THEN
    
    IF get_batch_status THEN
        IF NOT get_use_hc OR get_batch_status THEN
          "WDT_ACADEMIC_TIME_St" := "WDT_ACADEMIC_TIME_Bat";
          get_batch_status := get_batch_status AND "WDT_ACADEMIC_TIME_St";
        END IF;
      END IF;
    IF NOT get_batch_status AND get_use_hc THEN
     get_inserted := 0;
     get_updated  := 0;
     get_deleted  := 0;
     get_merged   := 0;
     get_logical_errors := 0;
  "WDT_ACADEMIC_TIME_St" := FALSE;
  
    END IF;
  "JOINER_t";
  
   END IF;
  
  
   Finalize(p_env);
   
   RETURN get_status;
  END;

FUNCTION encode_operating_mode(p_operating_mode IN VARCHAR2) RETURN NUMBER IS
BEGIN
  IF p_operating_mode IS NULL THEN
    RETURN get_operating_mode;
  END IF;
  IF p_operating_mode = 'SET_BASED' THEN
    RETURN MODE_SET;
  ELSIF p_operating_mode = 'ROW_BASED' THEN
    RETURN MODE_ROW;
  ELSIF p_operating_mode = 'ROW_BASED_TARGET_ONLY' THEN
    RETURN MODE_ROW_TARGET;
  ELSIF p_operating_mode = 'SET_BASED_FAIL_OVER_TO_ROW_BASED' THEN
    RETURN MODE_SET_FAILOVER_ROW;
  ELSE
    RETURN MODE_SET_FAILOVER_ROW_TARGET;
  END IF;
END encode_operating_mode;

FUNCTION encode_audit_level(p_audit_level IN VARCHAR2) RETURN NUMBER IS
BEGIN
  IF p_audit_level IS NULL THEN
    RETURN get_audit_level;
  END IF;
  IF p_audit_level = 'NONE' THEN
    RETURN AUDIT_NONE;
  ELSIF p_audit_level = 'STATISTICS' THEN
    RETURN AUDIT_STATISTICS;
  ELSIF p_audit_level = 'ERROR_DETAILS' THEN
    RETURN AUDIT_ERROR_DETAILS;
  ELSE
    RETURN AUDIT_COMPLETE;
  END IF;
END encode_audit_level;

FUNCTION encode_job_audit(p_job_audit IN VARCHAR2) RETURN BOOLEAN IS
BEGIN
  IF upper(p_job_audit) = 'TRUE' THEN
     RETURN true;
  ELSIF upper(p_job_audit) = 'FALSE' THEN
     RETURN false;
  ELSE
     RETURN true;
  END IF;
END encode_job_audit;



PROCEDURE Main(p_status OUT VARCHAR2,
               p_max_no_of_errors IN VARCHAR2 DEFAULT NULL,
               p_commit_frequency IN VARCHAR2 DEFAULT NULL,
               p_operating_mode   IN VARCHAR2 DEFAULT NULL,
               p_bulk_size        IN VARCHAR2 DEFAULT NULL,
               p_audit_level      IN VARCHAR2 DEFAULT NULL,
               p_purge_group      IN VARCHAR2 DEFAULT NULL,
               p_job_audit        IN VARCHAR2 DEFAULT 'TRUE')
 IS
  x_schema      VARCHAR2(30);

  x_audit_id    NUMBER;
  x_object_id   NUMBER;

  x_env         OWBSYS.wb_rt_mapaudit.wb_rt_name_values;
  x_param       OWBSYS.wb_rt_mapaudit.wb_rt_name_value;

  x_result      NUMBER;
  x_return_code NUMBER;

BEGIN
  -- validate parameters

  IF NOT OWBSYS.wb_rt_mapaudit_util.validate_runtime_parameter('MAX_NO_OF_ERRORS',
                                                        p_max_no_of_errors) OR
     NOT OWBSYS.wb_rt_mapaudit_util.validate_runtime_parameter('COMMIT_FREQUENCY',
                                                        p_commit_frequency) OR
     NOT OWBSYS.wb_rt_mapaudit_util.validate_runtime_parameter('OPERATING_MODE',
                                                        p_operating_mode)   OR
     NOT OWBSYS.wb_rt_mapaudit_util.validate_runtime_parameter('BULK_SIZE',
                                                        p_bulk_size)        OR
     NOT OWBSYS.wb_rt_mapaudit_util.validate_runtime_parameter('AUDIT_LEVEL',
                                                        p_audit_level) THEN
    p_status := 'FAILURE';
    RETURN;
  END IF;

  -- perform pre-run setup

  SELECT ao.owner INTO x_schema
  FROM   user_objects uo, all_objects ao
  WHERE  uo.object_type = 'PACKAGE'
  AND    uo.object_name = 'EDW_STUD_CHRT_DIM_ACAD_TIME'
  AND    uo.object_id = ao.object_id;
 
  get_job_audit := encode_job_audit(p_job_audit);

  IF get_job_audit THEN 
     OWBSYS.wb_rt_mapaudit_util.premap('EDW_STUD_CHRT_DIM_ACAD_TIME', x_schema, x_audit_id, x_object_id);
  ELSE
    OWBSYS.wb_rt_mapaudit_util.set_schema_workspace(x_schema);
  END IF;

  -- prepare parameters for Main:

  x_param.param_name := 'AUDIT_ID';
  x_param.param_value := x_audit_id;
  x_env(1) := x_param;

  x_param.param_name := 'OBJECT_ID';
  x_param.param_value := x_object_id;
  x_env(2) := x_param;

  x_param.param_name := 'MAX_NO_OF_ERRORS';
  x_param.param_value := p_max_no_of_errors;
  x_env(3) := x_param;

  x_param.param_name := 'COMMIT_FREQUENCY';
  x_param.param_value := p_commit_frequency;
  x_env(4) := x_param;

  x_param.param_name := 'OPERATING_MODE';
  x_param.param_value := encode_operating_mode(p_operating_mode);
  x_env(5) := x_param;

  x_param.param_name := 'BULK_SIZE';
  x_param.param_value := p_bulk_size;
  x_env(6) := x_param;

  x_param.param_name := 'AUDIT_LEVEL';
  x_param.param_value := encode_audit_level(p_audit_level);
  x_env(7) := x_param;

  x_param.param_name := 'PURGE_GROUP';
  x_param.param_value := p_purge_group;
  x_env(8) := x_param;


  IF get_job_audit AND x_audit_id IS NOT NULL THEN
  -- register "system" parameters:
  FOR i IN 3..8 LOOP
    IF x_env(i).param_value IS NOT NULL THEN
      OWBSYS.wb_rt_mapaudit_util.register_sys_param(x_audit_id,
                                             x_env(i).param_name,
                                             x_env(i).param_value);
    END IF;
  END LOOP;
  END IF;

  -- really run it:
  -- return code from mapping is
  --   0 - success
  --   1 - failure
  --   2 - completed (with errors/warnings)
  x_return_code := NULL;
  BEGIN
      x_result := Main(x_env);
  EXCEPTION
    WHEN OTHERS THEN
      x_result := 1;
      x_return_code := SQLCODE;
  END;

  IF get_job_audit AND x_audit_id IS NOT NULL THEN
  -- perform post map cleanup

  IF (get_job_audit) THEN
    OWBSYS.wb_rt_mapaudit_util.postmap(x_audit_id, x_result, x_return_code);
  END IF;

  -- show results:
  OWBSYS.wb_rt_mapaudit_util.show_run_results(x_audit_id);
  END IF;

  -- set return status
  IF x_result = 0 THEN
    p_status := 'OK';
  ELSIF x_result = 1 THEN
    p_status := 'FAILURE (ERROR CODE='||x_return_code||')';
  ELSE
    p_status := 'OK_WITH_WARNINGS';
  END IF;

END Main;

PROCEDURE Close_Cursors IS
BEGIN
BEGIN
  IF "JOINER_c"%ISOPEN THEN
    CLOSE "JOINER_c";
  END IF;
EXCEPTION
  WHEN OTHERS THEN
    NULL;    
END;BEGIN
  IF "JOINER_c$1"%ISOPEN THEN
    CLOSE "JOINER_c$1";
  END IF;
EXCEPTION
  WHEN OTHERS THEN
    NULL;    
END;

END Close_Cursors;



END "EDW_STUD_CHRT_DIM_ACAD_TIME";
/